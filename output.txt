move counter at starting position is 0
dimensions are the following: [8, 8, 8]
Graph with 512 nodes and 1536 edges
[(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 0, 4), (0, 0, 5), (0, 0, 6), (0, 0, 7), (0, 1, 0), (0, 1, 1), (0, 1, 2), (0, 1, 3), (0, 1, 4), (0, 1, 5), (0, 1, 6), (0, 1, 7), (0, 2, 0), (0, 2, 1), (0, 2, 2), (0, 2, 3), (0, 2, 4), (0, 2, 5), (0, 2, 6), (0, 2, 7), (0, 3, 0), (0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 3, 5), (0, 3, 6), (0, 3, 7), (0, 4, 0), (0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (0, 4, 5), (0, 4, 6), (0, 4, 7), (0, 5, 0), (0, 5, 1), (0, 5, 2), (0, 5, 3), (0, 5, 4), (0, 5, 5), (0, 5, 6), (0, 5, 7), (0, 6, 0), (0, 6, 1), (0, 6, 2), (0, 6, 3), (0, 6, 4), (0, 6, 5), (0, 6, 6), (0, 6, 7), (0, 7, 0), (0, 7, 1), (0, 7, 2), (0, 7, 3), (0, 7, 4), (0, 7, 5), (0, 7, 6), (0, 7, 7), (1, 0, 0), (1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 0, 4), (1, 0, 5), (1, 0, 6), (1, 0, 7), (1, 1, 0), (1, 1, 1), (1, 1, 2), (1, 1, 3), (1, 1, 4), (1, 1, 5), (1, 1, 6), (1, 1, 7), (1, 2, 0), (1, 2, 1), (1, 2, 2), (1, 2, 3), (1, 2, 4), (1, 2, 5), (1, 2, 6), (1, 2, 7), (1, 3, 0), (1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 3, 5), (1, 3, 6), (1, 3, 7), (1, 4, 0), (1, 4, 1), (1, 4, 2), (1, 4, 3), (1, 4, 4), (1, 4, 5), (1, 4, 6), (1, 4, 7), (1, 5, 0), (1, 5, 1), (1, 5, 2), (1, 5, 3), (1, 5, 4), (1, 5, 5), (1, 5, 6), (1, 5, 7), (1, 6, 0), (1, 6, 1), (1, 6, 2), (1, 6, 3), (1, 6, 4), (1, 6, 5), (1, 6, 6), (1, 6, 7), (1, 7, 0), (1, 7, 1), (1, 7, 2), (1, 7, 3), (1, 7, 4), (1, 7, 5), (1, 7, 6), (1, 7, 7), (2, 0, 0), (2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 0, 6), (2, 0, 7), (2, 1, 0), (2, 1, 1), (2, 1, 2), (2, 1, 3), (2, 1, 4), (2, 1, 5), (2, 1, 6), (2, 1, 7), (2, 2, 0), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 2, 6), (2, 2, 7), (2, 3, 0), (2, 3, 1), (2, 3, 2), (2, 3, 3), (2, 3, 4), (2, 3, 5), (2, 3, 6), (2, 3, 7), (2, 4, 0), (2, 4, 1), (2, 4, 2), (2, 4, 3), (2, 4, 4), (2, 4, 5), (2, 4, 6), (2, 4, 7), (2, 5, 0), (2, 5, 1), (2, 5, 2), (2, 5, 3), (2, 5, 4), (2, 5, 5), (2, 5, 6), (2, 5, 7), (2, 6, 0), (2, 6, 1), (2, 6, 2), (2, 6, 3), (2, 6, 4), (2, 6, 5), (2, 6, 6), (2, 6, 7), (2, 7, 0), (2, 7, 1), (2, 7, 2), (2, 7, 3), (2, 7, 4), (2, 7, 5), (2, 7, 6), (2, 7, 7), (3, 0, 0), (3, 0, 1), (3, 0, 2), (3, 0, 3), (3, 0, 4), (3, 0, 5), (3, 0, 6), (3, 0, 7), (3, 1, 0), (3, 1, 1), (3, 1, 2), (3, 1, 3), (3, 1, 4), (3, 1, 5), (3, 1, 6), (3, 1, 7), (3, 2, 0), (3, 2, 1), (3, 2, 2), (3, 2, 3), (3, 2, 4), (3, 2, 5), (3, 2, 6), (3, 2, 7), (3, 3, 0), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 3, 6), (3, 3, 7), (3, 4, 0), (3, 4, 1), (3, 4, 2), (3, 4, 3), (3, 4, 4), (3, 4, 5), (3, 4, 6), (3, 4, 7), (3, 5, 0), (3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (3, 5, 6), (3, 5, 7), (3, 6, 0), (3, 6, 1), (3, 6, 2), (3, 6, 3), (3, 6, 4), (3, 6, 5), (3, 6, 6), (3, 6, 7), (3, 7, 0), (3, 7, 1), (3, 7, 2), (3, 7, 3), (3, 7, 4), (3, 7, 5), (3, 7, 6), (3, 7, 7), (4, 0, 0), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 0, 6), (4, 0, 7), (4, 1, 0), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 1, 6), (4, 1, 7), (4, 2, 0), (4, 2, 1), (4, 2, 2), (4, 2, 3), (4, 2, 4), (4, 2, 5), (4, 2, 6), (4, 2, 7), (4, 3, 0), (4, 3, 1), (4, 3, 2), (4, 3, 3), (4, 3, 4), (4, 3, 5), (4, 3, 6), (4, 3, 7), (4, 4, 0), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4), (4, 4, 5), (4, 4, 6), (4, 4, 7), (4, 5, 0), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (4, 5, 6), (4, 5, 7), (4, 6, 0), (4, 6, 1), (4, 6, 2), (4, 6, 3), (4, 6, 4), (4, 6, 5), (4, 6, 6), (4, 6, 7), (4, 7, 0), (4, 7, 1), (4, 7, 2), (4, 7, 3), (4, 7, 4), (4, 7, 5), (4, 7, 6), (4, 7, 7), (5, 0, 0), (5, 0, 1), (5, 0, 2), (5, 0, 3), (5, 0, 4), (5, 0, 5), (5, 0, 6), (5, 0, 7), (5, 1, 0), (5, 1, 1), (5, 1, 2), (5, 1, 3), (5, 1, 4), (5, 1, 5), (5, 1, 6), (5, 1, 7), (5, 2, 0), (5, 2, 1), (5, 2, 2), (5, 2, 3), (5, 2, 4), (5, 2, 5), (5, 2, 6), (5, 2, 7), (5, 3, 0), (5, 3, 1), (5, 3, 2), (5, 3, 3), (5, 3, 4), (5, 3, 5), (5, 3, 6), (5, 3, 7), (5, 4, 0), (5, 4, 1), (5, 4, 2), (5, 4, 3), (5, 4, 4), (5, 4, 5), (5, 4, 6), (5, 4, 7), (5, 5, 0), (5, 5, 1), (5, 5, 2), (5, 5, 3), (5, 5, 4), (5, 5, 5), (5, 5, 6), (5, 5, 7), (5, 6, 0), (5, 6, 1), (5, 6, 2), (5, 6, 3), (5, 6, 4), (5, 6, 5), (5, 6, 6), (5, 6, 7), (5, 7, 0), (5, 7, 1), (5, 7, 2), (5, 7, 3), (5, 7, 4), (5, 7, 5), (5, 7, 6), (5, 7, 7), (6, 0, 0), (6, 0, 1), (6, 0, 2), (6, 0, 3), (6, 0, 4), (6, 0, 5), (6, 0, 6), (6, 0, 7), (6, 1, 0), (6, 1, 1), (6, 1, 2), (6, 1, 3), (6, 1, 4), (6, 1, 5), (6, 1, 6), (6, 1, 7), (6, 2, 0), (6, 2, 1), (6, 2, 2), (6, 2, 3), (6, 2, 4), (6, 2, 5), (6, 2, 6), (6, 2, 7), (6, 3, 0), (6, 3, 1), (6, 3, 2), (6, 3, 3), (6, 3, 4), (6, 3, 5), (6, 3, 6), (6, 3, 7), (6, 4, 0), (6, 4, 1), (6, 4, 2), (6, 4, 3), (6, 4, 4), (6, 4, 5), (6, 4, 6), (6, 4, 7), (6, 5, 0), (6, 5, 1), (6, 5, 2), (6, 5, 3), (6, 5, 4), (6, 5, 5), (6, 5, 6), (6, 5, 7), (6, 6, 0), (6, 6, 1), (6, 6, 2), (6, 6, 3), (6, 6, 4), (6, 6, 5), (6, 6, 6), (6, 6, 7), (6, 7, 0), (6, 7, 1), (6, 7, 2), (6, 7, 3), (6, 7, 4), (6, 7, 5), (6, 7, 6), (6, 7, 7), (7, 0, 0), (7, 0, 1), (7, 0, 2), (7, 0, 3), (7, 0, 4), (7, 0, 5), (7, 0, 6), (7, 0, 7), (7, 1, 0), (7, 1, 1), (7, 1, 2), (7, 1, 3), (7, 1, 4), (7, 1, 5), (7, 1, 6), (7, 1, 7), (7, 2, 0), (7, 2, 1), (7, 2, 2), (7, 2, 3), (7, 2, 4), (7, 2, 5), (7, 2, 6), (7, 2, 7), (7, 3, 0), (7, 3, 1), (7, 3, 2), (7, 3, 3), (7, 3, 4), (7, 3, 5), (7, 3, 6), (7, 3, 7), (7, 4, 0), (7, 4, 1), (7, 4, 2), (7, 4, 3), (7, 4, 4), (7, 4, 5), (7, 4, 6), (7, 4, 7), (7, 5, 0), (7, 5, 1), (7, 5, 2), (7, 5, 3), (7, 5, 4), (7, 5, 5), (7, 5, 6), (7, 5, 7), (7, 6, 0), (7, 6, 1), (7, 6, 2), (7, 6, 3), (7, 6, 4), (7, 6, 5), (7, 6, 6), (7, 6, 7), (7, 7, 0), (7, 7, 1), (7, 7, 2), (7, 7, 3), (7, 7, 4), (7, 7, 5), (7, 7, 6), (7, 7, 7)]
list of C nodes
[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1)]
{(0, 0, 0): 'grey', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 0, 5): 'grey', (0, 0, 6): 'grey', (0, 0, 7): 'grey', (0, 1, 0): 'grey', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 1, 5): 'grey', (0, 1, 6): 'grey', (0, 1, 7): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 2, 5): 'grey', (0, 2, 6): 'grey', (0, 2, 7): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 3, 5): 'grey', (0, 3, 6): 'grey', (0, 3, 7): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (0, 4, 5): 'grey', (0, 4, 6): 'grey', (0, 4, 7): 'grey', (0, 5, 0): 'grey', (0, 5, 1): 'grey', (0, 5, 2): 'grey', (0, 5, 3): 'grey', (0, 5, 4): 'grey', (0, 5, 5): 'grey', (0, 5, 6): 'grey', (0, 5, 7): 'grey', (0, 6, 0): 'grey', (0, 6, 1): 'grey', (0, 6, 2): 'grey', (0, 6, 3): 'grey', (0, 6, 4): 'grey', (0, 6, 5): 'grey', (0, 6, 6): 'grey', (0, 6, 7): 'grey', (0, 7, 0): 'grey', (0, 7, 1): 'grey', (0, 7, 2): 'grey', (0, 7, 3): 'grey', (0, 7, 4): 'grey', (0, 7, 5): 'grey', (0, 7, 6): 'grey', (0, 7, 7): 'grey', (1, 0, 0): 'grey', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 0, 5): 'grey', (1, 0, 6): 'grey', (1, 0, 7): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 1, 5): 'grey', (1, 1, 6): 'grey', (1, 1, 7): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 2, 5): 'grey', (1, 2, 6): 'grey', (1, 2, 7): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 3, 5): 'grey', (1, 3, 6): 'grey', (1, 3, 7): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (1, 4, 5): 'grey', (1, 4, 6): 'grey', (1, 4, 7): 'grey', (1, 5, 0): 'grey', (1, 5, 1): 'grey', (1, 5, 2): 'grey', (1, 5, 3): 'grey', (1, 5, 4): 'grey', (1, 5, 5): 'grey', (1, 5, 6): 'grey', (1, 5, 7): 'grey', (1, 6, 0): 'grey', (1, 6, 1): 'grey', (1, 6, 2): 'grey', (1, 6, 3): 'grey', (1, 6, 4): 'grey', (1, 6, 5): 'grey', (1, 6, 6): 'grey', (1, 6, 7): 'grey', (1, 7, 0): 'grey', (1, 7, 1): 'grey', (1, 7, 2): 'grey', (1, 7, 3): 'grey', (1, 7, 4): 'grey', (1, 7, 5): 'grey', (1, 7, 6): 'grey', (1, 7, 7): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 0, 5): 'grey', (2, 0, 6): 'grey', (2, 0, 7): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 1, 5): 'grey', (2, 1, 6): 'grey', (2, 1, 7): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 2, 5): 'grey', (2, 2, 6): 'grey', (2, 2, 7): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 3, 5): 'grey', (2, 3, 6): 'grey', (2, 3, 7): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (2, 4, 5): 'grey', (2, 4, 6): 'grey', (2, 4, 7): 'grey', (2, 5, 0): 'grey', (2, 5, 1): 'grey', (2, 5, 2): 'grey', (2, 5, 3): 'grey', (2, 5, 4): 'grey', (2, 5, 5): 'grey', (2, 5, 6): 'grey', (2, 5, 7): 'grey', (2, 6, 0): 'grey', (2, 6, 1): 'grey', (2, 6, 2): 'grey', (2, 6, 3): 'grey', (2, 6, 4): 'grey', (2, 6, 5): 'grey', (2, 6, 6): 'grey', (2, 6, 7): 'grey', (2, 7, 0): 'grey', (2, 7, 1): 'grey', (2, 7, 2): 'grey', (2, 7, 3): 'grey', (2, 7, 4): 'grey', (2, 7, 5): 'grey', (2, 7, 6): 'grey', (2, 7, 7): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 0, 5): 'grey', (3, 0, 6): 'grey', (3, 0, 7): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 1, 5): 'grey', (3, 1, 6): 'grey', (3, 1, 7): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 2, 5): 'grey', (3, 2, 6): 'grey', (3, 2, 7): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 3, 5): 'grey', (3, 3, 6): 'grey', (3, 3, 7): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (3, 4, 5): 'grey', (3, 4, 6): 'grey', (3, 4, 7): 'grey', (3, 5, 0): 'grey', (3, 5, 1): 'grey', (3, 5, 2): 'grey', (3, 5, 3): 'grey', (3, 5, 4): 'grey', (3, 5, 5): 'grey', (3, 5, 6): 'grey', (3, 5, 7): 'grey', (3, 6, 0): 'grey', (3, 6, 1): 'grey', (3, 6, 2): 'grey', (3, 6, 3): 'grey', (3, 6, 4): 'grey', (3, 6, 5): 'grey', (3, 6, 6): 'grey', (3, 6, 7): 'grey', (3, 7, 0): 'grey', (3, 7, 1): 'grey', (3, 7, 2): 'grey', (3, 7, 3): 'grey', (3, 7, 4): 'grey', (3, 7, 5): 'grey', (3, 7, 6): 'grey', (3, 7, 7): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 0, 5): 'grey', (4, 0, 6): 'grey', (4, 0, 7): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 1, 5): 'grey', (4, 1, 6): 'grey', (4, 1, 7): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 2, 5): 'grey', (4, 2, 6): 'grey', (4, 2, 7): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 3, 5): 'grey', (4, 3, 6): 'grey', (4, 3, 7): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey', (4, 4, 5): 'grey', (4, 4, 6): 'grey', (4, 4, 7): 'grey', (4, 5, 0): 'grey', (4, 5, 1): 'grey', (4, 5, 2): 'grey', (4, 5, 3): 'grey', (4, 5, 4): 'grey', (4, 5, 5): 'grey', (4, 5, 6): 'grey', (4, 5, 7): 'grey', (4, 6, 0): 'grey', (4, 6, 1): 'grey', (4, 6, 2): 'grey', (4, 6, 3): 'grey', (4, 6, 4): 'grey', (4, 6, 5): 'grey', (4, 6, 6): 'grey', (4, 6, 7): 'grey', (4, 7, 0): 'grey', (4, 7, 1): 'grey', (4, 7, 2): 'grey', (4, 7, 3): 'grey', (4, 7, 4): 'grey', (4, 7, 5): 'grey', (4, 7, 6): 'grey', (4, 7, 7): 'grey', (5, 0, 0): 'grey', (5, 0, 1): 'grey', (5, 0, 2): 'grey', (5, 0, 3): 'grey', (5, 0, 4): 'grey', (5, 0, 5): 'grey', (5, 0, 6): 'grey', (5, 0, 7): 'grey', (5, 1, 0): 'grey', (5, 1, 1): 'grey', (5, 1, 2): 'grey', (5, 1, 3): 'grey', (5, 1, 4): 'grey', (5, 1, 5): 'grey', (5, 1, 6): 'grey', (5, 1, 7): 'grey', (5, 2, 0): 'grey', (5, 2, 1): 'grey', (5, 2, 2): 'grey', (5, 2, 3): 'grey', (5, 2, 4): 'grey', (5, 2, 5): 'grey', (5, 2, 6): 'grey', (5, 2, 7): 'grey', (5, 3, 0): 'grey', (5, 3, 1): 'grey', (5, 3, 2): 'grey', (5, 3, 3): 'grey', (5, 3, 4): 'grey', (5, 3, 5): 'grey', (5, 3, 6): 'grey', (5, 3, 7): 'grey', (5, 4, 0): 'grey', (5, 4, 1): 'grey', (5, 4, 2): 'grey', (5, 4, 3): 'grey', (5, 4, 4): 'grey', (5, 4, 5): 'grey', (5, 4, 6): 'grey', (5, 4, 7): 'grey', (5, 5, 0): 'grey', (5, 5, 1): 'grey', (5, 5, 2): 'grey', (5, 5, 3): 'grey', (5, 5, 4): 'grey', (5, 5, 5): 'grey', (5, 5, 6): 'grey', (5, 5, 7): 'grey', (5, 6, 0): 'grey', (5, 6, 1): 'grey', (5, 6, 2): 'grey', (5, 6, 3): 'grey', (5, 6, 4): 'grey', (5, 6, 5): 'grey', (5, 6, 6): 'grey', (5, 6, 7): 'grey', (5, 7, 0): 'grey', (5, 7, 1): 'grey', (5, 7, 2): 'grey', (5, 7, 3): 'grey', (5, 7, 4): 'grey', (5, 7, 5): 'grey', (5, 7, 6): 'grey', (5, 7, 7): 'grey', (6, 0, 0): 'grey', (6, 0, 1): 'grey', (6, 0, 2): 'grey', (6, 0, 3): 'grey', (6, 0, 4): 'grey', (6, 0, 5): 'grey', (6, 0, 6): 'grey', (6, 0, 7): 'grey', (6, 1, 0): 'grey', (6, 1, 1): 'grey', (6, 1, 2): 'grey', (6, 1, 3): 'grey', (6, 1, 4): 'grey', (6, 1, 5): 'grey', (6, 1, 6): 'grey', (6, 1, 7): 'grey', (6, 2, 0): 'grey', (6, 2, 1): 'grey', (6, 2, 2): 'grey', (6, 2, 3): 'grey', (6, 2, 4): 'grey', (6, 2, 5): 'grey', (6, 2, 6): 'grey', (6, 2, 7): 'grey', (6, 3, 0): 'grey', (6, 3, 1): 'grey', (6, 3, 2): 'grey', (6, 3, 3): 'grey', (6, 3, 4): 'grey', (6, 3, 5): 'grey', (6, 3, 6): 'grey', (6, 3, 7): 'grey', (6, 4, 0): 'grey', (6, 4, 1): 'grey', (6, 4, 2): 'grey', (6, 4, 3): 'grey', (6, 4, 4): 'grey', (6, 4, 5): 'grey', (6, 4, 6): 'grey', (6, 4, 7): 'grey', (6, 5, 0): 'grey', (6, 5, 1): 'grey', (6, 5, 2): 'grey', (6, 5, 3): 'grey', (6, 5, 4): 'grey', (6, 5, 5): 'grey', (6, 5, 6): 'grey', (6, 5, 7): 'grey', (6, 6, 0): 'grey', (6, 6, 1): 'grey', (6, 6, 2): 'grey', (6, 6, 3): 'grey', (6, 6, 4): 'grey', (6, 6, 5): 'grey', (6, 6, 6): 'grey', (6, 6, 7): 'grey', (6, 7, 0): 'grey', (6, 7, 1): 'grey', (6, 7, 2): 'grey', (6, 7, 3): 'grey', (6, 7, 4): 'grey', (6, 7, 5): 'grey', (6, 7, 6): 'grey', (6, 7, 7): 'grey', (7, 0, 0): 'grey', (7, 0, 1): 'grey', (7, 0, 2): 'grey', (7, 0, 3): 'grey', (7, 0, 4): 'grey', (7, 0, 5): 'grey', (7, 0, 6): 'grey', (7, 0, 7): 'grey', (7, 1, 0): 'grey', (7, 1, 1): 'grey', (7, 1, 2): 'grey', (7, 1, 3): 'grey', (7, 1, 4): 'grey', (7, 1, 5): 'grey', (7, 1, 6): 'grey', (7, 1, 7): 'grey', (7, 2, 0): 'grey', (7, 2, 1): 'grey', (7, 2, 2): 'grey', (7, 2, 3): 'grey', (7, 2, 4): 'grey', (7, 2, 5): 'grey', (7, 2, 6): 'grey', (7, 2, 7): 'grey', (7, 3, 0): 'grey', (7, 3, 1): 'grey', (7, 3, 2): 'grey', (7, 3, 3): 'grey', (7, 3, 4): 'grey', (7, 3, 5): 'grey', (7, 3, 6): 'grey', (7, 3, 7): 'grey', (7, 4, 0): 'grey', (7, 4, 1): 'grey', (7, 4, 2): 'grey', (7, 4, 3): 'grey', (7, 4, 4): 'grey', (7, 4, 5): 'grey', (7, 4, 6): 'grey', (7, 4, 7): 'grey', (7, 5, 0): 'grey', (7, 5, 1): 'grey', (7, 5, 2): 'grey', (7, 5, 3): 'grey', (7, 5, 4): 'grey', (7, 5, 5): 'grey', (7, 5, 6): 'grey', (7, 5, 7): 'grey', (7, 6, 0): 'grey', (7, 6, 1): 'grey', (7, 6, 2): 'grey', (7, 6, 3): 'grey', (7, 6, 4): 'grey', (7, 6, 5): 'grey', (7, 6, 6): 'grey', (7, 6, 7): 'grey', (7, 7, 0): 'grey', (7, 7, 1): 'grey', (7, 7, 2): 'grey', (7, 7, 3): 'grey', (7, 7, 4): 'grey', (7, 7, 5): 'grey', (7, 7, 6): 'grey', (7, 7, 7): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
(x,y, z) is:
(0, 0, 1)
[(0, 0, 0), (0, 0, 1)]
(x,y, z) is:
(0, 1, 0)
[(0, 0, 0), (0, 1, 0)]
(x,y, z) is:
(0, 1, 1)
[(0, 0, 0), (0, 1, 0), (0, 1, 1)]
(x,y, z) is:
(1, 0, 0)
[(0, 0, 0), (1, 0, 0)]
(x,y, z) is:
(1, 0, 1)
[(0, 0, 0), (1, 0, 0), (1, 0, 1)]
(x,y, z) is:
(1, 1, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0)]
(x,y, z) is:
(1, 1, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]
P is :
[[(0, 0, 0)], [(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (0, 1, 0), (0, 1, 1)], [(0, 0, 0), (1, 0, 0)], [(0, 0, 0), (1, 0, 0), (1, 0, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]]
flipped_agents
{(0, 0, 0): [0, 1, 2, 3, 4, 5, 6, 7]}
v is:
(0, 0, 0)
truest
[0, 1, 2, 3, 4, 5, 6, 7]
8
edges_of_v_in_P
[[(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)]]
p is:
[1, 2, 4]
i is:
0
list of agents on v
[0]
v is
(0, 0, 0)
i is:
1
list of agents on v
[1, 2]
v is
(0, 0, 0)
i is:
2
list of agents on v
[3, 4, 5, 6]
v is
(0, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 0, 5): 'grey', (0, 0, 6): 'grey', (0, 0, 7): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 1, 5): 'grey', (0, 1, 6): 'grey', (0, 1, 7): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 2, 5): 'grey', (0, 2, 6): 'grey', (0, 2, 7): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 3, 5): 'grey', (0, 3, 6): 'grey', (0, 3, 7): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (0, 4, 5): 'grey', (0, 4, 6): 'grey', (0, 4, 7): 'grey', (0, 5, 0): 'grey', (0, 5, 1): 'grey', (0, 5, 2): 'grey', (0, 5, 3): 'grey', (0, 5, 4): 'grey', (0, 5, 5): 'grey', (0, 5, 6): 'grey', (0, 5, 7): 'grey', (0, 6, 0): 'grey', (0, 6, 1): 'grey', (0, 6, 2): 'grey', (0, 6, 3): 'grey', (0, 6, 4): 'grey', (0, 6, 5): 'grey', (0, 6, 6): 'grey', (0, 6, 7): 'grey', (0, 7, 0): 'grey', (0, 7, 1): 'grey', (0, 7, 2): 'grey', (0, 7, 3): 'grey', (0, 7, 4): 'grey', (0, 7, 5): 'grey', (0, 7, 6): 'grey', (0, 7, 7): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 0, 5): 'grey', (1, 0, 6): 'grey', (1, 0, 7): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 1, 5): 'grey', (1, 1, 6): 'grey', (1, 1, 7): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 2, 5): 'grey', (1, 2, 6): 'grey', (1, 2, 7): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 3, 5): 'grey', (1, 3, 6): 'grey', (1, 3, 7): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (1, 4, 5): 'grey', (1, 4, 6): 'grey', (1, 4, 7): 'grey', (1, 5, 0): 'grey', (1, 5, 1): 'grey', (1, 5, 2): 'grey', (1, 5, 3): 'grey', (1, 5, 4): 'grey', (1, 5, 5): 'grey', (1, 5, 6): 'grey', (1, 5, 7): 'grey', (1, 6, 0): 'grey', (1, 6, 1): 'grey', (1, 6, 2): 'grey', (1, 6, 3): 'grey', (1, 6, 4): 'grey', (1, 6, 5): 'grey', (1, 6, 6): 'grey', (1, 6, 7): 'grey', (1, 7, 0): 'grey', (1, 7, 1): 'grey', (1, 7, 2): 'grey', (1, 7, 3): 'grey', (1, 7, 4): 'grey', (1, 7, 5): 'grey', (1, 7, 6): 'grey', (1, 7, 7): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 0, 5): 'grey', (2, 0, 6): 'grey', (2, 0, 7): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 1, 5): 'grey', (2, 1, 6): 'grey', (2, 1, 7): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 2, 5): 'grey', (2, 2, 6): 'grey', (2, 2, 7): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 3, 5): 'grey', (2, 3, 6): 'grey', (2, 3, 7): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (2, 4, 5): 'grey', (2, 4, 6): 'grey', (2, 4, 7): 'grey', (2, 5, 0): 'grey', (2, 5, 1): 'grey', (2, 5, 2): 'grey', (2, 5, 3): 'grey', (2, 5, 4): 'grey', (2, 5, 5): 'grey', (2, 5, 6): 'grey', (2, 5, 7): 'grey', (2, 6, 0): 'grey', (2, 6, 1): 'grey', (2, 6, 2): 'grey', (2, 6, 3): 'grey', (2, 6, 4): 'grey', (2, 6, 5): 'grey', (2, 6, 6): 'grey', (2, 6, 7): 'grey', (2, 7, 0): 'grey', (2, 7, 1): 'grey', (2, 7, 2): 'grey', (2, 7, 3): 'grey', (2, 7, 4): 'grey', (2, 7, 5): 'grey', (2, 7, 6): 'grey', (2, 7, 7): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 0, 5): 'grey', (3, 0, 6): 'grey', (3, 0, 7): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 1, 5): 'grey', (3, 1, 6): 'grey', (3, 1, 7): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 2, 5): 'grey', (3, 2, 6): 'grey', (3, 2, 7): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 3, 5): 'grey', (3, 3, 6): 'grey', (3, 3, 7): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (3, 4, 5): 'grey', (3, 4, 6): 'grey', (3, 4, 7): 'grey', (3, 5, 0): 'grey', (3, 5, 1): 'grey', (3, 5, 2): 'grey', (3, 5, 3): 'grey', (3, 5, 4): 'grey', (3, 5, 5): 'grey', (3, 5, 6): 'grey', (3, 5, 7): 'grey', (3, 6, 0): 'grey', (3, 6, 1): 'grey', (3, 6, 2): 'grey', (3, 6, 3): 'grey', (3, 6, 4): 'grey', (3, 6, 5): 'grey', (3, 6, 6): 'grey', (3, 6, 7): 'grey', (3, 7, 0): 'grey', (3, 7, 1): 'grey', (3, 7, 2): 'grey', (3, 7, 3): 'grey', (3, 7, 4): 'grey', (3, 7, 5): 'grey', (3, 7, 6): 'grey', (3, 7, 7): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 0, 5): 'grey', (4, 0, 6): 'grey', (4, 0, 7): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 1, 5): 'grey', (4, 1, 6): 'grey', (4, 1, 7): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 2, 5): 'grey', (4, 2, 6): 'grey', (4, 2, 7): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 3, 5): 'grey', (4, 3, 6): 'grey', (4, 3, 7): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey', (4, 4, 5): 'grey', (4, 4, 6): 'grey', (4, 4, 7): 'grey', (4, 5, 0): 'grey', (4, 5, 1): 'grey', (4, 5, 2): 'grey', (4, 5, 3): 'grey', (4, 5, 4): 'grey', (4, 5, 5): 'grey', (4, 5, 6): 'grey', (4, 5, 7): 'grey', (4, 6, 0): 'grey', (4, 6, 1): 'grey', (4, 6, 2): 'grey', (4, 6, 3): 'grey', (4, 6, 4): 'grey', (4, 6, 5): 'grey', (4, 6, 6): 'grey', (4, 6, 7): 'grey', (4, 7, 0): 'grey', (4, 7, 1): 'grey', (4, 7, 2): 'grey', (4, 7, 3): 'grey', (4, 7, 4): 'grey', (4, 7, 5): 'grey', (4, 7, 6): 'grey', (4, 7, 7): 'grey', (5, 0, 0): 'grey', (5, 0, 1): 'grey', (5, 0, 2): 'grey', (5, 0, 3): 'grey', (5, 0, 4): 'grey', (5, 0, 5): 'grey', (5, 0, 6): 'grey', (5, 0, 7): 'grey', (5, 1, 0): 'grey', (5, 1, 1): 'grey', (5, 1, 2): 'grey', (5, 1, 3): 'grey', (5, 1, 4): 'grey', (5, 1, 5): 'grey', (5, 1, 6): 'grey', (5, 1, 7): 'grey', (5, 2, 0): 'grey', (5, 2, 1): 'grey', (5, 2, 2): 'grey', (5, 2, 3): 'grey', (5, 2, 4): 'grey', (5, 2, 5): 'grey', (5, 2, 6): 'grey', (5, 2, 7): 'grey', (5, 3, 0): 'grey', (5, 3, 1): 'grey', (5, 3, 2): 'grey', (5, 3, 3): 'grey', (5, 3, 4): 'grey', (5, 3, 5): 'grey', (5, 3, 6): 'grey', (5, 3, 7): 'grey', (5, 4, 0): 'grey', (5, 4, 1): 'grey', (5, 4, 2): 'grey', (5, 4, 3): 'grey', (5, 4, 4): 'grey', (5, 4, 5): 'grey', (5, 4, 6): 'grey', (5, 4, 7): 'grey', (5, 5, 0): 'grey', (5, 5, 1): 'grey', (5, 5, 2): 'grey', (5, 5, 3): 'grey', (5, 5, 4): 'grey', (5, 5, 5): 'grey', (5, 5, 6): 'grey', (5, 5, 7): 'grey', (5, 6, 0): 'grey', (5, 6, 1): 'grey', (5, 6, 2): 'grey', (5, 6, 3): 'grey', (5, 6, 4): 'grey', (5, 6, 5): 'grey', (5, 6, 6): 'grey', (5, 6, 7): 'grey', (5, 7, 0): 'grey', (5, 7, 1): 'grey', (5, 7, 2): 'grey', (5, 7, 3): 'grey', (5, 7, 4): 'grey', (5, 7, 5): 'grey', (5, 7, 6): 'grey', (5, 7, 7): 'grey', (6, 0, 0): 'grey', (6, 0, 1): 'grey', (6, 0, 2): 'grey', (6, 0, 3): 'grey', (6, 0, 4): 'grey', (6, 0, 5): 'grey', (6, 0, 6): 'grey', (6, 0, 7): 'grey', (6, 1, 0): 'grey', (6, 1, 1): 'grey', (6, 1, 2): 'grey', (6, 1, 3): 'grey', (6, 1, 4): 'grey', (6, 1, 5): 'grey', (6, 1, 6): 'grey', (6, 1, 7): 'grey', (6, 2, 0): 'grey', (6, 2, 1): 'grey', (6, 2, 2): 'grey', (6, 2, 3): 'grey', (6, 2, 4): 'grey', (6, 2, 5): 'grey', (6, 2, 6): 'grey', (6, 2, 7): 'grey', (6, 3, 0): 'grey', (6, 3, 1): 'grey', (6, 3, 2): 'grey', (6, 3, 3): 'grey', (6, 3, 4): 'grey', (6, 3, 5): 'grey', (6, 3, 6): 'grey', (6, 3, 7): 'grey', (6, 4, 0): 'grey', (6, 4, 1): 'grey', (6, 4, 2): 'grey', (6, 4, 3): 'grey', (6, 4, 4): 'grey', (6, 4, 5): 'grey', (6, 4, 6): 'grey', (6, 4, 7): 'grey', (6, 5, 0): 'grey', (6, 5, 1): 'grey', (6, 5, 2): 'grey', (6, 5, 3): 'grey', (6, 5, 4): 'grey', (6, 5, 5): 'grey', (6, 5, 6): 'grey', (6, 5, 7): 'grey', (6, 6, 0): 'grey', (6, 6, 1): 'grey', (6, 6, 2): 'grey', (6, 6, 3): 'grey', (6, 6, 4): 'grey', (6, 6, 5): 'grey', (6, 6, 6): 'grey', (6, 6, 7): 'grey', (6, 7, 0): 'grey', (6, 7, 1): 'grey', (6, 7, 2): 'grey', (6, 7, 3): 'grey', (6, 7, 4): 'grey', (6, 7, 5): 'grey', (6, 7, 6): 'grey', (6, 7, 7): 'grey', (7, 0, 0): 'grey', (7, 0, 1): 'grey', (7, 0, 2): 'grey', (7, 0, 3): 'grey', (7, 0, 4): 'grey', (7, 0, 5): 'grey', (7, 0, 6): 'grey', (7, 0, 7): 'grey', (7, 1, 0): 'grey', (7, 1, 1): 'grey', (7, 1, 2): 'grey', (7, 1, 3): 'grey', (7, 1, 4): 'grey', (7, 1, 5): 'grey', (7, 1, 6): 'grey', (7, 1, 7): 'grey', (7, 2, 0): 'grey', (7, 2, 1): 'grey', (7, 2, 2): 'grey', (7, 2, 3): 'grey', (7, 2, 4): 'grey', (7, 2, 5): 'grey', (7, 2, 6): 'grey', (7, 2, 7): 'grey', (7, 3, 0): 'grey', (7, 3, 1): 'grey', (7, 3, 2): 'grey', (7, 3, 3): 'grey', (7, 3, 4): 'grey', (7, 3, 5): 'grey', (7, 3, 6): 'grey', (7, 3, 7): 'grey', (7, 4, 0): 'grey', (7, 4, 1): 'grey', (7, 4, 2): 'grey', (7, 4, 3): 'grey', (7, 4, 4): 'grey', (7, 4, 5): 'grey', (7, 4, 6): 'grey', (7, 4, 7): 'grey', (7, 5, 0): 'grey', (7, 5, 1): 'grey', (7, 5, 2): 'grey', (7, 5, 3): 'grey', (7, 5, 4): 'grey', (7, 5, 5): 'grey', (7, 5, 6): 'grey', (7, 5, 7): 'grey', (7, 6, 0): 'grey', (7, 6, 1): 'grey', (7, 6, 2): 'grey', (7, 6, 3): 'grey', (7, 6, 4): 'grey', (7, 6, 5): 'grey', (7, 6, 6): 'grey', (7, 6, 7): 'grey', (7, 7, 0): 'grey', (7, 7, 1): 'grey', (7, 7, 2): 'grey', (7, 7, 3): 'grey', (7, 7, 4): 'grey', (7, 7, 5): 'grey', (7, 7, 6): 'grey', (7, 7, 7): 'grey'}
iteration is over
nr of iterations so far
1
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (0, 0, 1), (0, 1, 0)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 0): [3, 4, 5, 6], (0, 0, 0): [7]}
v is:
(1, 0, 0)
truest
[3, 4, 5, 6]
4
edges_of_v_in_P
[[(1, 0, 0), (1, 0, 1)], [(1, 0, 0), (1, 1, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[3]
v is
(1, 0, 0)
i is:
1
list of agents on v
[4, 5]
v is
(1, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 0, 5): 'grey', (0, 0, 6): 'grey', (0, 0, 7): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 1, 5): 'grey', (0, 1, 6): 'grey', (0, 1, 7): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 2, 5): 'grey', (0, 2, 6): 'grey', (0, 2, 7): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 3, 5): 'grey', (0, 3, 6): 'grey', (0, 3, 7): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (0, 4, 5): 'grey', (0, 4, 6): 'grey', (0, 4, 7): 'grey', (0, 5, 0): 'grey', (0, 5, 1): 'grey', (0, 5, 2): 'grey', (0, 5, 3): 'grey', (0, 5, 4): 'grey', (0, 5, 5): 'grey', (0, 5, 6): 'grey', (0, 5, 7): 'grey', (0, 6, 0): 'grey', (0, 6, 1): 'grey', (0, 6, 2): 'grey', (0, 6, 3): 'grey', (0, 6, 4): 'grey', (0, 6, 5): 'grey', (0, 6, 6): 'grey', (0, 6, 7): 'grey', (0, 7, 0): 'grey', (0, 7, 1): 'grey', (0, 7, 2): 'grey', (0, 7, 3): 'grey', (0, 7, 4): 'grey', (0, 7, 5): 'grey', (0, 7, 6): 'grey', (0, 7, 7): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 0, 5): 'grey', (1, 0, 6): 'grey', (1, 0, 7): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 1, 5): 'grey', (1, 1, 6): 'grey', (1, 1, 7): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 2, 5): 'grey', (1, 2, 6): 'grey', (1, 2, 7): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 3, 5): 'grey', (1, 3, 6): 'grey', (1, 3, 7): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (1, 4, 5): 'grey', (1, 4, 6): 'grey', (1, 4, 7): 'grey', (1, 5, 0): 'grey', (1, 5, 1): 'grey', (1, 5, 2): 'grey', (1, 5, 3): 'grey', (1, 5, 4): 'grey', (1, 5, 5): 'grey', (1, 5, 6): 'grey', (1, 5, 7): 'grey', (1, 6, 0): 'grey', (1, 6, 1): 'grey', (1, 6, 2): 'grey', (1, 6, 3): 'grey', (1, 6, 4): 'grey', (1, 6, 5): 'grey', (1, 6, 6): 'grey', (1, 6, 7): 'grey', (1, 7, 0): 'grey', (1, 7, 1): 'grey', (1, 7, 2): 'grey', (1, 7, 3): 'grey', (1, 7, 4): 'grey', (1, 7, 5): 'grey', (1, 7, 6): 'grey', (1, 7, 7): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 0, 5): 'grey', (2, 0, 6): 'grey', (2, 0, 7): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 1, 5): 'grey', (2, 1, 6): 'grey', (2, 1, 7): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 2, 5): 'grey', (2, 2, 6): 'grey', (2, 2, 7): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 3, 5): 'grey', (2, 3, 6): 'grey', (2, 3, 7): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (2, 4, 5): 'grey', (2, 4, 6): 'grey', (2, 4, 7): 'grey', (2, 5, 0): 'grey', (2, 5, 1): 'grey', (2, 5, 2): 'grey', (2, 5, 3): 'grey', (2, 5, 4): 'grey', (2, 5, 5): 'grey', (2, 5, 6): 'grey', (2, 5, 7): 'grey', (2, 6, 0): 'grey', (2, 6, 1): 'grey', (2, 6, 2): 'grey', (2, 6, 3): 'grey', (2, 6, 4): 'grey', (2, 6, 5): 'grey', (2, 6, 6): 'grey', (2, 6, 7): 'grey', (2, 7, 0): 'grey', (2, 7, 1): 'grey', (2, 7, 2): 'grey', (2, 7, 3): 'grey', (2, 7, 4): 'grey', (2, 7, 5): 'grey', (2, 7, 6): 'grey', (2, 7, 7): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 0, 5): 'grey', (3, 0, 6): 'grey', (3, 0, 7): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 1, 5): 'grey', (3, 1, 6): 'grey', (3, 1, 7): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 2, 5): 'grey', (3, 2, 6): 'grey', (3, 2, 7): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 3, 5): 'grey', (3, 3, 6): 'grey', (3, 3, 7): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (3, 4, 5): 'grey', (3, 4, 6): 'grey', (3, 4, 7): 'grey', (3, 5, 0): 'grey', (3, 5, 1): 'grey', (3, 5, 2): 'grey', (3, 5, 3): 'grey', (3, 5, 4): 'grey', (3, 5, 5): 'grey', (3, 5, 6): 'grey', (3, 5, 7): 'grey', (3, 6, 0): 'grey', (3, 6, 1): 'grey', (3, 6, 2): 'grey', (3, 6, 3): 'grey', (3, 6, 4): 'grey', (3, 6, 5): 'grey', (3, 6, 6): 'grey', (3, 6, 7): 'grey', (3, 7, 0): 'grey', (3, 7, 1): 'grey', (3, 7, 2): 'grey', (3, 7, 3): 'grey', (3, 7, 4): 'grey', (3, 7, 5): 'grey', (3, 7, 6): 'grey', (3, 7, 7): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 0, 5): 'grey', (4, 0, 6): 'grey', (4, 0, 7): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 1, 5): 'grey', (4, 1, 6): 'grey', (4, 1, 7): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 2, 5): 'grey', (4, 2, 6): 'grey', (4, 2, 7): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 3, 5): 'grey', (4, 3, 6): 'grey', (4, 3, 7): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey', (4, 4, 5): 'grey', (4, 4, 6): 'grey', (4, 4, 7): 'grey', (4, 5, 0): 'grey', (4, 5, 1): 'grey', (4, 5, 2): 'grey', (4, 5, 3): 'grey', (4, 5, 4): 'grey', (4, 5, 5): 'grey', (4, 5, 6): 'grey', (4, 5, 7): 'grey', (4, 6, 0): 'grey', (4, 6, 1): 'grey', (4, 6, 2): 'grey', (4, 6, 3): 'grey', (4, 6, 4): 'grey', (4, 6, 5): 'grey', (4, 6, 6): 'grey', (4, 6, 7): 'grey', (4, 7, 0): 'grey', (4, 7, 1): 'grey', (4, 7, 2): 'grey', (4, 7, 3): 'grey', (4, 7, 4): 'grey', (4, 7, 5): 'grey', (4, 7, 6): 'grey', (4, 7, 7): 'grey', (5, 0, 0): 'grey', (5, 0, 1): 'grey', (5, 0, 2): 'grey', (5, 0, 3): 'grey', (5, 0, 4): 'grey', (5, 0, 5): 'grey', (5, 0, 6): 'grey', (5, 0, 7): 'grey', (5, 1, 0): 'grey', (5, 1, 1): 'grey', (5, 1, 2): 'grey', (5, 1, 3): 'grey', (5, 1, 4): 'grey', (5, 1, 5): 'grey', (5, 1, 6): 'grey', (5, 1, 7): 'grey', (5, 2, 0): 'grey', (5, 2, 1): 'grey', (5, 2, 2): 'grey', (5, 2, 3): 'grey', (5, 2, 4): 'grey', (5, 2, 5): 'grey', (5, 2, 6): 'grey', (5, 2, 7): 'grey', (5, 3, 0): 'grey', (5, 3, 1): 'grey', (5, 3, 2): 'grey', (5, 3, 3): 'grey', (5, 3, 4): 'grey', (5, 3, 5): 'grey', (5, 3, 6): 'grey', (5, 3, 7): 'grey', (5, 4, 0): 'grey', (5, 4, 1): 'grey', (5, 4, 2): 'grey', (5, 4, 3): 'grey', (5, 4, 4): 'grey', (5, 4, 5): 'grey', (5, 4, 6): 'grey', (5, 4, 7): 'grey', (5, 5, 0): 'grey', (5, 5, 1): 'grey', (5, 5, 2): 'grey', (5, 5, 3): 'grey', (5, 5, 4): 'grey', (5, 5, 5): 'grey', (5, 5, 6): 'grey', (5, 5, 7): 'grey', (5, 6, 0): 'grey', (5, 6, 1): 'grey', (5, 6, 2): 'grey', (5, 6, 3): 'grey', (5, 6, 4): 'grey', (5, 6, 5): 'grey', (5, 6, 6): 'grey', (5, 6, 7): 'grey', (5, 7, 0): 'grey', (5, 7, 1): 'grey', (5, 7, 2): 'grey', (5, 7, 3): 'grey', (5, 7, 4): 'grey', (5, 7, 5): 'grey', (5, 7, 6): 'grey', (5, 7, 7): 'grey', (6, 0, 0): 'grey', (6, 0, 1): 'grey', (6, 0, 2): 'grey', (6, 0, 3): 'grey', (6, 0, 4): 'grey', (6, 0, 5): 'grey', (6, 0, 6): 'grey', (6, 0, 7): 'grey', (6, 1, 0): 'grey', (6, 1, 1): 'grey', (6, 1, 2): 'grey', (6, 1, 3): 'grey', (6, 1, 4): 'grey', (6, 1, 5): 'grey', (6, 1, 6): 'grey', (6, 1, 7): 'grey', (6, 2, 0): 'grey', (6, 2, 1): 'grey', (6, 2, 2): 'grey', (6, 2, 3): 'grey', (6, 2, 4): 'grey', (6, 2, 5): 'grey', (6, 2, 6): 'grey', (6, 2, 7): 'grey', (6, 3, 0): 'grey', (6, 3, 1): 'grey', (6, 3, 2): 'grey', (6, 3, 3): 'grey', (6, 3, 4): 'grey', (6, 3, 5): 'grey', (6, 3, 6): 'grey', (6, 3, 7): 'grey', (6, 4, 0): 'grey', (6, 4, 1): 'grey', (6, 4, 2): 'grey', (6, 4, 3): 'grey', (6, 4, 4): 'grey', (6, 4, 5): 'grey', (6, 4, 6): 'grey', (6, 4, 7): 'grey', (6, 5, 0): 'grey', (6, 5, 1): 'grey', (6, 5, 2): 'grey', (6, 5, 3): 'grey', (6, 5, 4): 'grey', (6, 5, 5): 'grey', (6, 5, 6): 'grey', (6, 5, 7): 'grey', (6, 6, 0): 'grey', (6, 6, 1): 'grey', (6, 6, 2): 'grey', (6, 6, 3): 'grey', (6, 6, 4): 'grey', (6, 6, 5): 'grey', (6, 6, 6): 'grey', (6, 6, 7): 'grey', (6, 7, 0): 'grey', (6, 7, 1): 'grey', (6, 7, 2): 'grey', (6, 7, 3): 'grey', (6, 7, 4): 'grey', (6, 7, 5): 'grey', (6, 7, 6): 'grey', (6, 7, 7): 'grey', (7, 0, 0): 'grey', (7, 0, 1): 'grey', (7, 0, 2): 'grey', (7, 0, 3): 'grey', (7, 0, 4): 'grey', (7, 0, 5): 'grey', (7, 0, 6): 'grey', (7, 0, 7): 'grey', (7, 1, 0): 'grey', (7, 1, 1): 'grey', (7, 1, 2): 'grey', (7, 1, 3): 'grey', (7, 1, 4): 'grey', (7, 1, 5): 'grey', (7, 1, 6): 'grey', (7, 1, 7): 'grey', (7, 2, 0): 'grey', (7, 2, 1): 'grey', (7, 2, 2): 'grey', (7, 2, 3): 'grey', (7, 2, 4): 'grey', (7, 2, 5): 'grey', (7, 2, 6): 'grey', (7, 2, 7): 'grey', (7, 3, 0): 'grey', (7, 3, 1): 'grey', (7, 3, 2): 'grey', (7, 3, 3): 'grey', (7, 3, 4): 'grey', (7, 3, 5): 'grey', (7, 3, 6): 'grey', (7, 3, 7): 'grey', (7, 4, 0): 'grey', (7, 4, 1): 'grey', (7, 4, 2): 'grey', (7, 4, 3): 'grey', (7, 4, 4): 'grey', (7, 4, 5): 'grey', (7, 4, 6): 'grey', (7, 4, 7): 'grey', (7, 5, 0): 'grey', (7, 5, 1): 'grey', (7, 5, 2): 'grey', (7, 5, 3): 'grey', (7, 5, 4): 'grey', (7, 5, 5): 'grey', (7, 5, 6): 'grey', (7, 5, 7): 'grey', (7, 6, 0): 'grey', (7, 6, 1): 'grey', (7, 6, 2): 'grey', (7, 6, 3): 'grey', (7, 6, 4): 'grey', (7, 6, 5): 'grey', (7, 6, 6): 'grey', (7, 6, 7): 'grey', (7, 7, 0): 'grey', (7, 7, 1): 'grey', (7, 7, 2): 'grey', (7, 7, 3): 'grey', (7, 7, 4): 'grey', (7, 7, 5): 'grey', (7, 7, 6): 'grey', (7, 7, 7): 'grey'}
iteration is over
nr of iterations so far
2
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (1, 0, 0): [6], (0, 0, 0): [7]}
v is:
(0, 1, 0)
truest
[1, 2]
2
edges_of_v_in_P
[[(0, 1, 0), (0, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[1]
v is
(0, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 0, 5): 'grey', (0, 0, 6): 'grey', (0, 0, 7): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 1, 5): 'grey', (0, 1, 6): 'grey', (0, 1, 7): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 2, 5): 'grey', (0, 2, 6): 'grey', (0, 2, 7): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 3, 5): 'grey', (0, 3, 6): 'grey', (0, 3, 7): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (0, 4, 5): 'grey', (0, 4, 6): 'grey', (0, 4, 7): 'grey', (0, 5, 0): 'grey', (0, 5, 1): 'grey', (0, 5, 2): 'grey', (0, 5, 3): 'grey', (0, 5, 4): 'grey', (0, 5, 5): 'grey', (0, 5, 6): 'grey', (0, 5, 7): 'grey', (0, 6, 0): 'grey', (0, 6, 1): 'grey', (0, 6, 2): 'grey', (0, 6, 3): 'grey', (0, 6, 4): 'grey', (0, 6, 5): 'grey', (0, 6, 6): 'grey', (0, 6, 7): 'grey', (0, 7, 0): 'grey', (0, 7, 1): 'grey', (0, 7, 2): 'grey', (0, 7, 3): 'grey', (0, 7, 4): 'grey', (0, 7, 5): 'grey', (0, 7, 6): 'grey', (0, 7, 7): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 0, 5): 'grey', (1, 0, 6): 'grey', (1, 0, 7): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 1, 5): 'grey', (1, 1, 6): 'grey', (1, 1, 7): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 2, 5): 'grey', (1, 2, 6): 'grey', (1, 2, 7): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 3, 5): 'grey', (1, 3, 6): 'grey', (1, 3, 7): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (1, 4, 5): 'grey', (1, 4, 6): 'grey', (1, 4, 7): 'grey', (1, 5, 0): 'grey', (1, 5, 1): 'grey', (1, 5, 2): 'grey', (1, 5, 3): 'grey', (1, 5, 4): 'grey', (1, 5, 5): 'grey', (1, 5, 6): 'grey', (1, 5, 7): 'grey', (1, 6, 0): 'grey', (1, 6, 1): 'grey', (1, 6, 2): 'grey', (1, 6, 3): 'grey', (1, 6, 4): 'grey', (1, 6, 5): 'grey', (1, 6, 6): 'grey', (1, 6, 7): 'grey', (1, 7, 0): 'grey', (1, 7, 1): 'grey', (1, 7, 2): 'grey', (1, 7, 3): 'grey', (1, 7, 4): 'grey', (1, 7, 5): 'grey', (1, 7, 6): 'grey', (1, 7, 7): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 0, 5): 'grey', (2, 0, 6): 'grey', (2, 0, 7): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 1, 5): 'grey', (2, 1, 6): 'grey', (2, 1, 7): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 2, 5): 'grey', (2, 2, 6): 'grey', (2, 2, 7): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 3, 5): 'grey', (2, 3, 6): 'grey', (2, 3, 7): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (2, 4, 5): 'grey', (2, 4, 6): 'grey', (2, 4, 7): 'grey', (2, 5, 0): 'grey', (2, 5, 1): 'grey', (2, 5, 2): 'grey', (2, 5, 3): 'grey', (2, 5, 4): 'grey', (2, 5, 5): 'grey', (2, 5, 6): 'grey', (2, 5, 7): 'grey', (2, 6, 0): 'grey', (2, 6, 1): 'grey', (2, 6, 2): 'grey', (2, 6, 3): 'grey', (2, 6, 4): 'grey', (2, 6, 5): 'grey', (2, 6, 6): 'grey', (2, 6, 7): 'grey', (2, 7, 0): 'grey', (2, 7, 1): 'grey', (2, 7, 2): 'grey', (2, 7, 3): 'grey', (2, 7, 4): 'grey', (2, 7, 5): 'grey', (2, 7, 6): 'grey', (2, 7, 7): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 0, 5): 'grey', (3, 0, 6): 'grey', (3, 0, 7): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 1, 5): 'grey', (3, 1, 6): 'grey', (3, 1, 7): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 2, 5): 'grey', (3, 2, 6): 'grey', (3, 2, 7): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 3, 5): 'grey', (3, 3, 6): 'grey', (3, 3, 7): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (3, 4, 5): 'grey', (3, 4, 6): 'grey', (3, 4, 7): 'grey', (3, 5, 0): 'grey', (3, 5, 1): 'grey', (3, 5, 2): 'grey', (3, 5, 3): 'grey', (3, 5, 4): 'grey', (3, 5, 5): 'grey', (3, 5, 6): 'grey', (3, 5, 7): 'grey', (3, 6, 0): 'grey', (3, 6, 1): 'grey', (3, 6, 2): 'grey', (3, 6, 3): 'grey', (3, 6, 4): 'grey', (3, 6, 5): 'grey', (3, 6, 6): 'grey', (3, 6, 7): 'grey', (3, 7, 0): 'grey', (3, 7, 1): 'grey', (3, 7, 2): 'grey', (3, 7, 3): 'grey', (3, 7, 4): 'grey', (3, 7, 5): 'grey', (3, 7, 6): 'grey', (3, 7, 7): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 0, 5): 'grey', (4, 0, 6): 'grey', (4, 0, 7): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 1, 5): 'grey', (4, 1, 6): 'grey', (4, 1, 7): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 2, 5): 'grey', (4, 2, 6): 'grey', (4, 2, 7): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 3, 5): 'grey', (4, 3, 6): 'grey', (4, 3, 7): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey', (4, 4, 5): 'grey', (4, 4, 6): 'grey', (4, 4, 7): 'grey', (4, 5, 0): 'grey', (4, 5, 1): 'grey', (4, 5, 2): 'grey', (4, 5, 3): 'grey', (4, 5, 4): 'grey', (4, 5, 5): 'grey', (4, 5, 6): 'grey', (4, 5, 7): 'grey', (4, 6, 0): 'grey', (4, 6, 1): 'grey', (4, 6, 2): 'grey', (4, 6, 3): 'grey', (4, 6, 4): 'grey', (4, 6, 5): 'grey', (4, 6, 6): 'grey', (4, 6, 7): 'grey', (4, 7, 0): 'grey', (4, 7, 1): 'grey', (4, 7, 2): 'grey', (4, 7, 3): 'grey', (4, 7, 4): 'grey', (4, 7, 5): 'grey', (4, 7, 6): 'grey', (4, 7, 7): 'grey', (5, 0, 0): 'grey', (5, 0, 1): 'grey', (5, 0, 2): 'grey', (5, 0, 3): 'grey', (5, 0, 4): 'grey', (5, 0, 5): 'grey', (5, 0, 6): 'grey', (5, 0, 7): 'grey', (5, 1, 0): 'grey', (5, 1, 1): 'grey', (5, 1, 2): 'grey', (5, 1, 3): 'grey', (5, 1, 4): 'grey', (5, 1, 5): 'grey', (5, 1, 6): 'grey', (5, 1, 7): 'grey', (5, 2, 0): 'grey', (5, 2, 1): 'grey', (5, 2, 2): 'grey', (5, 2, 3): 'grey', (5, 2, 4): 'grey', (5, 2, 5): 'grey', (5, 2, 6): 'grey', (5, 2, 7): 'grey', (5, 3, 0): 'grey', (5, 3, 1): 'grey', (5, 3, 2): 'grey', (5, 3, 3): 'grey', (5, 3, 4): 'grey', (5, 3, 5): 'grey', (5, 3, 6): 'grey', (5, 3, 7): 'grey', (5, 4, 0): 'grey', (5, 4, 1): 'grey', (5, 4, 2): 'grey', (5, 4, 3): 'grey', (5, 4, 4): 'grey', (5, 4, 5): 'grey', (5, 4, 6): 'grey', (5, 4, 7): 'grey', (5, 5, 0): 'grey', (5, 5, 1): 'grey', (5, 5, 2): 'grey', (5, 5, 3): 'grey', (5, 5, 4): 'grey', (5, 5, 5): 'grey', (5, 5, 6): 'grey', (5, 5, 7): 'grey', (5, 6, 0): 'grey', (5, 6, 1): 'grey', (5, 6, 2): 'grey', (5, 6, 3): 'grey', (5, 6, 4): 'grey', (5, 6, 5): 'grey', (5, 6, 6): 'grey', (5, 6, 7): 'grey', (5, 7, 0): 'grey', (5, 7, 1): 'grey', (5, 7, 2): 'grey', (5, 7, 3): 'grey', (5, 7, 4): 'grey', (5, 7, 5): 'grey', (5, 7, 6): 'grey', (5, 7, 7): 'grey', (6, 0, 0): 'grey', (6, 0, 1): 'grey', (6, 0, 2): 'grey', (6, 0, 3): 'grey', (6, 0, 4): 'grey', (6, 0, 5): 'grey', (6, 0, 6): 'grey', (6, 0, 7): 'grey', (6, 1, 0): 'grey', (6, 1, 1): 'grey', (6, 1, 2): 'grey', (6, 1, 3): 'grey', (6, 1, 4): 'grey', (6, 1, 5): 'grey', (6, 1, 6): 'grey', (6, 1, 7): 'grey', (6, 2, 0): 'grey', (6, 2, 1): 'grey', (6, 2, 2): 'grey', (6, 2, 3): 'grey', (6, 2, 4): 'grey', (6, 2, 5): 'grey', (6, 2, 6): 'grey', (6, 2, 7): 'grey', (6, 3, 0): 'grey', (6, 3, 1): 'grey', (6, 3, 2): 'grey', (6, 3, 3): 'grey', (6, 3, 4): 'grey', (6, 3, 5): 'grey', (6, 3, 6): 'grey', (6, 3, 7): 'grey', (6, 4, 0): 'grey', (6, 4, 1): 'grey', (6, 4, 2): 'grey', (6, 4, 3): 'grey', (6, 4, 4): 'grey', (6, 4, 5): 'grey', (6, 4, 6): 'grey', (6, 4, 7): 'grey', (6, 5, 0): 'grey', (6, 5, 1): 'grey', (6, 5, 2): 'grey', (6, 5, 3): 'grey', (6, 5, 4): 'grey', (6, 5, 5): 'grey', (6, 5, 6): 'grey', (6, 5, 7): 'grey', (6, 6, 0): 'grey', (6, 6, 1): 'grey', (6, 6, 2): 'grey', (6, 6, 3): 'grey', (6, 6, 4): 'grey', (6, 6, 5): 'grey', (6, 6, 6): 'grey', (6, 6, 7): 'grey', (6, 7, 0): 'grey', (6, 7, 1): 'grey', (6, 7, 2): 'grey', (6, 7, 3): 'grey', (6, 7, 4): 'grey', (6, 7, 5): 'grey', (6, 7, 6): 'grey', (6, 7, 7): 'grey', (7, 0, 0): 'grey', (7, 0, 1): 'grey', (7, 0, 2): 'grey', (7, 0, 3): 'grey', (7, 0, 4): 'grey', (7, 0, 5): 'grey', (7, 0, 6): 'grey', (7, 0, 7): 'grey', (7, 1, 0): 'grey', (7, 1, 1): 'grey', (7, 1, 2): 'grey', (7, 1, 3): 'grey', (7, 1, 4): 'grey', (7, 1, 5): 'grey', (7, 1, 6): 'grey', (7, 1, 7): 'grey', (7, 2, 0): 'grey', (7, 2, 1): 'grey', (7, 2, 2): 'grey', (7, 2, 3): 'grey', (7, 2, 4): 'grey', (7, 2, 5): 'grey', (7, 2, 6): 'grey', (7, 2, 7): 'grey', (7, 3, 0): 'grey', (7, 3, 1): 'grey', (7, 3, 2): 'grey', (7, 3, 3): 'grey', (7, 3, 4): 'grey', (7, 3, 5): 'grey', (7, 3, 6): 'grey', (7, 3, 7): 'grey', (7, 4, 0): 'grey', (7, 4, 1): 'grey', (7, 4, 2): 'grey', (7, 4, 3): 'grey', (7, 4, 4): 'grey', (7, 4, 5): 'grey', (7, 4, 6): 'grey', (7, 4, 7): 'grey', (7, 5, 0): 'grey', (7, 5, 1): 'grey', (7, 5, 2): 'grey', (7, 5, 3): 'grey', (7, 5, 4): 'grey', (7, 5, 5): 'grey', (7, 5, 6): 'grey', (7, 5, 7): 'grey', (7, 6, 0): 'grey', (7, 6, 1): 'grey', (7, 6, 2): 'grey', (7, 6, 3): 'grey', (7, 6, 4): 'grey', (7, 6, 5): 'grey', (7, 6, 6): 'grey', (7, 6, 7): 'grey', (7, 7, 0): 'grey', (7, 7, 1): 'grey', (7, 7, 2): 'grey', (7, 7, 3): 'grey', (7, 7, 4): 'grey', (7, 7, 5): 'grey', (7, 7, 6): 'grey', (7, 7, 7): 'grey'}
iteration is over
nr of iterations so far
3
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (1, 0, 0): [6], (0, 0, 0): [7]}
v is:
(1, 1, 0)
truest
[4, 5]
2
edges_of_v_in_P
[[(1, 1, 0), (1, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[4]
v is
(1, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 0, 5): 'grey', (0, 0, 6): 'grey', (0, 0, 7): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 1, 5): 'grey', (0, 1, 6): 'grey', (0, 1, 7): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 2, 5): 'grey', (0, 2, 6): 'grey', (0, 2, 7): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 3, 5): 'grey', (0, 3, 6): 'grey', (0, 3, 7): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (0, 4, 5): 'grey', (0, 4, 6): 'grey', (0, 4, 7): 'grey', (0, 5, 0): 'grey', (0, 5, 1): 'grey', (0, 5, 2): 'grey', (0, 5, 3): 'grey', (0, 5, 4): 'grey', (0, 5, 5): 'grey', (0, 5, 6): 'grey', (0, 5, 7): 'grey', (0, 6, 0): 'grey', (0, 6, 1): 'grey', (0, 6, 2): 'grey', (0, 6, 3): 'grey', (0, 6, 4): 'grey', (0, 6, 5): 'grey', (0, 6, 6): 'grey', (0, 6, 7): 'grey', (0, 7, 0): 'grey', (0, 7, 1): 'grey', (0, 7, 2): 'grey', (0, 7, 3): 'grey', (0, 7, 4): 'grey', (0, 7, 5): 'grey', (0, 7, 6): 'grey', (0, 7, 7): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 0, 5): 'grey', (1, 0, 6): 'grey', (1, 0, 7): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 1, 5): 'grey', (1, 1, 6): 'grey', (1, 1, 7): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 2, 5): 'grey', (1, 2, 6): 'grey', (1, 2, 7): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 3, 5): 'grey', (1, 3, 6): 'grey', (1, 3, 7): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (1, 4, 5): 'grey', (1, 4, 6): 'grey', (1, 4, 7): 'grey', (1, 5, 0): 'grey', (1, 5, 1): 'grey', (1, 5, 2): 'grey', (1, 5, 3): 'grey', (1, 5, 4): 'grey', (1, 5, 5): 'grey', (1, 5, 6): 'grey', (1, 5, 7): 'grey', (1, 6, 0): 'grey', (1, 6, 1): 'grey', (1, 6, 2): 'grey', (1, 6, 3): 'grey', (1, 6, 4): 'grey', (1, 6, 5): 'grey', (1, 6, 6): 'grey', (1, 6, 7): 'grey', (1, 7, 0): 'grey', (1, 7, 1): 'grey', (1, 7, 2): 'grey', (1, 7, 3): 'grey', (1, 7, 4): 'grey', (1, 7, 5): 'grey', (1, 7, 6): 'grey', (1, 7, 7): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 0, 5): 'grey', (2, 0, 6): 'grey', (2, 0, 7): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 1, 5): 'grey', (2, 1, 6): 'grey', (2, 1, 7): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 2, 5): 'grey', (2, 2, 6): 'grey', (2, 2, 7): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 3, 5): 'grey', (2, 3, 6): 'grey', (2, 3, 7): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (2, 4, 5): 'grey', (2, 4, 6): 'grey', (2, 4, 7): 'grey', (2, 5, 0): 'grey', (2, 5, 1): 'grey', (2, 5, 2): 'grey', (2, 5, 3): 'grey', (2, 5, 4): 'grey', (2, 5, 5): 'grey', (2, 5, 6): 'grey', (2, 5, 7): 'grey', (2, 6, 0): 'grey', (2, 6, 1): 'grey', (2, 6, 2): 'grey', (2, 6, 3): 'grey', (2, 6, 4): 'grey', (2, 6, 5): 'grey', (2, 6, 6): 'grey', (2, 6, 7): 'grey', (2, 7, 0): 'grey', (2, 7, 1): 'grey', (2, 7, 2): 'grey', (2, 7, 3): 'grey', (2, 7, 4): 'grey', (2, 7, 5): 'grey', (2, 7, 6): 'grey', (2, 7, 7): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 0, 5): 'grey', (3, 0, 6): 'grey', (3, 0, 7): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 1, 5): 'grey', (3, 1, 6): 'grey', (3, 1, 7): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 2, 5): 'grey', (3, 2, 6): 'grey', (3, 2, 7): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 3, 5): 'grey', (3, 3, 6): 'grey', (3, 3, 7): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (3, 4, 5): 'grey', (3, 4, 6): 'grey', (3, 4, 7): 'grey', (3, 5, 0): 'grey', (3, 5, 1): 'grey', (3, 5, 2): 'grey', (3, 5, 3): 'grey', (3, 5, 4): 'grey', (3, 5, 5): 'grey', (3, 5, 6): 'grey', (3, 5, 7): 'grey', (3, 6, 0): 'grey', (3, 6, 1): 'grey', (3, 6, 2): 'grey', (3, 6, 3): 'grey', (3, 6, 4): 'grey', (3, 6, 5): 'grey', (3, 6, 6): 'grey', (3, 6, 7): 'grey', (3, 7, 0): 'grey', (3, 7, 1): 'grey', (3, 7, 2): 'grey', (3, 7, 3): 'grey', (3, 7, 4): 'grey', (3, 7, 5): 'grey', (3, 7, 6): 'grey', (3, 7, 7): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 0, 5): 'grey', (4, 0, 6): 'grey', (4, 0, 7): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 1, 5): 'grey', (4, 1, 6): 'grey', (4, 1, 7): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 2, 5): 'grey', (4, 2, 6): 'grey', (4, 2, 7): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 3, 5): 'grey', (4, 3, 6): 'grey', (4, 3, 7): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey', (4, 4, 5): 'grey', (4, 4, 6): 'grey', (4, 4, 7): 'grey', (4, 5, 0): 'grey', (4, 5, 1): 'grey', (4, 5, 2): 'grey', (4, 5, 3): 'grey', (4, 5, 4): 'grey', (4, 5, 5): 'grey', (4, 5, 6): 'grey', (4, 5, 7): 'grey', (4, 6, 0): 'grey', (4, 6, 1): 'grey', (4, 6, 2): 'grey', (4, 6, 3): 'grey', (4, 6, 4): 'grey', (4, 6, 5): 'grey', (4, 6, 6): 'grey', (4, 6, 7): 'grey', (4, 7, 0): 'grey', (4, 7, 1): 'grey', (4, 7, 2): 'grey', (4, 7, 3): 'grey', (4, 7, 4): 'grey', (4, 7, 5): 'grey', (4, 7, 6): 'grey', (4, 7, 7): 'grey', (5, 0, 0): 'grey', (5, 0, 1): 'grey', (5, 0, 2): 'grey', (5, 0, 3): 'grey', (5, 0, 4): 'grey', (5, 0, 5): 'grey', (5, 0, 6): 'grey', (5, 0, 7): 'grey', (5, 1, 0): 'grey', (5, 1, 1): 'grey', (5, 1, 2): 'grey', (5, 1, 3): 'grey', (5, 1, 4): 'grey', (5, 1, 5): 'grey', (5, 1, 6): 'grey', (5, 1, 7): 'grey', (5, 2, 0): 'grey', (5, 2, 1): 'grey', (5, 2, 2): 'grey', (5, 2, 3): 'grey', (5, 2, 4): 'grey', (5, 2, 5): 'grey', (5, 2, 6): 'grey', (5, 2, 7): 'grey', (5, 3, 0): 'grey', (5, 3, 1): 'grey', (5, 3, 2): 'grey', (5, 3, 3): 'grey', (5, 3, 4): 'grey', (5, 3, 5): 'grey', (5, 3, 6): 'grey', (5, 3, 7): 'grey', (5, 4, 0): 'grey', (5, 4, 1): 'grey', (5, 4, 2): 'grey', (5, 4, 3): 'grey', (5, 4, 4): 'grey', (5, 4, 5): 'grey', (5, 4, 6): 'grey', (5, 4, 7): 'grey', (5, 5, 0): 'grey', (5, 5, 1): 'grey', (5, 5, 2): 'grey', (5, 5, 3): 'grey', (5, 5, 4): 'grey', (5, 5, 5): 'grey', (5, 5, 6): 'grey', (5, 5, 7): 'grey', (5, 6, 0): 'grey', (5, 6, 1): 'grey', (5, 6, 2): 'grey', (5, 6, 3): 'grey', (5, 6, 4): 'grey', (5, 6, 5): 'grey', (5, 6, 6): 'grey', (5, 6, 7): 'grey', (5, 7, 0): 'grey', (5, 7, 1): 'grey', (5, 7, 2): 'grey', (5, 7, 3): 'grey', (5, 7, 4): 'grey', (5, 7, 5): 'grey', (5, 7, 6): 'grey', (5, 7, 7): 'grey', (6, 0, 0): 'grey', (6, 0, 1): 'grey', (6, 0, 2): 'grey', (6, 0, 3): 'grey', (6, 0, 4): 'grey', (6, 0, 5): 'grey', (6, 0, 6): 'grey', (6, 0, 7): 'grey', (6, 1, 0): 'grey', (6, 1, 1): 'grey', (6, 1, 2): 'grey', (6, 1, 3): 'grey', (6, 1, 4): 'grey', (6, 1, 5): 'grey', (6, 1, 6): 'grey', (6, 1, 7): 'grey', (6, 2, 0): 'grey', (6, 2, 1): 'grey', (6, 2, 2): 'grey', (6, 2, 3): 'grey', (6, 2, 4): 'grey', (6, 2, 5): 'grey', (6, 2, 6): 'grey', (6, 2, 7): 'grey', (6, 3, 0): 'grey', (6, 3, 1): 'grey', (6, 3, 2): 'grey', (6, 3, 3): 'grey', (6, 3, 4): 'grey', (6, 3, 5): 'grey', (6, 3, 6): 'grey', (6, 3, 7): 'grey', (6, 4, 0): 'grey', (6, 4, 1): 'grey', (6, 4, 2): 'grey', (6, 4, 3): 'grey', (6, 4, 4): 'grey', (6, 4, 5): 'grey', (6, 4, 6): 'grey', (6, 4, 7): 'grey', (6, 5, 0): 'grey', (6, 5, 1): 'grey', (6, 5, 2): 'grey', (6, 5, 3): 'grey', (6, 5, 4): 'grey', (6, 5, 5): 'grey', (6, 5, 6): 'grey', (6, 5, 7): 'grey', (6, 6, 0): 'grey', (6, 6, 1): 'grey', (6, 6, 2): 'grey', (6, 6, 3): 'grey', (6, 6, 4): 'grey', (6, 6, 5): 'grey', (6, 6, 6): 'grey', (6, 6, 7): 'grey', (6, 7, 0): 'grey', (6, 7, 1): 'grey', (6, 7, 2): 'grey', (6, 7, 3): 'grey', (6, 7, 4): 'grey', (6, 7, 5): 'grey', (6, 7, 6): 'grey', (6, 7, 7): 'grey', (7, 0, 0): 'grey', (7, 0, 1): 'grey', (7, 0, 2): 'grey', (7, 0, 3): 'grey', (7, 0, 4): 'grey', (7, 0, 5): 'grey', (7, 0, 6): 'grey', (7, 0, 7): 'grey', (7, 1, 0): 'grey', (7, 1, 1): 'grey', (7, 1, 2): 'grey', (7, 1, 3): 'grey', (7, 1, 4): 'grey', (7, 1, 5): 'grey', (7, 1, 6): 'grey', (7, 1, 7): 'grey', (7, 2, 0): 'grey', (7, 2, 1): 'grey', (7, 2, 2): 'grey', (7, 2, 3): 'grey', (7, 2, 4): 'grey', (7, 2, 5): 'grey', (7, 2, 6): 'grey', (7, 2, 7): 'grey', (7, 3, 0): 'grey', (7, 3, 1): 'grey', (7, 3, 2): 'grey', (7, 3, 3): 'grey', (7, 3, 4): 'grey', (7, 3, 5): 'grey', (7, 3, 6): 'grey', (7, 3, 7): 'grey', (7, 4, 0): 'grey', (7, 4, 1): 'grey', (7, 4, 2): 'grey', (7, 4, 3): 'grey', (7, 4, 4): 'grey', (7, 4, 5): 'grey', (7, 4, 6): 'grey', (7, 4, 7): 'grey', (7, 5, 0): 'grey', (7, 5, 1): 'grey', (7, 5, 2): 'grey', (7, 5, 3): 'grey', (7, 5, 4): 'grey', (7, 5, 5): 'grey', (7, 5, 6): 'grey', (7, 5, 7): 'grey', (7, 6, 0): 'grey', (7, 6, 1): 'grey', (7, 6, 2): 'grey', (7, 6, 3): 'grey', (7, 6, 4): 'grey', (7, 6, 5): 'grey', (7, 6, 6): 'grey', (7, 6, 7): 'grey', (7, 7, 0): 'grey', (7, 7, 1): 'grey', (7, 7, 2): 'grey', (7, 7, 3): 'grey', (7, 7, 4): 'grey', (7, 7, 5): 'grey', (7, 7, 6): 'grey', (7, 7, 7): 'grey'}
iteration is over
nr of iterations so far
4
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
agents at the end of INITIAL SET
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
ITERCUBE s == 6-m commencing
calling CUBE recursively for t-1
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (2, 0, 1), 4: (2, 1, 1), 5: (2, 1, 0), 6: (2, 0, 0), 7: (0, 0, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (3, 0, 1), 4: (3, 1, 1), 5: (3, 1, 0), 6: (3, 0, 0), 7: (0, 0, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (4, 0, 1), 4: (4, 1, 1), 5: (4, 1, 0), 6: (4, 0, 0), 7: (0, 0, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (5, 0, 1), 4: (5, 1, 1), 5: (5, 1, 0), 6: (5, 0, 0), 7: (0, 0, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (6, 0, 1), 4: (6, 1, 1), 5: (6, 1, 0), 6: (6, 0, 0), 7: (0, 0, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (7, 0, 1), 4: (7, 1, 1), 5: (7, 1, 0), 6: (7, 0, 0), 7: (0, 0, 0)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 7, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (7, 7, 1), 4: (7, 2, 1), 5: (7, 2, 0), 6: (7, 7, 0), 7: (0, 7, 0)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 7, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (6, 7, 1), 4: (6, 2, 1), 5: (6, 2, 0), 6: (6, 7, 0), 7: (0, 7, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 7, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (5, 7, 1), 4: (5, 2, 1), 5: (5, 2, 0), 6: (5, 7, 0), 7: (0, 7, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 7, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (4, 7, 1), 4: (4, 2, 1), 5: (4, 2, 0), 6: (4, 7, 0), 7: (0, 7, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 7, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (3, 7, 1), 4: (3, 2, 1), 5: (3, 2, 0), 6: (3, 7, 0), 7: (0, 7, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 7, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (2, 7, 1), 4: (2, 2, 1), 5: (2, 2, 0), 6: (2, 7, 0), 7: (0, 7, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 7, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (1, 7, 1), 4: (1, 2, 1), 5: (1, 2, 0), 6: (1, 7, 0), 7: (0, 7, 0)}
value of y is 1
if happened (moving along second dimension)
{0: (0, 6, 1), 1: (0, 3, 1), 2: (0, 3, 0), 3: (1, 6, 1), 4: (1, 3, 1), 5: (1, 3, 0), 6: (1, 6, 0), 7: (0, 6, 0)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 6, 1), 1: (0, 3, 1), 2: (0, 3, 0), 3: (2, 6, 1), 4: (2, 3, 1), 5: (2, 3, 0), 6: (2, 6, 0), 7: (0, 6, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 6, 1), 1: (0, 3, 1), 2: (0, 3, 0), 3: (3, 6, 1), 4: (3, 3, 1), 5: (3, 3, 0), 6: (3, 6, 0), 7: (0, 6, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 6, 1), 1: (0, 3, 1), 2: (0, 3, 0), 3: (4, 6, 1), 4: (4, 3, 1), 5: (4, 3, 0), 6: (4, 6, 0), 7: (0, 6, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 6, 1), 1: (0, 3, 1), 2: (0, 3, 0), 3: (5, 6, 1), 4: (5, 3, 1), 5: (5, 3, 0), 6: (5, 6, 0), 7: (0, 6, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 6, 1), 1: (0, 3, 1), 2: (0, 3, 0), 3: (6, 6, 1), 4: (6, 3, 1), 5: (6, 3, 0), 6: (6, 6, 0), 7: (0, 6, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 6, 1), 1: (0, 3, 1), 2: (0, 3, 0), 3: (7, 6, 1), 4: (7, 3, 1), 5: (7, 3, 0), 6: (7, 6, 0), 7: (0, 6, 0)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 5, 1), 1: (0, 4, 1), 2: (0, 4, 0), 3: (7, 5, 1), 4: (7, 4, 1), 5: (7, 4, 0), 6: (7, 5, 0), 7: (0, 5, 0)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 5, 1), 1: (0, 4, 1), 2: (0, 4, 0), 3: (6, 5, 1), 4: (6, 4, 1), 5: (6, 4, 0), 6: (6, 5, 0), 7: (0, 5, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 5, 1), 1: (0, 4, 1), 2: (0, 4, 0), 3: (5, 5, 1), 4: (5, 4, 1), 5: (5, 4, 0), 6: (5, 5, 0), 7: (0, 5, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 5, 1), 1: (0, 4, 1), 2: (0, 4, 0), 3: (4, 5, 1), 4: (4, 4, 1), 5: (4, 4, 0), 6: (4, 5, 0), 7: (0, 5, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 5, 1), 1: (0, 4, 1), 2: (0, 4, 0), 3: (3, 5, 1), 4: (3, 4, 1), 5: (3, 4, 0), 6: (3, 5, 0), 7: (0, 5, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 5, 1), 1: (0, 4, 1), 2: (0, 4, 0), 3: (2, 5, 1), 4: (2, 4, 1), 5: (2, 4, 0), 6: (2, 5, 0), 7: (0, 5, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 5, 1), 1: (0, 4, 1), 2: (0, 4, 0), 3: (1, 5, 1), 4: (1, 4, 1), 5: (1, 4, 0), 6: (1, 5, 0), 7: (0, 5, 0)}
value of y is 1
we finshed
h is 0
{0: (0, 5, 1), 1: (0, 4, 1), 2: (0, 4, 7), 3: (1, 5, 1), 4: (1, 4, 1), 5: (1, 4, 7), 6: (1, 5, 7), 7: (0, 5, 7)}
{0: (0, 5, 2), 1: (0, 4, 2), 2: (0, 4, 7), 3: (1, 5, 2), 4: (1, 4, 2), 5: (1, 4, 7), 6: (1, 5, 7), 7: (0, 5, 7)}
calling CUBE recursively for t-1
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 5, 2), 1: (0, 4, 2), 2: (0, 4, 7), 3: (2, 5, 2), 4: (2, 4, 2), 5: (2, 4, 7), 6: (2, 5, 7), 7: (0, 5, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 5, 2), 1: (0, 4, 2), 2: (0, 4, 7), 3: (3, 5, 2), 4: (3, 4, 2), 5: (3, 4, 7), 6: (3, 5, 7), 7: (0, 5, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 5, 2), 1: (0, 4, 2), 2: (0, 4, 7), 3: (4, 5, 2), 4: (4, 4, 2), 5: (4, 4, 7), 6: (4, 5, 7), 7: (0, 5, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 5, 2), 1: (0, 4, 2), 2: (0, 4, 7), 3: (5, 5, 2), 4: (5, 4, 2), 5: (5, 4, 7), 6: (5, 5, 7), 7: (0, 5, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 5, 2), 1: (0, 4, 2), 2: (0, 4, 7), 3: (6, 5, 2), 4: (6, 4, 2), 5: (6, 4, 7), 6: (6, 5, 7), 7: (0, 5, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 5, 2), 1: (0, 4, 2), 2: (0, 4, 7), 3: (7, 5, 2), 4: (7, 4, 2), 5: (7, 4, 7), 6: (7, 5, 7), 7: (0, 5, 7)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 6, 2), 1: (0, 3, 2), 2: (0, 3, 7), 3: (7, 6, 2), 4: (7, 3, 2), 5: (7, 3, 7), 6: (7, 6, 7), 7: (0, 6, 7)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 6, 2), 1: (0, 3, 2), 2: (0, 3, 7), 3: (6, 6, 2), 4: (6, 3, 2), 5: (6, 3, 7), 6: (6, 6, 7), 7: (0, 6, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 6, 2), 1: (0, 3, 2), 2: (0, 3, 7), 3: (5, 6, 2), 4: (5, 3, 2), 5: (5, 3, 7), 6: (5, 6, 7), 7: (0, 6, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 6, 2), 1: (0, 3, 2), 2: (0, 3, 7), 3: (4, 6, 2), 4: (4, 3, 2), 5: (4, 3, 7), 6: (4, 6, 7), 7: (0, 6, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 6, 2), 1: (0, 3, 2), 2: (0, 3, 7), 3: (3, 6, 2), 4: (3, 3, 2), 5: (3, 3, 7), 6: (3, 6, 7), 7: (0, 6, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 6, 2), 1: (0, 3, 2), 2: (0, 3, 7), 3: (2, 6, 2), 4: (2, 3, 2), 5: (2, 3, 7), 6: (2, 6, 7), 7: (0, 6, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 6, 2), 1: (0, 3, 2), 2: (0, 3, 7), 3: (1, 6, 2), 4: (1, 3, 2), 5: (1, 3, 7), 6: (1, 6, 7), 7: (0, 6, 7)}
value of y is 1
if happened (moving along second dimension)
{0: (0, 7, 2), 1: (0, 2, 2), 2: (0, 2, 7), 3: (1, 7, 2), 4: (1, 2, 2), 5: (1, 2, 7), 6: (1, 7, 7), 7: (0, 7, 7)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 7, 2), 1: (0, 2, 2), 2: (0, 2, 7), 3: (2, 7, 2), 4: (2, 2, 2), 5: (2, 2, 7), 6: (2, 7, 7), 7: (0, 7, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 7, 2), 1: (0, 2, 2), 2: (0, 2, 7), 3: (3, 7, 2), 4: (3, 2, 2), 5: (3, 2, 7), 6: (3, 7, 7), 7: (0, 7, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 7, 2), 1: (0, 2, 2), 2: (0, 2, 7), 3: (4, 7, 2), 4: (4, 2, 2), 5: (4, 2, 7), 6: (4, 7, 7), 7: (0, 7, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 7, 2), 1: (0, 2, 2), 2: (0, 2, 7), 3: (5, 7, 2), 4: (5, 2, 2), 5: (5, 2, 7), 6: (5, 7, 7), 7: (0, 7, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 7, 2), 1: (0, 2, 2), 2: (0, 2, 7), 3: (6, 7, 2), 4: (6, 2, 2), 5: (6, 2, 7), 6: (6, 7, 7), 7: (0, 7, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 7, 2), 1: (0, 2, 2), 2: (0, 2, 7), 3: (7, 7, 2), 4: (7, 2, 2), 5: (7, 2, 7), 6: (7, 7, 7), 7: (0, 7, 7)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 7), 3: (7, 0, 2), 4: (7, 1, 2), 5: (7, 1, 7), 6: (7, 0, 7), 7: (0, 0, 7)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 7), 3: (6, 0, 2), 4: (6, 1, 2), 5: (6, 1, 7), 6: (6, 0, 7), 7: (0, 0, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 7), 3: (5, 0, 2), 4: (5, 1, 2), 5: (5, 1, 7), 6: (5, 0, 7), 7: (0, 0, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 7), 3: (4, 0, 2), 4: (4, 1, 2), 5: (4, 1, 7), 6: (4, 0, 7), 7: (0, 0, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 7), 3: (3, 0, 2), 4: (3, 1, 2), 5: (3, 1, 7), 6: (3, 0, 7), 7: (0, 0, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 7), 3: (2, 0, 2), 4: (2, 1, 2), 5: (2, 1, 7), 6: (2, 0, 7), 7: (0, 0, 7)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 7), 3: (1, 0, 2), 4: (1, 1, 2), 5: (1, 1, 7), 6: (1, 0, 7), 7: (0, 0, 7)}
value of y is 1
we finshed
h is 1
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 6), 3: (1, 0, 2), 4: (1, 1, 2), 5: (1, 1, 6), 6: (1, 0, 6), 7: (0, 0, 6)}
{0: (0, 0, 3), 1: (0, 1, 3), 2: (0, 1, 6), 3: (1, 0, 3), 4: (1, 1, 3), 5: (1, 1, 6), 6: (1, 0, 6), 7: (0, 0, 6)}
calling CUBE recursively for t-1
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 3), 1: (0, 1, 3), 2: (0, 1, 6), 3: (2, 0, 3), 4: (2, 1, 3), 5: (2, 1, 6), 6: (2, 0, 6), 7: (0, 0, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 3), 1: (0, 1, 3), 2: (0, 1, 6), 3: (3, 0, 3), 4: (3, 1, 3), 5: (3, 1, 6), 6: (3, 0, 6), 7: (0, 0, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 3), 1: (0, 1, 3), 2: (0, 1, 6), 3: (4, 0, 3), 4: (4, 1, 3), 5: (4, 1, 6), 6: (4, 0, 6), 7: (0, 0, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 3), 1: (0, 1, 3), 2: (0, 1, 6), 3: (5, 0, 3), 4: (5, 1, 3), 5: (5, 1, 6), 6: (5, 0, 6), 7: (0, 0, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 3), 1: (0, 1, 3), 2: (0, 1, 6), 3: (6, 0, 3), 4: (6, 1, 3), 5: (6, 1, 6), 6: (6, 0, 6), 7: (0, 0, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 3), 1: (0, 1, 3), 2: (0, 1, 6), 3: (7, 0, 3), 4: (7, 1, 3), 5: (7, 1, 6), 6: (7, 0, 6), 7: (0, 0, 6)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 7, 3), 1: (0, 2, 3), 2: (0, 2, 6), 3: (7, 7, 3), 4: (7, 2, 3), 5: (7, 2, 6), 6: (7, 7, 6), 7: (0, 7, 6)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 7, 3), 1: (0, 2, 3), 2: (0, 2, 6), 3: (6, 7, 3), 4: (6, 2, 3), 5: (6, 2, 6), 6: (6, 7, 6), 7: (0, 7, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 7, 3), 1: (0, 2, 3), 2: (0, 2, 6), 3: (5, 7, 3), 4: (5, 2, 3), 5: (5, 2, 6), 6: (5, 7, 6), 7: (0, 7, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 7, 3), 1: (0, 2, 3), 2: (0, 2, 6), 3: (4, 7, 3), 4: (4, 2, 3), 5: (4, 2, 6), 6: (4, 7, 6), 7: (0, 7, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 7, 3), 1: (0, 2, 3), 2: (0, 2, 6), 3: (3, 7, 3), 4: (3, 2, 3), 5: (3, 2, 6), 6: (3, 7, 6), 7: (0, 7, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 7, 3), 1: (0, 2, 3), 2: (0, 2, 6), 3: (2, 7, 3), 4: (2, 2, 3), 5: (2, 2, 6), 6: (2, 7, 6), 7: (0, 7, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 7, 3), 1: (0, 2, 3), 2: (0, 2, 6), 3: (1, 7, 3), 4: (1, 2, 3), 5: (1, 2, 6), 6: (1, 7, 6), 7: (0, 7, 6)}
value of y is 1
if happened (moving along second dimension)
{0: (0, 6, 3), 1: (0, 3, 3), 2: (0, 3, 6), 3: (1, 6, 3), 4: (1, 3, 3), 5: (1, 3, 6), 6: (1, 6, 6), 7: (0, 6, 6)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 6, 3), 1: (0, 3, 3), 2: (0, 3, 6), 3: (2, 6, 3), 4: (2, 3, 3), 5: (2, 3, 6), 6: (2, 6, 6), 7: (0, 6, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 6, 3), 1: (0, 3, 3), 2: (0, 3, 6), 3: (3, 6, 3), 4: (3, 3, 3), 5: (3, 3, 6), 6: (3, 6, 6), 7: (0, 6, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 6, 3), 1: (0, 3, 3), 2: (0, 3, 6), 3: (4, 6, 3), 4: (4, 3, 3), 5: (4, 3, 6), 6: (4, 6, 6), 7: (0, 6, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 6, 3), 1: (0, 3, 3), 2: (0, 3, 6), 3: (5, 6, 3), 4: (5, 3, 3), 5: (5, 3, 6), 6: (5, 6, 6), 7: (0, 6, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 6, 3), 1: (0, 3, 3), 2: (0, 3, 6), 3: (6, 6, 3), 4: (6, 3, 3), 5: (6, 3, 6), 6: (6, 6, 6), 7: (0, 6, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 6, 3), 1: (0, 3, 3), 2: (0, 3, 6), 3: (7, 6, 3), 4: (7, 3, 3), 5: (7, 3, 6), 6: (7, 6, 6), 7: (0, 6, 6)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 5, 3), 1: (0, 4, 3), 2: (0, 4, 6), 3: (7, 5, 3), 4: (7, 4, 3), 5: (7, 4, 6), 6: (7, 5, 6), 7: (0, 5, 6)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 5, 3), 1: (0, 4, 3), 2: (0, 4, 6), 3: (6, 5, 3), 4: (6, 4, 3), 5: (6, 4, 6), 6: (6, 5, 6), 7: (0, 5, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 5, 3), 1: (0, 4, 3), 2: (0, 4, 6), 3: (5, 5, 3), 4: (5, 4, 3), 5: (5, 4, 6), 6: (5, 5, 6), 7: (0, 5, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 5, 3), 1: (0, 4, 3), 2: (0, 4, 6), 3: (4, 5, 3), 4: (4, 4, 3), 5: (4, 4, 6), 6: (4, 5, 6), 7: (0, 5, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 5, 3), 1: (0, 4, 3), 2: (0, 4, 6), 3: (3, 5, 3), 4: (3, 4, 3), 5: (3, 4, 6), 6: (3, 5, 6), 7: (0, 5, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 5, 3), 1: (0, 4, 3), 2: (0, 4, 6), 3: (2, 5, 3), 4: (2, 4, 3), 5: (2, 4, 6), 6: (2, 5, 6), 7: (0, 5, 6)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 5, 3), 1: (0, 4, 3), 2: (0, 4, 6), 3: (1, 5, 3), 4: (1, 4, 3), 5: (1, 4, 6), 6: (1, 5, 6), 7: (0, 5, 6)}
value of y is 1
we finshed
h is 2
{0: (0, 5, 3), 1: (0, 4, 3), 2: (0, 4, 5), 3: (1, 5, 3), 4: (1, 4, 3), 5: (1, 4, 5), 6: (1, 5, 5), 7: (0, 5, 5)}
{0: (0, 5, 4), 1: (0, 4, 4), 2: (0, 4, 5), 3: (1, 5, 4), 4: (1, 4, 4), 5: (1, 4, 5), 6: (1, 5, 5), 7: (0, 5, 5)}
calling CUBE recursively for t-1
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 5, 4), 1: (0, 4, 4), 2: (0, 4, 5), 3: (2, 5, 4), 4: (2, 4, 4), 5: (2, 4, 5), 6: (2, 5, 5), 7: (0, 5, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 5, 4), 1: (0, 4, 4), 2: (0, 4, 5), 3: (3, 5, 4), 4: (3, 4, 4), 5: (3, 4, 5), 6: (3, 5, 5), 7: (0, 5, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 5, 4), 1: (0, 4, 4), 2: (0, 4, 5), 3: (4, 5, 4), 4: (4, 4, 4), 5: (4, 4, 5), 6: (4, 5, 5), 7: (0, 5, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 5, 4), 1: (0, 4, 4), 2: (0, 4, 5), 3: (5, 5, 4), 4: (5, 4, 4), 5: (5, 4, 5), 6: (5, 5, 5), 7: (0, 5, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 5, 4), 1: (0, 4, 4), 2: (0, 4, 5), 3: (6, 5, 4), 4: (6, 4, 4), 5: (6, 4, 5), 6: (6, 5, 5), 7: (0, 5, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 5, 4), 1: (0, 4, 4), 2: (0, 4, 5), 3: (7, 5, 4), 4: (7, 4, 4), 5: (7, 4, 5), 6: (7, 5, 5), 7: (0, 5, 5)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 6, 4), 1: (0, 3, 4), 2: (0, 3, 5), 3: (7, 6, 4), 4: (7, 3, 4), 5: (7, 3, 5), 6: (7, 6, 5), 7: (0, 6, 5)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 6, 4), 1: (0, 3, 4), 2: (0, 3, 5), 3: (6, 6, 4), 4: (6, 3, 4), 5: (6, 3, 5), 6: (6, 6, 5), 7: (0, 6, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 6, 4), 1: (0, 3, 4), 2: (0, 3, 5), 3: (5, 6, 4), 4: (5, 3, 4), 5: (5, 3, 5), 6: (5, 6, 5), 7: (0, 6, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 6, 4), 1: (0, 3, 4), 2: (0, 3, 5), 3: (4, 6, 4), 4: (4, 3, 4), 5: (4, 3, 5), 6: (4, 6, 5), 7: (0, 6, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 6, 4), 1: (0, 3, 4), 2: (0, 3, 5), 3: (3, 6, 4), 4: (3, 3, 4), 5: (3, 3, 5), 6: (3, 6, 5), 7: (0, 6, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 6, 4), 1: (0, 3, 4), 2: (0, 3, 5), 3: (2, 6, 4), 4: (2, 3, 4), 5: (2, 3, 5), 6: (2, 6, 5), 7: (0, 6, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 6, 4), 1: (0, 3, 4), 2: (0, 3, 5), 3: (1, 6, 4), 4: (1, 3, 4), 5: (1, 3, 5), 6: (1, 6, 5), 7: (0, 6, 5)}
value of y is 1
if happened (moving along second dimension)
{0: (0, 7, 4), 1: (0, 2, 4), 2: (0, 2, 5), 3: (1, 7, 4), 4: (1, 2, 4), 5: (1, 2, 5), 6: (1, 7, 5), 7: (0, 7, 5)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 7, 4), 1: (0, 2, 4), 2: (0, 2, 5), 3: (2, 7, 4), 4: (2, 2, 4), 5: (2, 2, 5), 6: (2, 7, 5), 7: (0, 7, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 7, 4), 1: (0, 2, 4), 2: (0, 2, 5), 3: (3, 7, 4), 4: (3, 2, 4), 5: (3, 2, 5), 6: (3, 7, 5), 7: (0, 7, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 7, 4), 1: (0, 2, 4), 2: (0, 2, 5), 3: (4, 7, 4), 4: (4, 2, 4), 5: (4, 2, 5), 6: (4, 7, 5), 7: (0, 7, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 7, 4), 1: (0, 2, 4), 2: (0, 2, 5), 3: (5, 7, 4), 4: (5, 2, 4), 5: (5, 2, 5), 6: (5, 7, 5), 7: (0, 7, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 7, 4), 1: (0, 2, 4), 2: (0, 2, 5), 3: (6, 7, 4), 4: (6, 2, 4), 5: (6, 2, 5), 6: (6, 7, 5), 7: (0, 7, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 7, 4), 1: (0, 2, 4), 2: (0, 2, 5), 3: (7, 7, 4), 4: (7, 2, 4), 5: (7, 2, 5), 6: (7, 7, 5), 7: (0, 7, 5)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 0, 4), 1: (0, 1, 4), 2: (0, 1, 5), 3: (7, 0, 4), 4: (7, 1, 4), 5: (7, 1, 5), 6: (7, 0, 5), 7: (0, 0, 5)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 4), 1: (0, 1, 4), 2: (0, 1, 5), 3: (6, 0, 4), 4: (6, 1, 4), 5: (6, 1, 5), 6: (6, 0, 5), 7: (0, 0, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 4), 1: (0, 1, 4), 2: (0, 1, 5), 3: (5, 0, 4), 4: (5, 1, 4), 5: (5, 1, 5), 6: (5, 0, 5), 7: (0, 0, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 4), 1: (0, 1, 4), 2: (0, 1, 5), 3: (4, 0, 4), 4: (4, 1, 4), 5: (4, 1, 5), 6: (4, 0, 5), 7: (0, 0, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 4), 1: (0, 1, 4), 2: (0, 1, 5), 3: (3, 0, 4), 4: (3, 1, 4), 5: (3, 1, 5), 6: (3, 0, 5), 7: (0, 0, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 4), 1: (0, 1, 4), 2: (0, 1, 5), 3: (2, 0, 4), 4: (2, 1, 4), 5: (2, 1, 5), 6: (2, 0, 5), 7: (0, 0, 5)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 4), 1: (0, 1, 4), 2: (0, 1, 5), 3: (1, 0, 4), 4: (1, 1, 4), 5: (1, 1, 5), 6: (1, 0, 5), 7: (0, 0, 5)}
value of y is 1
we finshed
h is 3
{0: (0, 0, 4), 1: (0, 1, 4), 2: (0, 1, 4), 3: (1, 0, 4), 4: (1, 1, 4), 5: (1, 1, 4), 6: (1, 0, 4), 7: (0, 0, 4)}
{0: (0, 0, 5), 1: (0, 1, 5), 2: (0, 1, 4), 3: (1, 0, 5), 4: (1, 1, 5), 5: (1, 1, 4), 6: (1, 0, 4), 7: (0, 0, 4)}
8
no grey nodes remain
after init is 12
move counted is 524
