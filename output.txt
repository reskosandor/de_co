move counter at starting position is 0
dimensions are the following: [6, 6, 6]
Graph with 216 nodes and 648 edges
[(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 0, 4), (0, 0, 5), (0, 1, 0), (0, 1, 1), (0, 1, 2), (0, 1, 3), (0, 1, 4), (0, 1, 5), (0, 2, 0), (0, 2, 1), (0, 2, 2), (0, 2, 3), (0, 2, 4), (0, 2, 5), (0, 3, 0), (0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 3, 5), (0, 4, 0), (0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (0, 4, 5), (0, 5, 0), (0, 5, 1), (0, 5, 2), (0, 5, 3), (0, 5, 4), (0, 5, 5), (1, 0, 0), (1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 0, 4), (1, 0, 5), (1, 1, 0), (1, 1, 1), (1, 1, 2), (1, 1, 3), (1, 1, 4), (1, 1, 5), (1, 2, 0), (1, 2, 1), (1, 2, 2), (1, 2, 3), (1, 2, 4), (1, 2, 5), (1, 3, 0), (1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 3, 5), (1, 4, 0), (1, 4, 1), (1, 4, 2), (1, 4, 3), (1, 4, 4), (1, 4, 5), (1, 5, 0), (1, 5, 1), (1, 5, 2), (1, 5, 3), (1, 5, 4), (1, 5, 5), (2, 0, 0), (2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 0, 5), (2, 1, 0), (2, 1, 1), (2, 1, 2), (2, 1, 3), (2, 1, 4), (2, 1, 5), (2, 2, 0), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 2, 5), (2, 3, 0), (2, 3, 1), (2, 3, 2), (2, 3, 3), (2, 3, 4), (2, 3, 5), (2, 4, 0), (2, 4, 1), (2, 4, 2), (2, 4, 3), (2, 4, 4), (2, 4, 5), (2, 5, 0), (2, 5, 1), (2, 5, 2), (2, 5, 3), (2, 5, 4), (2, 5, 5), (3, 0, 0), (3, 0, 1), (3, 0, 2), (3, 0, 3), (3, 0, 4), (3, 0, 5), (3, 1, 0), (3, 1, 1), (3, 1, 2), (3, 1, 3), (3, 1, 4), (3, 1, 5), (3, 2, 0), (3, 2, 1), (3, 2, 2), (3, 2, 3), (3, 2, 4), (3, 2, 5), (3, 3, 0), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 3, 5), (3, 4, 0), (3, 4, 1), (3, 4, 2), (3, 4, 3), (3, 4, 4), (3, 4, 5), (3, 5, 0), (3, 5, 1), (3, 5, 2), (3, 5, 3), (3, 5, 4), (3, 5, 5), (4, 0, 0), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 0, 5), (4, 1, 0), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 1, 5), (4, 2, 0), (4, 2, 1), (4, 2, 2), (4, 2, 3), (4, 2, 4), (4, 2, 5), (4, 3, 0), (4, 3, 1), (4, 3, 2), (4, 3, 3), (4, 3, 4), (4, 3, 5), (4, 4, 0), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4), (4, 4, 5), (4, 5, 0), (4, 5, 1), (4, 5, 2), (4, 5, 3), (4, 5, 4), (4, 5, 5), (5, 0, 0), (5, 0, 1), (5, 0, 2), (5, 0, 3), (5, 0, 4), (5, 0, 5), (5, 1, 0), (5, 1, 1), (5, 1, 2), (5, 1, 3), (5, 1, 4), (5, 1, 5), (5, 2, 0), (5, 2, 1), (5, 2, 2), (5, 2, 3), (5, 2, 4), (5, 2, 5), (5, 3, 0), (5, 3, 1), (5, 3, 2), (5, 3, 3), (5, 3, 4), (5, 3, 5), (5, 4, 0), (5, 4, 1), (5, 4, 2), (5, 4, 3), (5, 4, 4), (5, 4, 5), (5, 5, 0), (5, 5, 1), (5, 5, 2), (5, 5, 3), (5, 5, 4), (5, 5, 5)]
list of C nodes
[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1), (2, 0, 0), (2, 0, 1), (2, 1, 0), (2, 1, 1), (3, 0, 0), (3, 0, 1), (3, 1, 0), (3, 1, 1), (4, 0, 0), (4, 0, 1), (4, 1, 0), (4, 1, 1), (5, 0, 0), (5, 0, 1), (5, 1, 0), (5, 1, 1)]
{(0, 0, 0): 'grey', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 0, 5): 'grey', (0, 1, 0): 'grey', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 1, 5): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 2, 5): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 3, 5): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (0, 4, 5): 'grey', (0, 5, 0): 'grey', (0, 5, 1): 'grey', (0, 5, 2): 'grey', (0, 5, 3): 'grey', (0, 5, 4): 'grey', (0, 5, 5): 'grey', (1, 0, 0): 'grey', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 0, 5): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 1, 5): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 2, 5): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 3, 5): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (1, 4, 5): 'grey', (1, 5, 0): 'grey', (1, 5, 1): 'grey', (1, 5, 2): 'grey', (1, 5, 3): 'grey', (1, 5, 4): 'grey', (1, 5, 5): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 0, 5): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 1, 5): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 2, 5): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 3, 5): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (2, 4, 5): 'grey', (2, 5, 0): 'grey', (2, 5, 1): 'grey', (2, 5, 2): 'grey', (2, 5, 3): 'grey', (2, 5, 4): 'grey', (2, 5, 5): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 0, 5): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 1, 5): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 2, 5): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 3, 5): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (3, 4, 5): 'grey', (3, 5, 0): 'grey', (3, 5, 1): 'grey', (3, 5, 2): 'grey', (3, 5, 3): 'grey', (3, 5, 4): 'grey', (3, 5, 5): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 0, 5): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 1, 5): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 2, 5): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 3, 5): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey', (4, 4, 5): 'grey', (4, 5, 0): 'grey', (4, 5, 1): 'grey', (4, 5, 2): 'grey', (4, 5, 3): 'grey', (4, 5, 4): 'grey', (4, 5, 5): 'grey', (5, 0, 0): 'grey', (5, 0, 1): 'grey', (5, 0, 2): 'grey', (5, 0, 3): 'grey', (5, 0, 4): 'grey', (5, 0, 5): 'grey', (5, 1, 0): 'grey', (5, 1, 1): 'grey', (5, 1, 2): 'grey', (5, 1, 3): 'grey', (5, 1, 4): 'grey', (5, 1, 5): 'grey', (5, 2, 0): 'grey', (5, 2, 1): 'grey', (5, 2, 2): 'grey', (5, 2, 3): 'grey', (5, 2, 4): 'grey', (5, 2, 5): 'grey', (5, 3, 0): 'grey', (5, 3, 1): 'grey', (5, 3, 2): 'grey', (5, 3, 3): 'grey', (5, 3, 4): 'grey', (5, 3, 5): 'grey', (5, 4, 0): 'grey', (5, 4, 1): 'grey', (5, 4, 2): 'grey', (5, 4, 3): 'grey', (5, 4, 4): 'grey', (5, 4, 5): 'grey', (5, 5, 0): 'grey', (5, 5, 1): 'grey', (5, 5, 2): 'grey', (5, 5, 3): 'grey', (5, 5, 4): 'grey', (5, 5, 5): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
(x,y, z) is:
(0, 0, 1)
[(0, 0, 0), (0, 0, 1)]
(x,y, z) is:
(0, 1, 0)
[(0, 0, 0), (0, 1, 0)]
(x,y, z) is:
(0, 1, 1)
[(0, 0, 0), (0, 1, 0), (0, 1, 1)]
(x,y, z) is:
(1, 0, 0)
[(0, 0, 0), (1, 0, 0)]
(x,y, z) is:
(1, 0, 1)
[(0, 0, 0), (1, 0, 0), (1, 0, 1)]
(x,y, z) is:
(1, 1, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0)]
(x,y, z) is:
(1, 1, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]
(x,y, z) is:
(2, 0, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0)]
(x,y, z) is:
(2, 0, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 0, 1)]
(x,y, z) is:
(2, 1, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0)]
(x,y, z) is:
(2, 1, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 1, 1)]
(x,y, z) is:
(3, 0, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0)]
(x,y, z) is:
(3, 0, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 0, 1)]
(x,y, z) is:
(3, 1, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0)]
(x,y, z) is:
(3, 1, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 1, 1)]
(x,y, z) is:
(4, 0, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0)]
(x,y, z) is:
(4, 0, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 0, 1)]
(x,y, z) is:
(4, 1, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0)]
(x,y, z) is:
(4, 1, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0), (4, 1, 1)]
(x,y, z) is:
(5, 0, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (5, 0, 0)]
(x,y, z) is:
(5, 0, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (5, 0, 0), (5, 0, 1)]
(x,y, z) is:
(5, 1, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (5, 0, 0), (5, 1, 0)]
(x,y, z) is:
(5, 1, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (5, 0, 0), (5, 1, 0), (5, 1, 1)]
P is :
[[(0, 0, 0)], [(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (0, 1, 0), (0, 1, 1)], [(0, 0, 0), (1, 0, 0)], [(0, 0, 0), (1, 0, 0), (1, 0, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 0, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 1, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 0, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 1, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 0, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0), (4, 1, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (5, 0, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (5, 0, 0), (5, 0, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (5, 0, 0), (5, 1, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (5, 0, 0), (5, 1, 0), (5, 1, 1)]]
theoretical_nr_moves is 276
agent_which is 13
agent_when is 91
flipped_agents
{(0, 0, 0): [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]}
v is:
(0, 0, 0)
truest
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
24
edges_of_v_in_P
[[(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)]]
p is:
[1, 2, 20]
i is:
0
list of agents on v
[0]
v is
(0, 0, 0)
i is:
1
list of agents on v
[1, 2]
v is
(0, 0, 0)
i is:
2
list of agents on v
[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
v is
(0, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (1, 0, 0), 8: (1, 0, 0), 9: (1, 0, 0), 10: (1, 0, 0), 11: (1, 0, 0), 12: (1, 0, 0), 13: (1, 0, 0), 14: (1, 0, 0), 15: (1, 0, 0), 16: (1, 0, 0), 17: (1, 0, 0), 18: (1, 0, 0), 19: (1, 0, 0), 20: (1, 0, 0), 21: (1, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 0, 5): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 1, 5): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 2, 5): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 3, 5): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (0, 4, 5): 'grey', (0, 5, 0): 'grey', (0, 5, 1): 'grey', (0, 5, 2): 'grey', (0, 5, 3): 'grey', (0, 5, 4): 'grey', (0, 5, 5): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 0, 5): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 1, 5): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 2, 5): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 3, 5): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (1, 4, 5): 'grey', (1, 5, 0): 'grey', (1, 5, 1): 'grey', (1, 5, 2): 'grey', (1, 5, 3): 'grey', (1, 5, 4): 'grey', (1, 5, 5): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 0, 5): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 1, 5): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 2, 5): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 3, 5): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (2, 4, 5): 'grey', (2, 5, 0): 'grey', (2, 5, 1): 'grey', (2, 5, 2): 'grey', (2, 5, 3): 'grey', (2, 5, 4): 'grey', (2, 5, 5): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 0, 5): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 1, 5): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 2, 5): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 3, 5): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (3, 4, 5): 'grey', (3, 5, 0): 'grey', (3, 5, 1): 'grey', (3, 5, 2): 'grey', (3, 5, 3): 'grey', (3, 5, 4): 'grey', (3, 5, 5): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 0, 5): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 1, 5): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 2, 5): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 3, 5): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey', (4, 4, 5): 'grey', (4, 5, 0): 'grey', (4, 5, 1): 'grey', (4, 5, 2): 'grey', (4, 5, 3): 'grey', (4, 5, 4): 'grey', (4, 5, 5): 'grey', (5, 0, 0): 'grey', (5, 0, 1): 'grey', (5, 0, 2): 'grey', (5, 0, 3): 'grey', (5, 0, 4): 'grey', (5, 0, 5): 'grey', (5, 1, 0): 'grey', (5, 1, 1): 'grey', (5, 1, 2): 'grey', (5, 1, 3): 'grey', (5, 1, 4): 'grey', (5, 1, 5): 'grey', (5, 2, 0): 'grey', (5, 2, 1): 'grey', (5, 2, 2): 'grey', (5, 2, 3): 'grey', (5, 2, 4): 'grey', (5, 2, 5): 'grey', (5, 3, 0): 'grey', (5, 3, 1): 'grey', (5, 3, 2): 'grey', (5, 3, 3): 'grey', (5, 3, 4): 'grey', (5, 3, 5): 'grey', (5, 4, 0): 'grey', (5, 4, 1): 'grey', (5, 4, 2): 'grey', (5, 4, 3): 'grey', (5, 4, 4): 'grey', (5, 4, 5): 'grey', (5, 5, 0): 'grey', (5, 5, 1): 'grey', (5, 5, 2): 'grey', (5, 5, 3): 'grey', (5, 5, 4): 'grey', (5, 5, 5): 'grey'}
iteration is over
nr of iterations so far
1
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (0, 0, 1), (0, 1, 0)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (1, 0, 0), 8: (1, 0, 0), 9: (1, 0, 0), 10: (1, 0, 0), 11: (1, 0, 0), 12: (1, 0, 0), 13: (1, 0, 0), 14: (1, 0, 0), 15: (1, 0, 0), 16: (1, 0, 0), 17: (1, 0, 0), 18: (1, 0, 0), 19: (1, 0, 0), 20: (1, 0, 0), 21: (1, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 0): [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], (0, 0, 0): [23]}
v is:
(1, 0, 0)
truest
[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
20
edges_of_v_in_P
[[(1, 0, 0), (1, 0, 1)], [(1, 0, 0), (1, 1, 0)], [(1, 0, 0), (2, 0, 0)]]
p is:
[1, 2, 16]
i is:
0
list of agents on v
[3]
v is
(1, 0, 0)
i is:
1
list of agents on v
[4, 5]
v is
(1, 0, 0)
i is:
2
list of agents on v
[6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
v is
(1, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 0), 7: (2, 0, 0), 8: (2, 0, 0), 9: (2, 0, 0), 10: (2, 0, 0), 11: (2, 0, 0), 12: (2, 0, 0), 13: (2, 0, 0), 14: (2, 0, 0), 15: (2, 0, 0), 16: (2, 0, 0), 17: (2, 0, 0), 18: (2, 0, 0), 19: (2, 0, 0), 20: (2, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 0, 5): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 1, 5): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 2, 5): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 3, 5): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (0, 4, 5): 'grey', (0, 5, 0): 'grey', (0, 5, 1): 'grey', (0, 5, 2): 'grey', (0, 5, 3): 'grey', (0, 5, 4): 'grey', (0, 5, 5): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 0, 5): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 1, 5): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 2, 5): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 3, 5): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (1, 4, 5): 'grey', (1, 5, 0): 'grey', (1, 5, 1): 'grey', (1, 5, 2): 'grey', (1, 5, 3): 'grey', (1, 5, 4): 'grey', (1, 5, 5): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 0, 5): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 1, 5): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 2, 5): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 3, 5): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (2, 4, 5): 'grey', (2, 5, 0): 'grey', (2, 5, 1): 'grey', (2, 5, 2): 'grey', (2, 5, 3): 'grey', (2, 5, 4): 'grey', (2, 5, 5): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 0, 5): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 1, 5): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 2, 5): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 3, 5): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (3, 4, 5): 'grey', (3, 5, 0): 'grey', (3, 5, 1): 'grey', (3, 5, 2): 'grey', (3, 5, 3): 'grey', (3, 5, 4): 'grey', (3, 5, 5): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 0, 5): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 1, 5): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 2, 5): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 3, 5): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey', (4, 4, 5): 'grey', (4, 5, 0): 'grey', (4, 5, 1): 'grey', (4, 5, 2): 'grey', (4, 5, 3): 'grey', (4, 5, 4): 'grey', (4, 5, 5): 'grey', (5, 0, 0): 'grey', (5, 0, 1): 'grey', (5, 0, 2): 'grey', (5, 0, 3): 'grey', (5, 0, 4): 'grey', (5, 0, 5): 'grey', (5, 1, 0): 'grey', (5, 1, 1): 'grey', (5, 1, 2): 'grey', (5, 1, 3): 'grey', (5, 1, 4): 'grey', (5, 1, 5): 'grey', (5, 2, 0): 'grey', (5, 2, 1): 'grey', (5, 2, 2): 'grey', (5, 2, 3): 'grey', (5, 2, 4): 'grey', (5, 2, 5): 'grey', (5, 3, 0): 'grey', (5, 3, 1): 'grey', (5, 3, 2): 'grey', (5, 3, 3): 'grey', (5, 3, 4): 'grey', (5, 3, 5): 'grey', (5, 4, 0): 'grey', (5, 4, 1): 'grey', (5, 4, 2): 'grey', (5, 4, 3): 'grey', (5, 4, 4): 'grey', (5, 4, 5): 'grey', (5, 5, 0): 'grey', (5, 5, 1): 'grey', (5, 5, 2): 'grey', (5, 5, 3): 'grey', (5, 5, 4): 'grey', (5, 5, 5): 'grey'}
iteration is over
nr of iterations so far
2
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 0), 7: (2, 0, 0), 8: (2, 0, 0), 9: (2, 0, 0), 10: (2, 0, 0), 11: (2, 0, 0), 12: (2, 0, 0), 13: (2, 0, 0), 14: (2, 0, 0), 15: (2, 0, 0), 16: (2, 0, 0), 17: (2, 0, 0), 18: (2, 0, 0), 19: (2, 0, 0), 20: (2, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (2, 0, 0): [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], (1, 0, 0): [22], (0, 0, 0): [23]}
v is:
(2, 0, 0)
truest
[6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
16
edges_of_v_in_P
[[(2, 0, 0), (2, 0, 1)], [(2, 0, 0), (2, 1, 0)], [(2, 0, 0), (3, 0, 0)]]
p is:
[1, 2, 12]
i is:
0
list of agents on v
[6]
v is
(2, 0, 0)
i is:
1
list of agents on v
[7, 8]
v is
(2, 0, 0)
i is:
2
list of agents on v
[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
v is
(2, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 0), 10: (3, 0, 0), 11: (3, 0, 0), 12: (3, 0, 0), 13: (3, 0, 0), 14: (3, 0, 0), 15: (3, 0, 0), 16: (3, 0, 0), 17: (3, 0, 0), 18: (3, 0, 0), 19: (3, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 0, 5): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 1, 5): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 2, 5): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 3, 5): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (0, 4, 5): 'grey', (0, 5, 0): 'grey', (0, 5, 1): 'grey', (0, 5, 2): 'grey', (0, 5, 3): 'grey', (0, 5, 4): 'grey', (0, 5, 5): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 0, 5): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 1, 5): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 2, 5): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 3, 5): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (1, 4, 5): 'grey', (1, 5, 0): 'grey', (1, 5, 1): 'grey', (1, 5, 2): 'grey', (1, 5, 3): 'grey', (1, 5, 4): 'grey', (1, 5, 5): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 0, 5): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 1, 5): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 2, 5): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 3, 5): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (2, 4, 5): 'grey', (2, 5, 0): 'grey', (2, 5, 1): 'grey', (2, 5, 2): 'grey', (2, 5, 3): 'grey', (2, 5, 4): 'grey', (2, 5, 5): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 0, 5): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 1, 5): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 2, 5): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 3, 5): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (3, 4, 5): 'grey', (3, 5, 0): 'grey', (3, 5, 1): 'grey', (3, 5, 2): 'grey', (3, 5, 3): 'grey', (3, 5, 4): 'grey', (3, 5, 5): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 0, 5): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 1, 5): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 2, 5): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 3, 5): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey', (4, 4, 5): 'grey', (4, 5, 0): 'grey', (4, 5, 1): 'grey', (4, 5, 2): 'grey', (4, 5, 3): 'grey', (4, 5, 4): 'grey', (4, 5, 5): 'grey', (5, 0, 0): 'grey', (5, 0, 1): 'grey', (5, 0, 2): 'grey', (5, 0, 3): 'grey', (5, 0, 4): 'grey', (5, 0, 5): 'grey', (5, 1, 0): 'grey', (5, 1, 1): 'grey', (5, 1, 2): 'grey', (5, 1, 3): 'grey', (5, 1, 4): 'grey', (5, 1, 5): 'grey', (5, 2, 0): 'grey', (5, 2, 1): 'grey', (5, 2, 2): 'grey', (5, 2, 3): 'grey', (5, 2, 4): 'grey', (5, 2, 5): 'grey', (5, 3, 0): 'grey', (5, 3, 1): 'grey', (5, 3, 2): 'grey', (5, 3, 3): 'grey', (5, 3, 4): 'grey', (5, 3, 5): 'grey', (5, 4, 0): 'grey', (5, 4, 1): 'grey', (5, 4, 2): 'grey', (5, 4, 3): 'grey', (5, 4, 4): 'grey', (5, 4, 5): 'grey', (5, 5, 0): 'grey', (5, 5, 1): 'grey', (5, 5, 2): 'grey', (5, 5, 3): 'grey', (5, 5, 4): 'grey', (5, 5, 5): 'grey'}
iteration is over
nr of iterations so far
3
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (3, 0, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 0), 10: (3, 0, 0), 11: (3, 0, 0), 12: (3, 0, 0), 13: (3, 0, 0), 14: (3, 0, 0), 15: (3, 0, 0), 16: (3, 0, 0), 17: (3, 0, 0), 18: (3, 0, 0), 19: (3, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (2, 0, 1): [6], (2, 1, 0): [7, 8], (3, 0, 0): [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], (2, 0, 0): [21], (1, 0, 0): [22], (0, 0, 0): [23]}
v is:
(3, 0, 0)
truest
[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
12
edges_of_v_in_P
[[(3, 0, 0), (3, 0, 1)], [(3, 0, 0), (3, 1, 0)], [(3, 0, 0), (4, 0, 0)]]
p is:
[1, 2, 8]
i is:
0
list of agents on v
[9]
v is
(3, 0, 0)
i is:
1
list of agents on v
[10, 11]
v is
(3, 0, 0)
i is:
2
list of agents on v
[12, 13, 14, 15, 16, 17, 18, 19]
v is
(3, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 0), 13: (4, 0, 0), 14: (4, 0, 0), 15: (4, 0, 0), 16: (4, 0, 0), 17: (4, 0, 0), 18: (4, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 0, 5): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 1, 5): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 2, 5): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 3, 5): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (0, 4, 5): 'grey', (0, 5, 0): 'grey', (0, 5, 1): 'grey', (0, 5, 2): 'grey', (0, 5, 3): 'grey', (0, 5, 4): 'grey', (0, 5, 5): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 0, 5): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 1, 5): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 2, 5): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 3, 5): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (1, 4, 5): 'grey', (1, 5, 0): 'grey', (1, 5, 1): 'grey', (1, 5, 2): 'grey', (1, 5, 3): 'grey', (1, 5, 4): 'grey', (1, 5, 5): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 0, 5): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 1, 5): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 2, 5): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 3, 5): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (2, 4, 5): 'grey', (2, 5, 0): 'grey', (2, 5, 1): 'grey', (2, 5, 2): 'grey', (2, 5, 3): 'grey', (2, 5, 4): 'grey', (2, 5, 5): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 0, 5): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 1, 5): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 2, 5): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 3, 5): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (3, 4, 5): 'grey', (3, 5, 0): 'grey', (3, 5, 1): 'grey', (3, 5, 2): 'grey', (3, 5, 3): 'grey', (3, 5, 4): 'grey', (3, 5, 5): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 0, 5): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 1, 5): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 2, 5): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 3, 5): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey', (4, 4, 5): 'grey', (4, 5, 0): 'grey', (4, 5, 1): 'grey', (4, 5, 2): 'grey', (4, 5, 3): 'grey', (4, 5, 4): 'grey', (4, 5, 5): 'grey', (5, 0, 0): 'grey', (5, 0, 1): 'grey', (5, 0, 2): 'grey', (5, 0, 3): 'grey', (5, 0, 4): 'grey', (5, 0, 5): 'grey', (5, 1, 0): 'grey', (5, 1, 1): 'grey', (5, 1, 2): 'grey', (5, 1, 3): 'grey', (5, 1, 4): 'grey', (5, 1, 5): 'grey', (5, 2, 0): 'grey', (5, 2, 1): 'grey', (5, 2, 2): 'grey', (5, 2, 3): 'grey', (5, 2, 4): 'grey', (5, 2, 5): 'grey', (5, 3, 0): 'grey', (5, 3, 1): 'grey', (5, 3, 2): 'grey', (5, 3, 3): 'grey', (5, 3, 4): 'grey', (5, 3, 5): 'grey', (5, 4, 0): 'grey', (5, 4, 1): 'grey', (5, 4, 2): 'grey', (5, 4, 3): 'grey', (5, 4, 4): 'grey', (5, 4, 5): 'grey', (5, 5, 0): 'grey', (5, 5, 1): 'grey', (5, 5, 2): 'grey', (5, 5, 3): 'grey', (5, 5, 4): 'grey', (5, 5, 5): 'grey'}
iteration is over
nr of iterations so far
4
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (4, 0, 0), (4, 0, 0), (4, 0, 0), (4, 0, 0), (4, 0, 0), (4, 0, 0), (4, 0, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (3, 0, 0), (0, 0, 0), (3, 1, 0), (4, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 0), 13: (4, 0, 0), 14: (4, 0, 0), 15: (4, 0, 0), 16: (4, 0, 0), 17: (4, 0, 0), 18: (4, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (2, 0, 1): [6], (2, 1, 0): [7, 8], (3, 0, 1): [9], (3, 1, 0): [10, 11], (4, 0, 0): [12, 13, 14, 15, 16, 17, 18, 19], (3, 0, 0): [20], (2, 0, 0): [21], (1, 0, 0): [22], (0, 0, 0): [23]}
v is:
(4, 0, 0)
truest
[12, 13, 14, 15, 16, 17, 18, 19]
8
edges_of_v_in_P
[[(4, 0, 0), (4, 0, 1)], [(4, 0, 0), (4, 1, 0)], [(4, 0, 0), (5, 0, 0)]]
p is:
[1, 2, 4]
i is:
0
list of agents on v
[12]
v is
(4, 0, 0)
i is:
1
list of agents on v
[13, 14]
v is
(4, 0, 0)
i is:
2
list of agents on v
[15, 16, 17, 18]
v is
(4, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (5, 0, 0), 16: (5, 0, 0), 17: (5, 0, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 0, 5): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 1, 5): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 2, 5): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 3, 5): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (0, 4, 5): 'grey', (0, 5, 0): 'grey', (0, 5, 1): 'grey', (0, 5, 2): 'grey', (0, 5, 3): 'grey', (0, 5, 4): 'grey', (0, 5, 5): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 0, 5): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 1, 5): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 2, 5): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 3, 5): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (1, 4, 5): 'grey', (1, 5, 0): 'grey', (1, 5, 1): 'grey', (1, 5, 2): 'grey', (1, 5, 3): 'grey', (1, 5, 4): 'grey', (1, 5, 5): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 0, 5): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 1, 5): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 2, 5): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 3, 5): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (2, 4, 5): 'grey', (2, 5, 0): 'grey', (2, 5, 1): 'grey', (2, 5, 2): 'grey', (2, 5, 3): 'grey', (2, 5, 4): 'grey', (2, 5, 5): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 0, 5): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 1, 5): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 2, 5): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 3, 5): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (3, 4, 5): 'grey', (3, 5, 0): 'grey', (3, 5, 1): 'grey', (3, 5, 2): 'grey', (3, 5, 3): 'grey', (3, 5, 4): 'grey', (3, 5, 5): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 0, 5): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 1, 5): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 2, 5): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 3, 5): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey', (4, 4, 5): 'grey', (4, 5, 0): 'grey', (4, 5, 1): 'grey', (4, 5, 2): 'grey', (4, 5, 3): 'grey', (4, 5, 4): 'grey', (4, 5, 5): 'grey', (5, 0, 0): 'black', (5, 0, 1): 'grey', (5, 0, 2): 'grey', (5, 0, 3): 'grey', (5, 0, 4): 'grey', (5, 0, 5): 'grey', (5, 1, 0): 'grey', (5, 1, 1): 'grey', (5, 1, 2): 'grey', (5, 1, 3): 'grey', (5, 1, 4): 'grey', (5, 1, 5): 'grey', (5, 2, 0): 'grey', (5, 2, 1): 'grey', (5, 2, 2): 'grey', (5, 2, 3): 'grey', (5, 2, 4): 'grey', (5, 2, 5): 'grey', (5, 3, 0): 'grey', (5, 3, 1): 'grey', (5, 3, 2): 'grey', (5, 3, 3): 'grey', (5, 3, 4): 'grey', (5, 3, 5): 'grey', (5, 4, 0): 'grey', (5, 4, 1): 'grey', (5, 4, 2): 'grey', (5, 4, 3): 'grey', (5, 4, 4): 'grey', (5, 4, 5): 'grey', (5, 5, 0): 'grey', (5, 5, 1): 'grey', (5, 5, 2): 'grey', (5, 5, 3): 'grey', (5, 5, 4): 'grey', (5, 5, 5): 'grey'}
iteration is over
nr of iterations so far
5
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (4, 0, 1), (4, 1, 0), (4, 1, 0), (5, 0, 0), (5, 0, 0), (5, 0, 0), (5, 0, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (4, 0, 1), (3, 0, 0), (3, 1, 0), (0, 0, 0), (4, 0, 0), (2, 0, 1), (1, 0, 0), (4, 1, 0), (5, 0, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (5, 0, 0), 16: (5, 0, 0), 17: (5, 0, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (2, 0, 1): [6], (2, 1, 0): [7, 8], (3, 0, 1): [9], (3, 1, 0): [10, 11], (4, 0, 1): [12], (4, 1, 0): [13, 14], (5, 0, 0): [15, 16, 17, 18], (4, 0, 0): [19], (3, 0, 0): [20], (2, 0, 0): [21], (1, 0, 0): [22], (0, 0, 0): [23]}
v is:
(5, 0, 0)
truest
[15, 16, 17, 18]
4
edges_of_v_in_P
[[(5, 0, 0), (5, 0, 1)], [(5, 0, 0), (5, 1, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[15]
v is
(5, 0, 0)
i is:
1
list of agents on v
[16, 17]
v is
(5, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (5, 0, 1), 16: (5, 1, 0), 17: (5, 1, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 0, 5): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 1, 5): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 2, 5): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 3, 5): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (0, 4, 5): 'grey', (0, 5, 0): 'grey', (0, 5, 1): 'grey', (0, 5, 2): 'grey', (0, 5, 3): 'grey', (0, 5, 4): 'grey', (0, 5, 5): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 0, 5): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 1, 5): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 2, 5): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 3, 5): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (1, 4, 5): 'grey', (1, 5, 0): 'grey', (1, 5, 1): 'grey', (1, 5, 2): 'grey', (1, 5, 3): 'grey', (1, 5, 4): 'grey', (1, 5, 5): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 0, 5): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 1, 5): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 2, 5): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 3, 5): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (2, 4, 5): 'grey', (2, 5, 0): 'grey', (2, 5, 1): 'grey', (2, 5, 2): 'grey', (2, 5, 3): 'grey', (2, 5, 4): 'grey', (2, 5, 5): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 0, 5): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 1, 5): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 2, 5): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 3, 5): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (3, 4, 5): 'grey', (3, 5, 0): 'grey', (3, 5, 1): 'grey', (3, 5, 2): 'grey', (3, 5, 3): 'grey', (3, 5, 4): 'grey', (3, 5, 5): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 0, 5): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 1, 5): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 2, 5): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 3, 5): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey', (4, 4, 5): 'grey', (4, 5, 0): 'grey', (4, 5, 1): 'grey', (4, 5, 2): 'grey', (4, 5, 3): 'grey', (4, 5, 4): 'grey', (4, 5, 5): 'grey', (5, 0, 0): 'black', (5, 0, 1): 'black', (5, 0, 2): 'grey', (5, 0, 3): 'grey', (5, 0, 4): 'grey', (5, 0, 5): 'grey', (5, 1, 0): 'black', (5, 1, 1): 'grey', (5, 1, 2): 'grey', (5, 1, 3): 'grey', (5, 1, 4): 'grey', (5, 1, 5): 'grey', (5, 2, 0): 'grey', (5, 2, 1): 'grey', (5, 2, 2): 'grey', (5, 2, 3): 'grey', (5, 2, 4): 'grey', (5, 2, 5): 'grey', (5, 3, 0): 'grey', (5, 3, 1): 'grey', (5, 3, 2): 'grey', (5, 3, 3): 'grey', (5, 3, 4): 'grey', (5, 3, 5): 'grey', (5, 4, 0): 'grey', (5, 4, 1): 'grey', (5, 4, 2): 'grey', (5, 4, 3): 'grey', (5, 4, 4): 'grey', (5, 4, 5): 'grey', (5, 5, 0): 'grey', (5, 5, 1): 'grey', (5, 5, 2): 'grey', (5, 5, 3): 'grey', (5, 5, 4): 'grey', (5, 5, 5): 'grey'}
iteration is over
nr of iterations so far
6
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (4, 0, 1), (4, 1, 0), (4, 1, 0), (5, 0, 1), (5, 1, 0), (5, 1, 0), (5, 0, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (4, 0, 1), (3, 0, 0), (3, 1, 0), (0, 0, 0), (5, 0, 1), (4, 0, 0), (2, 0, 1), (1, 0, 0), (4, 1, 0), (5, 0, 0), (2, 0, 0), (5, 1, 0), (3, 0, 1), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (5, 0, 1), 16: (5, 1, 0), 17: (5, 1, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (2, 0, 1): [6], (2, 1, 0): [7, 8], (3, 0, 1): [9], (3, 1, 0): [10, 11], (4, 0, 1): [12], (4, 1, 0): [13, 14], (5, 0, 1): [15], (5, 1, 0): [16, 17], (5, 0, 0): [18], (4, 0, 0): [19], (3, 0, 0): [20], (2, 0, 0): [21], (1, 0, 0): [22], (0, 0, 0): [23]}
v is:
(0, 1, 0)
truest
[1, 2]
2
edges_of_v_in_P
[[(0, 1, 0), (0, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[1]
v is
(0, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (5, 0, 1), 16: (5, 1, 0), 17: (5, 1, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 0, 5): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 1, 5): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 2, 5): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 3, 5): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (0, 4, 5): 'grey', (0, 5, 0): 'grey', (0, 5, 1): 'grey', (0, 5, 2): 'grey', (0, 5, 3): 'grey', (0, 5, 4): 'grey', (0, 5, 5): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 0, 5): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 1, 5): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 2, 5): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 3, 5): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (1, 4, 5): 'grey', (1, 5, 0): 'grey', (1, 5, 1): 'grey', (1, 5, 2): 'grey', (1, 5, 3): 'grey', (1, 5, 4): 'grey', (1, 5, 5): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 0, 5): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 1, 5): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 2, 5): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 3, 5): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (2, 4, 5): 'grey', (2, 5, 0): 'grey', (2, 5, 1): 'grey', (2, 5, 2): 'grey', (2, 5, 3): 'grey', (2, 5, 4): 'grey', (2, 5, 5): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 0, 5): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 1, 5): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 2, 5): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 3, 5): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (3, 4, 5): 'grey', (3, 5, 0): 'grey', (3, 5, 1): 'grey', (3, 5, 2): 'grey', (3, 5, 3): 'grey', (3, 5, 4): 'grey', (3, 5, 5): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 0, 5): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 1, 5): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 2, 5): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 3, 5): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey', (4, 4, 5): 'grey', (4, 5, 0): 'grey', (4, 5, 1): 'grey', (4, 5, 2): 'grey', (4, 5, 3): 'grey', (4, 5, 4): 'grey', (4, 5, 5): 'grey', (5, 0, 0): 'black', (5, 0, 1): 'black', (5, 0, 2): 'grey', (5, 0, 3): 'grey', (5, 0, 4): 'grey', (5, 0, 5): 'grey', (5, 1, 0): 'black', (5, 1, 1): 'grey', (5, 1, 2): 'grey', (5, 1, 3): 'grey', (5, 1, 4): 'grey', (5, 1, 5): 'grey', (5, 2, 0): 'grey', (5, 2, 1): 'grey', (5, 2, 2): 'grey', (5, 2, 3): 'grey', (5, 2, 4): 'grey', (5, 2, 5): 'grey', (5, 3, 0): 'grey', (5, 3, 1): 'grey', (5, 3, 2): 'grey', (5, 3, 3): 'grey', (5, 3, 4): 'grey', (5, 3, 5): 'grey', (5, 4, 0): 'grey', (5, 4, 1): 'grey', (5, 4, 2): 'grey', (5, 4, 3): 'grey', (5, 4, 4): 'grey', (5, 4, 5): 'grey', (5, 5, 0): 'grey', (5, 5, 1): 'grey', (5, 5, 2): 'grey', (5, 5, 3): 'grey', (5, 5, 4): 'grey', (5, 5, 5): 'grey'}
iteration is over
nr of iterations so far
7
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (4, 0, 1), (4, 1, 0), (4, 1, 0), (5, 0, 1), (5, 1, 0), (5, 1, 0), (5, 0, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (5, 0, 1), (0, 0, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (5, 0, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (0, 1, 1), (3, 1, 0), (4, 1, 0), (5, 1, 0), (3, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (5, 0, 1), 16: (5, 1, 0), 17: (5, 1, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (2, 0, 1): [6], (2, 1, 0): [7, 8], (3, 0, 1): [9], (3, 1, 0): [10, 11], (4, 0, 1): [12], (4, 1, 0): [13, 14], (5, 0, 1): [15], (5, 1, 0): [16, 17], (5, 0, 0): [18], (4, 0, 0): [19], (3, 0, 0): [20], (2, 0, 0): [21], (1, 0, 0): [22], (0, 0, 0): [23]}
v is:
(1, 1, 0)
truest
[4, 5]
2
edges_of_v_in_P
[[(1, 1, 0), (1, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[4]
v is
(1, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (5, 0, 1), 16: (5, 1, 0), 17: (5, 1, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 0, 5): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 1, 5): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 2, 5): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 3, 5): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (0, 4, 5): 'grey', (0, 5, 0): 'grey', (0, 5, 1): 'grey', (0, 5, 2): 'grey', (0, 5, 3): 'grey', (0, 5, 4): 'grey', (0, 5, 5): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 0, 5): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 1, 5): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 2, 5): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 3, 5): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (1, 4, 5): 'grey', (1, 5, 0): 'grey', (1, 5, 1): 'grey', (1, 5, 2): 'grey', (1, 5, 3): 'grey', (1, 5, 4): 'grey', (1, 5, 5): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 0, 5): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 1, 5): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 2, 5): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 3, 5): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (2, 4, 5): 'grey', (2, 5, 0): 'grey', (2, 5, 1): 'grey', (2, 5, 2): 'grey', (2, 5, 3): 'grey', (2, 5, 4): 'grey', (2, 5, 5): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 0, 5): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 1, 5): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 2, 5): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 3, 5): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (3, 4, 5): 'grey', (3, 5, 0): 'grey', (3, 5, 1): 'grey', (3, 5, 2): 'grey', (3, 5, 3): 'grey', (3, 5, 4): 'grey', (3, 5, 5): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 0, 5): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 1, 5): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 2, 5): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 3, 5): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey', (4, 4, 5): 'grey', (4, 5, 0): 'grey', (4, 5, 1): 'grey', (4, 5, 2): 'grey', (4, 5, 3): 'grey', (4, 5, 4): 'grey', (4, 5, 5): 'grey', (5, 0, 0): 'black', (5, 0, 1): 'black', (5, 0, 2): 'grey', (5, 0, 3): 'grey', (5, 0, 4): 'grey', (5, 0, 5): 'grey', (5, 1, 0): 'black', (5, 1, 1): 'grey', (5, 1, 2): 'grey', (5, 1, 3): 'grey', (5, 1, 4): 'grey', (5, 1, 5): 'grey', (5, 2, 0): 'grey', (5, 2, 1): 'grey', (5, 2, 2): 'grey', (5, 2, 3): 'grey', (5, 2, 4): 'grey', (5, 2, 5): 'grey', (5, 3, 0): 'grey', (5, 3, 1): 'grey', (5, 3, 2): 'grey', (5, 3, 3): 'grey', (5, 3, 4): 'grey', (5, 3, 5): 'grey', (5, 4, 0): 'grey', (5, 4, 1): 'grey', (5, 4, 2): 'grey', (5, 4, 3): 'grey', (5, 4, 4): 'grey', (5, 4, 5): 'grey', (5, 5, 0): 'grey', (5, 5, 1): 'grey', (5, 5, 2): 'grey', (5, 5, 3): 'grey', (5, 5, 4): 'grey', (5, 5, 5): 'grey'}
iteration is over
nr of iterations so far
8
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (4, 0, 1), (4, 1, 0), (4, 1, 0), (5, 0, 1), (5, 1, 0), (5, 1, 0), (5, 0, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (5, 0, 1), (0, 0, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (5, 0, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (0, 1, 1), (3, 1, 0), (4, 1, 0), (5, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (5, 0, 1), 16: (5, 1, 0), 17: (5, 1, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 1): [4], (1, 1, 0): [5], (2, 0, 1): [6], (2, 1, 0): [7, 8], (3, 0, 1): [9], (3, 1, 0): [10, 11], (4, 0, 1): [12], (4, 1, 0): [13, 14], (5, 0, 1): [15], (5, 1, 0): [16, 17], (5, 0, 0): [18], (4, 0, 0): [19], (3, 0, 0): [20], (2, 0, 0): [21], (1, 0, 0): [22], (0, 0, 0): [23]}
v is:
(2, 1, 0)
truest
[7, 8]
2
edges_of_v_in_P
[[(2, 1, 0), (2, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[7]
v is
(2, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (5, 0, 1), 16: (5, 1, 0), 17: (5, 1, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 0, 5): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 1, 5): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 2, 5): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 3, 5): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (0, 4, 5): 'grey', (0, 5, 0): 'grey', (0, 5, 1): 'grey', (0, 5, 2): 'grey', (0, 5, 3): 'grey', (0, 5, 4): 'grey', (0, 5, 5): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 0, 5): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 1, 5): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 2, 5): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 3, 5): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (1, 4, 5): 'grey', (1, 5, 0): 'grey', (1, 5, 1): 'grey', (1, 5, 2): 'grey', (1, 5, 3): 'grey', (1, 5, 4): 'grey', (1, 5, 5): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 0, 5): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 1, 5): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 2, 5): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 3, 5): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (2, 4, 5): 'grey', (2, 5, 0): 'grey', (2, 5, 1): 'grey', (2, 5, 2): 'grey', (2, 5, 3): 'grey', (2, 5, 4): 'grey', (2, 5, 5): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 0, 5): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 1, 5): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 2, 5): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 3, 5): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (3, 4, 5): 'grey', (3, 5, 0): 'grey', (3, 5, 1): 'grey', (3, 5, 2): 'grey', (3, 5, 3): 'grey', (3, 5, 4): 'grey', (3, 5, 5): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 0, 5): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 1, 5): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 2, 5): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 3, 5): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey', (4, 4, 5): 'grey', (4, 5, 0): 'grey', (4, 5, 1): 'grey', (4, 5, 2): 'grey', (4, 5, 3): 'grey', (4, 5, 4): 'grey', (4, 5, 5): 'grey', (5, 0, 0): 'black', (5, 0, 1): 'black', (5, 0, 2): 'grey', (5, 0, 3): 'grey', (5, 0, 4): 'grey', (5, 0, 5): 'grey', (5, 1, 0): 'black', (5, 1, 1): 'grey', (5, 1, 2): 'grey', (5, 1, 3): 'grey', (5, 1, 4): 'grey', (5, 1, 5): 'grey', (5, 2, 0): 'grey', (5, 2, 1): 'grey', (5, 2, 2): 'grey', (5, 2, 3): 'grey', (5, 2, 4): 'grey', (5, 2, 5): 'grey', (5, 3, 0): 'grey', (5, 3, 1): 'grey', (5, 3, 2): 'grey', (5, 3, 3): 'grey', (5, 3, 4): 'grey', (5, 3, 5): 'grey', (5, 4, 0): 'grey', (5, 4, 1): 'grey', (5, 4, 2): 'grey', (5, 4, 3): 'grey', (5, 4, 4): 'grey', (5, 4, 5): 'grey', (5, 5, 0): 'grey', (5, 5, 1): 'grey', (5, 5, 2): 'grey', (5, 5, 3): 'grey', (5, 5, 4): 'grey', (5, 5, 5): 'grey'}
iteration is over
nr of iterations so far
9
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (4, 0, 1), (4, 1, 0), (4, 1, 0), (5, 0, 1), (5, 1, 0), (5, 1, 0), (5, 0, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (5, 0, 1), (0, 0, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (5, 0, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (0, 1, 1), (2, 1, 1), (3, 1, 0), (4, 1, 0), (5, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (5, 0, 1), 16: (5, 1, 0), 17: (5, 1, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 1): [4], (1, 1, 0): [5], (2, 0, 1): [6], (2, 1, 1): [7], (2, 1, 0): [8], (3, 0, 1): [9], (3, 1, 0): [10, 11], (4, 0, 1): [12], (4, 1, 0): [13, 14], (5, 0, 1): [15], (5, 1, 0): [16, 17], (5, 0, 0): [18], (4, 0, 0): [19], (3, 0, 0): [20], (2, 0, 0): [21], (1, 0, 0): [22], (0, 0, 0): [23]}
v is:
(3, 1, 0)
truest
[10, 11]
2
edges_of_v_in_P
[[(3, 1, 0), (3, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[10]
v is
(3, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 1), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (5, 0, 1), 16: (5, 1, 0), 17: (5, 1, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 0, 5): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 1, 5): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 2, 5): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 3, 5): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (0, 4, 5): 'grey', (0, 5, 0): 'grey', (0, 5, 1): 'grey', (0, 5, 2): 'grey', (0, 5, 3): 'grey', (0, 5, 4): 'grey', (0, 5, 5): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 0, 5): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 1, 5): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 2, 5): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 3, 5): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (1, 4, 5): 'grey', (1, 5, 0): 'grey', (1, 5, 1): 'grey', (1, 5, 2): 'grey', (1, 5, 3): 'grey', (1, 5, 4): 'grey', (1, 5, 5): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 0, 5): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 1, 5): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 2, 5): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 3, 5): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (2, 4, 5): 'grey', (2, 5, 0): 'grey', (2, 5, 1): 'grey', (2, 5, 2): 'grey', (2, 5, 3): 'grey', (2, 5, 4): 'grey', (2, 5, 5): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 0, 5): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 1, 5): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 2, 5): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 3, 5): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (3, 4, 5): 'grey', (3, 5, 0): 'grey', (3, 5, 1): 'grey', (3, 5, 2): 'grey', (3, 5, 3): 'grey', (3, 5, 4): 'grey', (3, 5, 5): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 0, 5): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 1, 5): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 2, 5): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 3, 5): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey', (4, 4, 5): 'grey', (4, 5, 0): 'grey', (4, 5, 1): 'grey', (4, 5, 2): 'grey', (4, 5, 3): 'grey', (4, 5, 4): 'grey', (4, 5, 5): 'grey', (5, 0, 0): 'black', (5, 0, 1): 'black', (5, 0, 2): 'grey', (5, 0, 3): 'grey', (5, 0, 4): 'grey', (5, 0, 5): 'grey', (5, 1, 0): 'black', (5, 1, 1): 'grey', (5, 1, 2): 'grey', (5, 1, 3): 'grey', (5, 1, 4): 'grey', (5, 1, 5): 'grey', (5, 2, 0): 'grey', (5, 2, 1): 'grey', (5, 2, 2): 'grey', (5, 2, 3): 'grey', (5, 2, 4): 'grey', (5, 2, 5): 'grey', (5, 3, 0): 'grey', (5, 3, 1): 'grey', (5, 3, 2): 'grey', (5, 3, 3): 'grey', (5, 3, 4): 'grey', (5, 3, 5): 'grey', (5, 4, 0): 'grey', (5, 4, 1): 'grey', (5, 4, 2): 'grey', (5, 4, 3): 'grey', (5, 4, 4): 'grey', (5, 4, 5): 'grey', (5, 5, 0): 'grey', (5, 5, 1): 'grey', (5, 5, 2): 'grey', (5, 5, 3): 'grey', (5, 5, 4): 'grey', (5, 5, 5): 'grey'}
iteration is over
nr of iterations so far
10
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 1, 0), (4, 0, 1), (4, 1, 0), (4, 1, 0), (5, 0, 1), (5, 1, 0), (5, 1, 0), (5, 0, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (5, 0, 1), (0, 0, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (5, 0, 0), (3, 1, 1), (0, 0, 0), (1, 0, 0), (2, 0, 0), (0, 1, 1), (2, 1, 1), (3, 1, 0), (4, 1, 0), (5, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 1), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (5, 0, 1), 16: (5, 1, 0), 17: (5, 1, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 1): [4], (1, 1, 0): [5], (2, 0, 1): [6], (2, 1, 1): [7], (2, 1, 0): [8], (3, 0, 1): [9], (3, 1, 1): [10], (3, 1, 0): [11], (4, 0, 1): [12], (4, 1, 0): [13, 14], (5, 0, 1): [15], (5, 1, 0): [16, 17], (5, 0, 0): [18], (4, 0, 0): [19], (3, 0, 0): [20], (2, 0, 0): [21], (1, 0, 0): [22], (0, 0, 0): [23]}
v is:
(4, 1, 0)
truest
[13, 14]
2
edges_of_v_in_P
[[(4, 1, 0), (4, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[13]
v is
(4, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 1), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 1), 14: (4, 1, 0), 15: (5, 0, 1), 16: (5, 1, 0), 17: (5, 1, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 0, 5): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 1, 5): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 2, 5): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 3, 5): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (0, 4, 5): 'grey', (0, 5, 0): 'grey', (0, 5, 1): 'grey', (0, 5, 2): 'grey', (0, 5, 3): 'grey', (0, 5, 4): 'grey', (0, 5, 5): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 0, 5): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 1, 5): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 2, 5): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 3, 5): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (1, 4, 5): 'grey', (1, 5, 0): 'grey', (1, 5, 1): 'grey', (1, 5, 2): 'grey', (1, 5, 3): 'grey', (1, 5, 4): 'grey', (1, 5, 5): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 0, 5): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 1, 5): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 2, 5): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 3, 5): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (2, 4, 5): 'grey', (2, 5, 0): 'grey', (2, 5, 1): 'grey', (2, 5, 2): 'grey', (2, 5, 3): 'grey', (2, 5, 4): 'grey', (2, 5, 5): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 0, 5): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 1, 5): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 2, 5): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 3, 5): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (3, 4, 5): 'grey', (3, 5, 0): 'grey', (3, 5, 1): 'grey', (3, 5, 2): 'grey', (3, 5, 3): 'grey', (3, 5, 4): 'grey', (3, 5, 5): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 0, 5): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 1, 5): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 2, 5): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 3, 5): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey', (4, 4, 5): 'grey', (4, 5, 0): 'grey', (4, 5, 1): 'grey', (4, 5, 2): 'grey', (4, 5, 3): 'grey', (4, 5, 4): 'grey', (4, 5, 5): 'grey', (5, 0, 0): 'black', (5, 0, 1): 'black', (5, 0, 2): 'grey', (5, 0, 3): 'grey', (5, 0, 4): 'grey', (5, 0, 5): 'grey', (5, 1, 0): 'black', (5, 1, 1): 'grey', (5, 1, 2): 'grey', (5, 1, 3): 'grey', (5, 1, 4): 'grey', (5, 1, 5): 'grey', (5, 2, 0): 'grey', (5, 2, 1): 'grey', (5, 2, 2): 'grey', (5, 2, 3): 'grey', (5, 2, 4): 'grey', (5, 2, 5): 'grey', (5, 3, 0): 'grey', (5, 3, 1): 'grey', (5, 3, 2): 'grey', (5, 3, 3): 'grey', (5, 3, 4): 'grey', (5, 3, 5): 'grey', (5, 4, 0): 'grey', (5, 4, 1): 'grey', (5, 4, 2): 'grey', (5, 4, 3): 'grey', (5, 4, 4): 'grey', (5, 4, 5): 'grey', (5, 5, 0): 'grey', (5, 5, 1): 'grey', (5, 5, 2): 'grey', (5, 5, 3): 'grey', (5, 5, 4): 'grey', (5, 5, 5): 'grey'}
iteration is over
nr of iterations so far
11
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 1, 0), (5, 0, 1), (5, 1, 0), (5, 1, 0), (5, 0, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (5, 0, 1), (0, 0, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (5, 0, 0), (3, 1, 1), (0, 0, 0), (4, 1, 1), (1, 0, 0), (2, 0, 0), (0, 1, 1), (2, 1, 1), (3, 1, 0), (4, 1, 0), (5, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 1), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 1), 14: (4, 1, 0), 15: (5, 0, 1), 16: (5, 1, 0), 17: (5, 1, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 1): [4], (1, 1, 0): [5], (2, 0, 1): [6], (2, 1, 1): [7], (2, 1, 0): [8], (3, 0, 1): [9], (3, 1, 1): [10], (3, 1, 0): [11], (4, 0, 1): [12], (4, 1, 1): [13], (4, 1, 0): [14], (5, 0, 1): [15], (5, 1, 0): [16, 17], (5, 0, 0): [18], (4, 0, 0): [19], (3, 0, 0): [20], (2, 0, 0): [21], (1, 0, 0): [22], (0, 0, 0): [23]}
v is:
(5, 1, 0)
truest
[16, 17]
2
edges_of_v_in_P
[[(5, 1, 0), (5, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[16]
v is
(5, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 1), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 1), 14: (4, 1, 0), 15: (5, 0, 1), 16: (5, 1, 1), 17: (5, 1, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 0, 5): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 1, 5): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 2, 5): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 3, 5): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (0, 4, 5): 'grey', (0, 5, 0): 'grey', (0, 5, 1): 'grey', (0, 5, 2): 'grey', (0, 5, 3): 'grey', (0, 5, 4): 'grey', (0, 5, 5): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 0, 5): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 1, 5): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 2, 5): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 3, 5): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (1, 4, 5): 'grey', (1, 5, 0): 'grey', (1, 5, 1): 'grey', (1, 5, 2): 'grey', (1, 5, 3): 'grey', (1, 5, 4): 'grey', (1, 5, 5): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 0, 5): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 1, 5): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 2, 5): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 3, 5): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (2, 4, 5): 'grey', (2, 5, 0): 'grey', (2, 5, 1): 'grey', (2, 5, 2): 'grey', (2, 5, 3): 'grey', (2, 5, 4): 'grey', (2, 5, 5): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 0, 5): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 1, 5): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 2, 5): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 3, 5): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (3, 4, 5): 'grey', (3, 5, 0): 'grey', (3, 5, 1): 'grey', (3, 5, 2): 'grey', (3, 5, 3): 'grey', (3, 5, 4): 'grey', (3, 5, 5): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 0, 5): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 1, 5): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 2, 5): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 3, 5): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey', (4, 4, 5): 'grey', (4, 5, 0): 'grey', (4, 5, 1): 'grey', (4, 5, 2): 'grey', (4, 5, 3): 'grey', (4, 5, 4): 'grey', (4, 5, 5): 'grey', (5, 0, 0): 'black', (5, 0, 1): 'black', (5, 0, 2): 'grey', (5, 0, 3): 'grey', (5, 0, 4): 'grey', (5, 0, 5): 'grey', (5, 1, 0): 'black', (5, 1, 1): 'black', (5, 1, 2): 'grey', (5, 1, 3): 'grey', (5, 1, 4): 'grey', (5, 1, 5): 'grey', (5, 2, 0): 'grey', (5, 2, 1): 'grey', (5, 2, 2): 'grey', (5, 2, 3): 'grey', (5, 2, 4): 'grey', (5, 2, 5): 'grey', (5, 3, 0): 'grey', (5, 3, 1): 'grey', (5, 3, 2): 'grey', (5, 3, 3): 'grey', (5, 3, 4): 'grey', (5, 3, 5): 'grey', (5, 4, 0): 'grey', (5, 4, 1): 'grey', (5, 4, 2): 'grey', (5, 4, 3): 'grey', (5, 4, 4): 'grey', (5, 4, 5): 'grey', (5, 5, 0): 'grey', (5, 5, 1): 'grey', (5, 5, 2): 'grey', (5, 5, 3): 'grey', (5, 5, 4): 'grey', (5, 5, 5): 'grey'}
iteration is over
nr of iterations so far
12
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 1, 0), (5, 0, 1), (5, 1, 1), (5, 1, 0), (5, 0, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (5, 0, 1), (0, 0, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (5, 0, 0), (3, 1, 1), (0, 0, 0), (4, 1, 1), (1, 0, 0), (5, 1, 1), (2, 0, 0), (0, 1, 1), (2, 1, 1), (3, 1, 0), (4, 1, 0), (5, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 1), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 1), 14: (4, 1, 0), 15: (5, 0, 1), 16: (5, 1, 1), 17: (5, 1, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
agents at the end of INITIAL SET
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 1), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 1), 14: (4, 1, 0), 15: (5, 0, 1), 16: (5, 1, 1), 17: (5, 1, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
are we getting at the start of the brick?
range of the o is 2
o currently is 0
are we getting at the start of the brick?
did we pass t == b+1?
i in range is
6
moved
{0: (0, 0, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (1, 0, 1), 4: (1, 2, 1), 5: (1, 2, 0), 6: (2, 0, 1), 7: (2, 2, 1), 8: (2, 2, 0), 9: (3, 0, 1), 10: (3, 2, 1), 11: (3, 2, 0), 12: (4, 0, 1), 13: (4, 2, 1), 14: (4, 2, 0), 15: (5, 0, 1), 16: (5, 2, 1), 17: (5, 2, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
moved
{0: (0, 0, 1), 1: (0, 3, 1), 2: (0, 3, 0), 3: (1, 0, 1), 4: (1, 3, 1), 5: (1, 3, 0), 6: (2, 0, 1), 7: (2, 3, 1), 8: (2, 3, 0), 9: (3, 0, 1), 10: (3, 3, 1), 11: (3, 3, 0), 12: (4, 0, 1), 13: (4, 3, 1), 14: (4, 3, 0), 15: (5, 0, 1), 16: (5, 3, 1), 17: (5, 3, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
moved
{0: (0, 0, 1), 1: (0, 4, 1), 2: (0, 4, 0), 3: (1, 0, 1), 4: (1, 4, 1), 5: (1, 4, 0), 6: (2, 0, 1), 7: (2, 4, 1), 8: (2, 4, 0), 9: (3, 0, 1), 10: (3, 4, 1), 11: (3, 4, 0), 12: (4, 0, 1), 13: (4, 4, 1), 14: (4, 4, 0), 15: (5, 0, 1), 16: (5, 4, 1), 17: (5, 4, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
moved
{0: (0, 0, 1), 1: (0, 5, 1), 2: (0, 5, 0), 3: (1, 0, 1), 4: (1, 5, 1), 5: (1, 5, 0), 6: (2, 0, 1), 7: (2, 5, 1), 8: (2, 5, 0), 9: (3, 0, 1), 10: (3, 5, 1), 11: (3, 5, 0), 12: (4, 0, 1), 13: (4, 5, 1), 14: (4, 5, 0), 15: (5, 0, 1), 16: (5, 5, 1), 17: (5, 5, 0), 18: (5, 0, 0), 19: (4, 0, 0), 20: (3, 0, 0), 21: (2, 0, 0), 22: (1, 0, 0), 23: (0, 0, 0)}
range of the o is 2
o currently is 1
are we getting at the start of the brick?
did we pass t == b+1?
i in range is
6
moved
{0: (0, 0, 2), 1: (0, 4, 2), 2: (0, 4, 5), 3: (1, 0, 2), 4: (1, 4, 2), 5: (1, 4, 5), 6: (2, 0, 2), 7: (2, 4, 2), 8: (2, 4, 5), 9: (3, 0, 2), 10: (3, 4, 2), 11: (3, 4, 5), 12: (4, 0, 2), 13: (4, 4, 2), 14: (4, 4, 5), 15: (5, 0, 2), 16: (5, 4, 2), 17: (5, 4, 5), 18: (5, 0, 5), 19: (4, 0, 5), 20: (3, 0, 5), 21: (2, 0, 5), 22: (1, 0, 5), 23: (0, 0, 5)}
moved
{0: (0, 0, 2), 1: (0, 3, 2), 2: (0, 3, 5), 3: (1, 0, 2), 4: (1, 3, 2), 5: (1, 3, 5), 6: (2, 0, 2), 7: (2, 3, 2), 8: (2, 3, 5), 9: (3, 0, 2), 10: (3, 3, 2), 11: (3, 3, 5), 12: (4, 0, 2), 13: (4, 3, 2), 14: (4, 3, 5), 15: (5, 0, 2), 16: (5, 3, 2), 17: (5, 3, 5), 18: (5, 0, 5), 19: (4, 0, 5), 20: (3, 0, 5), 21: (2, 0, 5), 22: (1, 0, 5), 23: (0, 0, 5)}
moved
{0: (0, 0, 2), 1: (0, 2, 2), 2: (0, 2, 5), 3: (1, 0, 2), 4: (1, 2, 2), 5: (1, 2, 5), 6: (2, 0, 2), 7: (2, 2, 2), 8: (2, 2, 5), 9: (3, 0, 2), 10: (3, 2, 2), 11: (3, 2, 5), 12: (4, 0, 2), 13: (4, 2, 2), 14: (4, 2, 5), 15: (5, 0, 2), 16: (5, 2, 2), 17: (5, 2, 5), 18: (5, 0, 5), 19: (4, 0, 5), 20: (3, 0, 5), 21: (2, 0, 5), 22: (1, 0, 5), 23: (0, 0, 5)}
moved
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 5), 3: (1, 0, 2), 4: (1, 1, 2), 5: (1, 1, 5), 6: (2, 0, 2), 7: (2, 1, 2), 8: (2, 1, 5), 9: (3, 0, 2), 10: (3, 1, 2), 11: (3, 1, 5), 12: (4, 0, 2), 13: (4, 1, 2), 14: (4, 1, 5), 15: (5, 0, 2), 16: (5, 1, 2), 17: (5, 1, 5), 18: (5, 0, 5), 19: (4, 0, 5), 20: (3, 0, 5), 21: (2, 0, 5), 22: (1, 0, 5), 23: (0, 0, 5)}
range of the o is 2
o currently is 2
are we getting at the start of the brick?
did we pass t == b+1?
i in range is
6
moved
{0: (0, 0, 3), 1: (0, 2, 3), 2: (0, 2, 4), 3: (1, 0, 3), 4: (1, 2, 3), 5: (1, 2, 4), 6: (2, 0, 3), 7: (2, 2, 3), 8: (2, 2, 4), 9: (3, 0, 3), 10: (3, 2, 3), 11: (3, 2, 4), 12: (4, 0, 3), 13: (4, 2, 3), 14: (4, 2, 4), 15: (5, 0, 3), 16: (5, 2, 3), 17: (5, 2, 4), 18: (5, 0, 4), 19: (4, 0, 4), 20: (3, 0, 4), 21: (2, 0, 4), 22: (1, 0, 4), 23: (0, 0, 4)}
moved
{0: (0, 0, 3), 1: (0, 3, 3), 2: (0, 3, 4), 3: (1, 0, 3), 4: (1, 3, 3), 5: (1, 3, 4), 6: (2, 0, 3), 7: (2, 3, 3), 8: (2, 3, 4), 9: (3, 0, 3), 10: (3, 3, 3), 11: (3, 3, 4), 12: (4, 0, 3), 13: (4, 3, 3), 14: (4, 3, 4), 15: (5, 0, 3), 16: (5, 3, 3), 17: (5, 3, 4), 18: (5, 0, 4), 19: (4, 0, 4), 20: (3, 0, 4), 21: (2, 0, 4), 22: (1, 0, 4), 23: (0, 0, 4)}
moved
{0: (0, 0, 3), 1: (0, 4, 3), 2: (0, 4, 4), 3: (1, 0, 3), 4: (1, 4, 3), 5: (1, 4, 4), 6: (2, 0, 3), 7: (2, 4, 3), 8: (2, 4, 4), 9: (3, 0, 3), 10: (3, 4, 3), 11: (3, 4, 4), 12: (4, 0, 3), 13: (4, 4, 3), 14: (4, 4, 4), 15: (5, 0, 3), 16: (5, 4, 3), 17: (5, 4, 4), 18: (5, 0, 4), 19: (4, 0, 4), 20: (3, 0, 4), 21: (2, 0, 4), 22: (1, 0, 4), 23: (0, 0, 4)}
moved
{0: (0, 0, 3), 1: (0, 5, 3), 2: (0, 5, 4), 3: (1, 0, 3), 4: (1, 5, 3), 5: (1, 5, 4), 6: (2, 0, 3), 7: (2, 5, 3), 8: (2, 5, 4), 9: (3, 0, 3), 10: (3, 5, 3), 11: (3, 5, 4), 12: (4, 0, 3), 13: (4, 5, 3), 14: (4, 5, 4), 15: (5, 0, 3), 16: (5, 5, 3), 17: (5, 5, 4), 18: (5, 0, 4), 19: (4, 0, 4), 20: (3, 0, 4), 21: (2, 0, 4), 22: (1, 0, 4), 23: (0, 0, 4)}
this is where the fun begins
funny business over
12
no grey nodes remain
after init is 84
move counted is 288
[24, 84, 288, 0.02217888832092285]
