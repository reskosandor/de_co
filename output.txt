when writing to csv, i is 1
move_counter at starting position is 0
dimensions are the following: [1, 1, 1]
Graph with 1 nodes and 1 edges
[(0, 0, 0)]
list of C nodes
[(0, 0, 0)]
{(0, 0, 0): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
P is :
[[(0, 0, 0)]]
agents at the end of INITIAL SET
{0: (0, 0, 0)}
are we getting at the start of the brick?
did we pass t == b+1?
i in range is
1
1
no grey nodes remain
after init is 0
move counted is 0
when writing to csv, i is 2
move_counter at starting position is 0
dimensions are the following: [2, 2, 2]
Graph with 8 nodes and 12 edges
[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1)]
list of C nodes
[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1)]
{(0, 0, 0): 'grey', (0, 0, 1): 'grey', (0, 1, 0): 'grey', (0, 1, 1): 'grey', (1, 0, 0): 'grey', (1, 0, 1): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
(x,y, z) is:
(0, 0, 1)
[(0, 0, 0), (0, 0, 1)]
(x,y, z) is:
(0, 1, 0)
[(0, 0, 0), (0, 1, 0)]
(x,y, z) is:
(0, 1, 1)
[(0, 0, 0), (0, 1, 0), (0, 1, 1)]
(x,y, z) is:
(1, 0, 0)
[(0, 0, 0), (1, 0, 0)]
(x,y, z) is:
(1, 0, 1)
[(0, 0, 0), (1, 0, 0), (1, 0, 1)]
(x,y, z) is:
(1, 1, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0)]
(x,y, z) is:
(1, 1, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]
P is :
[[(0, 0, 0)], [(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (0, 1, 0), (0, 1, 1)], [(0, 0, 0), (1, 0, 0)], [(0, 0, 0), (1, 0, 0), (1, 0, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]]
flipped_agents
{(0, 0, 0): [0, 1, 2, 3, 4, 5, 6, 7]}
v is:
(0, 0, 0)
truest
[0, 1, 2, 3, 4, 5, 6, 7]
8
edges_of_v_in_P
[[(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)]]
p is:
[1, 2, 4]
i is:
0
list of agents on v
[0]
v is
(0, 0, 0)
i is:
1
list of agents on v
[1, 2]
v is
(0, 0, 0)
i is:
2
list of agents on v
[3, 4, 5, 6]
v is
(0, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 1, 0): 'black', (0, 1, 1): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey'}
iteration is over
nr of iterations so far
1
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (0, 0, 1), (0, 1, 0)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 0): [3, 4, 5, 6], (0, 0, 0): [7]}
v is:
(1, 0, 0)
truest
[3, 4, 5, 6]
4
edges_of_v_in_P
[[(1, 0, 0), (1, 0, 1)], [(1, 0, 0), (1, 1, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[3]
v is
(1, 0, 0)
i is:
1
list of agents on v
[4, 5]
v is
(1, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 1, 0): 'black', (0, 1, 1): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 1, 0): 'black', (1, 1, 1): 'grey'}
iteration is over
nr of iterations so far
2
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (1, 0, 0): [6], (0, 0, 0): [7]}
v is:
(0, 1, 0)
truest
[1, 2]
2
edges_of_v_in_P
[[(0, 1, 0), (0, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[1]
v is
(0, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 1, 0): 'black', (0, 1, 1): 'black', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 1, 0): 'black', (1, 1, 1): 'grey'}
iteration is over
nr of iterations so far
3
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (1, 0, 0): [6], (0, 0, 0): [7]}
v is:
(1, 1, 0)
truest
[4, 5]
2
edges_of_v_in_P
[[(1, 1, 0), (1, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[4]
v is
(1, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 1, 0): 'black', (0, 1, 1): 'black', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 1, 0): 'black', (1, 1, 1): 'black'}
iteration is over
nr of iterations so far
4
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
agents at the end of INITIAL SET
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
are we getting at the start of the brick?
did we pass t == b+1?
i in range is
2
8
no grey nodes remain
after init is 12
move counted is 12
when writing to csv, i is 3
move_counter at starting position is 0
dimensions are the following: [3, 3, 3]
Graph with 27 nodes and 81 edges
[(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 1, 0), (0, 1, 1), (0, 1, 2), (0, 2, 0), (0, 2, 1), (0, 2, 2), (1, 0, 0), (1, 0, 1), (1, 0, 2), (1, 1, 0), (1, 1, 1), (1, 1, 2), (1, 2, 0), (1, 2, 1), (1, 2, 2), (2, 0, 0), (2, 0, 1), (2, 0, 2), (2, 1, 0), (2, 1, 1), (2, 1, 2), (2, 2, 0), (2, 2, 1), (2, 2, 2)]
list of C nodes
[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (0, 2, 0), (0, 2, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1), (1, 2, 0), (1, 2, 1), (2, 0, 0), (2, 0, 1), (2, 1, 0), (2, 1, 1), (2, 2, 0), (2, 2, 1)]
{(0, 0, 0): 'grey', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 1, 0): 'grey', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'grey', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
(x,y, z) is:
(0, 0, 1)
[(0, 0, 0), (0, 0, 1)]
(x,y, z) is:
(0, 1, 0)
[(0, 0, 0), (0, 1, 0)]
(x,y, z) is:
(0, 1, 1)
[(0, 0, 0), (0, 1, 0), (0, 1, 1)]
(x,y, z) is:
(0, 2, 0)
[(0, 0, 0), (0, 1, 0), (0, 2, 0)]
(x,y, z) is:
(0, 2, 1)
[(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 2, 1)]
(x,y, z) is:
(1, 0, 0)
[(0, 0, 0), (1, 0, 0)]
(x,y, z) is:
(1, 0, 1)
[(0, 0, 0), (1, 0, 0), (1, 0, 1)]
(x,y, z) is:
(1, 1, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0)]
(x,y, z) is:
(1, 1, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]
(x,y, z) is:
(1, 2, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0)]
(x,y, z) is:
(1, 2, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 2, 1)]
(x,y, z) is:
(2, 0, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0)]
(x,y, z) is:
(2, 0, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 0, 1)]
(x,y, z) is:
(2, 1, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0)]
(x,y, z) is:
(2, 1, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 1, 1)]
(x,y, z) is:
(2, 2, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0)]
(x,y, z) is:
(2, 2, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 2, 1)]
P is :
[[(0, 0, 0)], [(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (0, 1, 0), (0, 1, 1)], [(0, 0, 0), (0, 1, 0), (0, 2, 0)], [(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 2, 1)], [(0, 0, 0), (1, 0, 0)], [(0, 0, 0), (1, 0, 0), (1, 0, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 2, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 0, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 1, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 2, 1)]]
flipped_agents
{(0, 0, 0): [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]}
v is:
(0, 0, 0)
truest
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
18
edges_of_v_in_P
[[(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)]]
p is:
[1, 4, 12]
i is:
0
list of agents on v
[0]
v is
(0, 0, 0)
i is:
1
list of agents on v
[1, 2, 3, 4]
v is
(0, 0, 0)
i is:
2
list of agents on v
[5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
v is
(0, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (1, 0, 0), 8: (1, 0, 0), 9: (1, 0, 0), 10: (1, 0, 0), 11: (1, 0, 0), 12: (1, 0, 0), 13: (1, 0, 0), 14: (1, 0, 0), 15: (1, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
1
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (0, 0, 1), (0, 1, 0)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (1, 0, 0), 8: (1, 0, 0), 9: (1, 0, 0), 10: (1, 0, 0), 11: (1, 0, 0), 12: (1, 0, 0), 13: (1, 0, 0), 14: (1, 0, 0), 15: (1, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2, 3, 4], (1, 0, 0): [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], (0, 0, 0): [17]}
v is:
(1, 0, 0)
truest
[5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
12
edges_of_v_in_P
[[(1, 0, 0), (1, 0, 1)], [(1, 0, 0), (1, 1, 0)], [(1, 0, 0), (2, 0, 0)]]
p is:
[1, 4, 6]
i is:
0
list of agents on v
[5]
v is
(1, 0, 0)
i is:
1
list of agents on v
[6, 7, 8, 9]
v is
(1, 0, 0)
i is:
2
list of agents on v
[10, 11, 12, 13, 14, 15]
v is
(1, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (1, 0, 1), 6: (1, 1, 0), 7: (1, 1, 0), 8: (1, 1, 0), 9: (1, 1, 0), 10: (2, 0, 0), 11: (2, 0, 0), 12: (2, 0, 0), 13: (2, 0, 0), 14: (2, 0, 0), 15: (2, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
2
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (1, 0, 1), 6: (1, 1, 0), 7: (1, 1, 0), 8: (1, 1, 0), 9: (1, 1, 0), 10: (2, 0, 0), 11: (2, 0, 0), 12: (2, 0, 0), 13: (2, 0, 0), 14: (2, 0, 0), 15: (2, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2, 3, 4], (1, 0, 1): [5], (1, 1, 0): [6, 7, 8, 9], (2, 0, 0): [10, 11, 12, 13, 14, 15], (1, 0, 0): [16], (0, 0, 0): [17]}
v is:
(2, 0, 0)
truest
[10, 11, 12, 13, 14, 15]
6
edges_of_v_in_P
[[(2, 0, 0), (2, 0, 1)], [(2, 0, 0), (2, 1, 0)]]
p is:
[1, 4]
i is:
0
list of agents on v
[10]
v is
(2, 0, 0)
i is:
1
list of agents on v
[11, 12, 13, 14]
v is
(2, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (1, 0, 1), 6: (1, 1, 0), 7: (1, 1, 0), 8: (1, 1, 0), 9: (1, 1, 0), 10: (2, 0, 1), 11: (2, 1, 0), 12: (2, 1, 0), 13: (2, 1, 0), 14: (2, 1, 0), 15: (2, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
3
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (1, 0, 1), 6: (1, 1, 0), 7: (1, 1, 0), 8: (1, 1, 0), 9: (1, 1, 0), 10: (2, 0, 1), 11: (2, 1, 0), 12: (2, 1, 0), 13: (2, 1, 0), 14: (2, 1, 0), 15: (2, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2, 3, 4], (1, 0, 1): [5], (1, 1, 0): [6, 7, 8, 9], (2, 0, 1): [10], (2, 1, 0): [11, 12, 13, 14], (2, 0, 0): [15], (1, 0, 0): [16], (0, 0, 0): [17]}
v is:
(0, 1, 0)
truest
[1, 2, 3, 4]
4
edges_of_v_in_P
[[(0, 1, 0), (0, 1, 1)], [(0, 1, 0), (0, 2, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[1]
v is
(0, 1, 0)
i is:
1
list of agents on v
[2, 3]
v is
(0, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 1, 0), 5: (1, 0, 1), 6: (1, 1, 0), 7: (1, 1, 0), 8: (1, 1, 0), 9: (1, 1, 0), 10: (2, 0, 1), 11: (2, 1, 0), 12: (2, 1, 0), 13: (2, 1, 0), 14: (2, 1, 0), 15: (2, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
4
values
[(0, 0, 1), (0, 1, 1), (0, 2, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 2, 0), (2, 1, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (0, 0, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 1, 0), 5: (1, 0, 1), 6: (1, 1, 0), 7: (1, 1, 0), 8: (1, 1, 0), 9: (1, 1, 0), 10: (2, 0, 1), 11: (2, 1, 0), 12: (2, 1, 0), 13: (2, 1, 0), 14: (2, 1, 0), 15: (2, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 0): [2, 3], (0, 1, 0): [4], (1, 0, 1): [5], (1, 1, 0): [6, 7, 8, 9], (2, 0, 1): [10], (2, 1, 0): [11, 12, 13, 14], (2, 0, 0): [15], (1, 0, 0): [16], (0, 0, 0): [17]}
v is:
(1, 1, 0)
truest
[6, 7, 8, 9]
4
edges_of_v_in_P
[[(1, 1, 0), (1, 1, 1)], [(1, 1, 0), (1, 2, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[6]
v is
(1, 1, 0)
i is:
1
list of agents on v
[7, 8]
v is
(1, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 1, 0), 5: (1, 0, 1), 6: (1, 1, 1), 7: (1, 2, 0), 8: (1, 2, 0), 9: (1, 1, 0), 10: (2, 0, 1), 11: (2, 1, 0), 12: (2, 1, 0), 13: (2, 1, 0), 14: (2, 1, 0), 15: (2, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
5
values
[(0, 0, 1), (0, 1, 1), (0, 2, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (1, 2, 0), (0, 2, 0), (2, 1, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 1, 0), 5: (1, 0, 1), 6: (1, 1, 1), 7: (1, 2, 0), 8: (1, 2, 0), 9: (1, 1, 0), 10: (2, 0, 1), 11: (2, 1, 0), 12: (2, 1, 0), 13: (2, 1, 0), 14: (2, 1, 0), 15: (2, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 0): [2, 3], (0, 1, 0): [4], (1, 0, 1): [5], (1, 1, 1): [6], (1, 2, 0): [7, 8], (1, 1, 0): [9], (2, 0, 1): [10], (2, 1, 0): [11, 12, 13, 14], (2, 0, 0): [15], (1, 0, 0): [16], (0, 0, 0): [17]}
v is:
(2, 1, 0)
truest
[11, 12, 13, 14]
4
edges_of_v_in_P
[[(2, 1, 0), (2, 1, 1)], [(2, 1, 0), (2, 2, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[11]
v is
(2, 1, 0)
i is:
1
list of agents on v
[12, 13]
v is
(2, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 1, 0), 5: (1, 0, 1), 6: (1, 1, 1), 7: (1, 2, 0), 8: (1, 2, 0), 9: (1, 1, 0), 10: (2, 0, 1), 11: (2, 1, 1), 12: (2, 2, 0), 13: (2, 2, 0), 14: (2, 1, 0), 15: (2, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
6
values
[(0, 0, 1), (0, 1, 1), (0, 2, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 0), (2, 2, 0), (2, 1, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(2, 1, 1), (1, 0, 1), (2, 2, 0), (1, 1, 0), (0, 1, 0), (1, 2, 0), (0, 2, 0), (2, 1, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 1, 0), 5: (1, 0, 1), 6: (1, 1, 1), 7: (1, 2, 0), 8: (1, 2, 0), 9: (1, 1, 0), 10: (2, 0, 1), 11: (2, 1, 1), 12: (2, 2, 0), 13: (2, 2, 0), 14: (2, 1, 0), 15: (2, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 0): [2, 3], (0, 1, 0): [4], (1, 0, 1): [5], (1, 1, 1): [6], (1, 2, 0): [7, 8], (1, 1, 0): [9], (2, 0, 1): [10], (2, 1, 1): [11], (2, 2, 0): [12, 13], (2, 1, 0): [14], (2, 0, 0): [15], (1, 0, 0): [16], (0, 0, 0): [17]}
v is:
(0, 2, 0)
truest
[2, 3]
2
edges_of_v_in_P
[[(0, 2, 0), (0, 2, 1)]]
p is:
[1]
i is:
0
list of agents on v
[2]
v is
(0, 2, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 2, 0), 4: (0, 1, 0), 5: (1, 0, 1), 6: (1, 1, 1), 7: (1, 2, 0), 8: (1, 2, 0), 9: (1, 1, 0), 10: (2, 0, 1), 11: (2, 1, 1), 12: (2, 2, 0), 13: (2, 2, 0), 14: (2, 1, 0), 15: (2, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
7
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 0), (2, 2, 0), (2, 1, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 2, 1), (1, 0, 1), (2, 1, 1), (1, 1, 0), (2, 2, 0), (0, 1, 0), (1, 2, 0), (0, 2, 0), (2, 1, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 2, 0), 4: (0, 1, 0), 5: (1, 0, 1), 6: (1, 1, 1), 7: (1, 2, 0), 8: (1, 2, 0), 9: (1, 1, 0), 10: (2, 0, 1), 11: (2, 1, 1), 12: (2, 2, 0), 13: (2, 2, 0), 14: (2, 1, 0), 15: (2, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 2, 0): [3], (0, 1, 0): [4], (1, 0, 1): [5], (1, 1, 1): [6], (1, 2, 0): [7, 8], (1, 1, 0): [9], (2, 0, 1): [10], (2, 1, 1): [11], (2, 2, 0): [12, 13], (2, 1, 0): [14], (2, 0, 0): [15], (1, 0, 0): [16], (0, 0, 0): [17]}
v is:
(1, 2, 0)
truest
[7, 8]
2
edges_of_v_in_P
[[(1, 2, 0), (1, 2, 1)]]
p is:
[1]
i is:
0
list of agents on v
[7]
v is
(1, 2, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 2, 0), 4: (0, 1, 0), 5: (1, 0, 1), 6: (1, 1, 1), 7: (1, 2, 1), 8: (1, 2, 0), 9: (1, 1, 0), 10: (2, 0, 1), 11: (2, 1, 1), 12: (2, 2, 0), 13: (2, 2, 0), 14: (2, 1, 0), 15: (2, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
8
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 0), (2, 2, 0), (2, 1, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 2, 1), (0, 2, 1), (1, 0, 1), (2, 1, 1), (1, 1, 0), (2, 2, 0), (0, 1, 0), (1, 2, 0), (0, 2, 0), (2, 1, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 2, 0), 4: (0, 1, 0), 5: (1, 0, 1), 6: (1, 1, 1), 7: (1, 2, 1), 8: (1, 2, 0), 9: (1, 1, 0), 10: (2, 0, 1), 11: (2, 1, 1), 12: (2, 2, 0), 13: (2, 2, 0), 14: (2, 1, 0), 15: (2, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 2, 0): [3], (0, 1, 0): [4], (1, 0, 1): [5], (1, 1, 1): [6], (1, 2, 1): [7], (1, 2, 0): [8], (1, 1, 0): [9], (2, 0, 1): [10], (2, 1, 1): [11], (2, 2, 0): [12, 13], (2, 1, 0): [14], (2, 0, 0): [15], (1, 0, 0): [16], (0, 0, 0): [17]}
v is:
(2, 2, 0)
truest
[12, 13]
2
edges_of_v_in_P
[[(2, 2, 0), (2, 2, 1)]]
p is:
[1]
i is:
0
list of agents on v
[12]
v is
(2, 2, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 2, 0), 4: (0, 1, 0), 5: (1, 0, 1), 6: (1, 1, 1), 7: (1, 2, 1), 8: (1, 2, 0), 9: (1, 1, 0), 10: (2, 0, 1), 11: (2, 1, 1), 12: (2, 2, 1), 13: (2, 2, 0), 14: (2, 1, 0), 15: (2, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
9
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 2, 0), (2, 1, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 2, 1), (0, 2, 1), (1, 0, 1), (2, 1, 1), (1, 1, 0), (2, 2, 0), (0, 1, 0), (1, 2, 0), (0, 2, 0), (2, 1, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 2, 1), (2, 0, 0), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 2, 0), 4: (0, 1, 0), 5: (1, 0, 1), 6: (1, 1, 1), 7: (1, 2, 1), 8: (1, 2, 0), 9: (1, 1, 0), 10: (2, 0, 1), 11: (2, 1, 1), 12: (2, 2, 1), 13: (2, 2, 0), 14: (2, 1, 0), 15: (2, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
agents at the end of INITIAL SET
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 2, 0), 4: (0, 1, 0), 5: (1, 0, 1), 6: (1, 1, 1), 7: (1, 2, 1), 8: (1, 2, 0), 9: (1, 1, 0), 10: (2, 0, 1), 11: (2, 1, 1), 12: (2, 2, 1), 13: (2, 2, 0), 14: (2, 1, 0), 15: (2, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
are we getting at the start of the brick?
did we pass t == b+1?
i in range is
3
moved
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 2, 2), 3: (0, 2, 0), 4: (0, 1, 0), 5: (1, 0, 2), 6: (1, 1, 2), 7: (1, 2, 2), 8: (1, 2, 0), 9: (1, 1, 0), 10: (2, 0, 2), 11: (2, 1, 2), 12: (2, 2, 2), 13: (2, 2, 0), 14: (2, 1, 0), 15: (2, 0, 0), 16: (1, 0, 0), 17: (0, 0, 0)}
18
no grey nodes remain
after init is 45
move counted is 54
when writing to csv, i is 4
move_counter at starting position is 0
dimensions are the following: [4, 4, 4]
Graph with 64 nodes and 192 edges
[(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 1, 0), (0, 1, 1), (0, 1, 2), (0, 1, 3), (0, 2, 0), (0, 2, 1), (0, 2, 2), (0, 2, 3), (0, 3, 0), (0, 3, 1), (0, 3, 2), (0, 3, 3), (1, 0, 0), (1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 1, 0), (1, 1, 1), (1, 1, 2), (1, 1, 3), (1, 2, 0), (1, 2, 1), (1, 2, 2), (1, 2, 3), (1, 3, 0), (1, 3, 1), (1, 3, 2), (1, 3, 3), (2, 0, 0), (2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 1, 0), (2, 1, 1), (2, 1, 2), (2, 1, 3), (2, 2, 0), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 3, 0), (2, 3, 1), (2, 3, 2), (2, 3, 3), (3, 0, 0), (3, 0, 1), (3, 0, 2), (3, 0, 3), (3, 1, 0), (3, 1, 1), (3, 1, 2), (3, 1, 3), (3, 2, 0), (3, 2, 1), (3, 2, 2), (3, 2, 3), (3, 3, 0), (3, 3, 1), (3, 3, 2), (3, 3, 3)]
list of C nodes
[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (0, 2, 0), (0, 2, 1), (0, 3, 0), (0, 3, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1), (1, 2, 0), (1, 2, 1), (1, 3, 0), (1, 3, 1), (2, 0, 0), (2, 0, 1), (2, 1, 0), (2, 1, 1), (2, 2, 0), (2, 2, 1), (2, 3, 0), (2, 3, 1), (3, 0, 0), (3, 0, 1), (3, 1, 0), (3, 1, 1), (3, 2, 0), (3, 2, 1), (3, 3, 0), (3, 3, 1)]
{(0, 0, 0): 'grey', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'grey', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'grey', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
(x,y, z) is:
(0, 0, 1)
[(0, 0, 0), (0, 0, 1)]
(x,y, z) is:
(0, 1, 0)
[(0, 0, 0), (0, 1, 0)]
(x,y, z) is:
(0, 1, 1)
[(0, 0, 0), (0, 1, 0), (0, 1, 1)]
(x,y, z) is:
(0, 2, 0)
[(0, 0, 0), (0, 1, 0), (0, 2, 0)]
(x,y, z) is:
(0, 2, 1)
[(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 2, 1)]
(x,y, z) is:
(0, 3, 0)
[(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 3, 0)]
(x,y, z) is:
(0, 3, 1)
[(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 3, 0), (0, 3, 1)]
(x,y, z) is:
(1, 0, 0)
[(0, 0, 0), (1, 0, 0)]
(x,y, z) is:
(1, 0, 1)
[(0, 0, 0), (1, 0, 0), (1, 0, 1)]
(x,y, z) is:
(1, 1, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0)]
(x,y, z) is:
(1, 1, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]
(x,y, z) is:
(1, 2, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0)]
(x,y, z) is:
(1, 2, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 2, 1)]
(x,y, z) is:
(1, 3, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 3, 0)]
(x,y, z) is:
(1, 3, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 3, 0), (1, 3, 1)]
(x,y, z) is:
(2, 0, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0)]
(x,y, z) is:
(2, 0, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 0, 1)]
(x,y, z) is:
(2, 1, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0)]
(x,y, z) is:
(2, 1, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 1, 1)]
(x,y, z) is:
(2, 2, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0)]
(x,y, z) is:
(2, 2, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 2, 1)]
(x,y, z) is:
(2, 3, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 3, 0)]
(x,y, z) is:
(2, 3, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 3, 0), (2, 3, 1)]
(x,y, z) is:
(3, 0, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0)]
(x,y, z) is:
(3, 0, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 0, 1)]
(x,y, z) is:
(3, 1, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0)]
(x,y, z) is:
(3, 1, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 1, 1)]
(x,y, z) is:
(3, 2, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0)]
(x,y, z) is:
(3, 2, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0), (3, 2, 1)]
(x,y, z) is:
(3, 3, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0), (3, 3, 0)]
(x,y, z) is:
(3, 3, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0), (3, 3, 0), (3, 3, 1)]
P is :
[[(0, 0, 0)], [(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (0, 1, 0), (0, 1, 1)], [(0, 0, 0), (0, 1, 0), (0, 2, 0)], [(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 2, 1)], [(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 3, 0)], [(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 3, 0), (0, 3, 1)], [(0, 0, 0), (1, 0, 0)], [(0, 0, 0), (1, 0, 0), (1, 0, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 2, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 3, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 3, 0), (1, 3, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 0, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 1, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 2, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 3, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 3, 0), (2, 3, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 0, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 1, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0), (3, 2, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0), (3, 3, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0), (3, 3, 0), (3, 3, 1)]]
flipped_agents
{(0, 0, 0): [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]}
v is:
(0, 0, 0)
truest
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]
32
edges_of_v_in_P
[[(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)]]
p is:
[1, 6, 24]
i is:
0
list of agents on v
[0]
v is
(0, 0, 0)
i is:
1
list of agents on v
[1, 2, 3, 4, 5, 6]
v is
(0, 0, 0)
i is:
2
list of agents on v
[7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
v is
(0, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (0, 1, 0), 6: (0, 1, 0), 7: (1, 0, 0), 8: (1, 0, 0), 9: (1, 0, 0), 10: (1, 0, 0), 11: (1, 0, 0), 12: (1, 0, 0), 13: (1, 0, 0), 14: (1, 0, 0), 15: (1, 0, 0), 16: (1, 0, 0), 17: (1, 0, 0), 18: (1, 0, 0), 19: (1, 0, 0), 20: (1, 0, 0), 21: (1, 0, 0), 22: (1, 0, 0), 23: (1, 0, 0), 24: (1, 0, 0), 25: (1, 0, 0), 26: (1, 0, 0), 27: (1, 0, 0), 28: (1, 0, 0), 29: (1, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
1
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (0, 0, 1), (0, 1, 0)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (0, 1, 0), 6: (0, 1, 0), 7: (1, 0, 0), 8: (1, 0, 0), 9: (1, 0, 0), 10: (1, 0, 0), 11: (1, 0, 0), 12: (1, 0, 0), 13: (1, 0, 0), 14: (1, 0, 0), 15: (1, 0, 0), 16: (1, 0, 0), 17: (1, 0, 0), 18: (1, 0, 0), 19: (1, 0, 0), 20: (1, 0, 0), 21: (1, 0, 0), 22: (1, 0, 0), 23: (1, 0, 0), 24: (1, 0, 0), 25: (1, 0, 0), 26: (1, 0, 0), 27: (1, 0, 0), 28: (1, 0, 0), 29: (1, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2, 3, 4, 5, 6], (1, 0, 0): [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], (0, 0, 0): [31]}
v is:
(1, 0, 0)
truest
[7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
24
edges_of_v_in_P
[[(1, 0, 0), (1, 0, 1)], [(1, 0, 0), (1, 1, 0)], [(1, 0, 0), (2, 0, 0)]]
p is:
[1, 6, 16]
i is:
0
list of agents on v
[7]
v is
(1, 0, 0)
i is:
1
list of agents on v
[8, 9, 10, 11, 12, 13]
v is
(1, 0, 0)
i is:
2
list of agents on v
[14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]
v is
(1, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (0, 1, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 0), 9: (1, 1, 0), 10: (1, 1, 0), 11: (1, 1, 0), 12: (1, 1, 0), 13: (1, 1, 0), 14: (2, 0, 0), 15: (2, 0, 0), 16: (2, 0, 0), 17: (2, 0, 0), 18: (2, 0, 0), 19: (2, 0, 0), 20: (2, 0, 0), 21: (2, 0, 0), 22: (2, 0, 0), 23: (2, 0, 0), 24: (2, 0, 0), 25: (2, 0, 0), 26: (2, 0, 0), 27: (2, 0, 0), 28: (2, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
2
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (0, 1, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 0), 9: (1, 1, 0), 10: (1, 1, 0), 11: (1, 1, 0), 12: (1, 1, 0), 13: (1, 1, 0), 14: (2, 0, 0), 15: (2, 0, 0), 16: (2, 0, 0), 17: (2, 0, 0), 18: (2, 0, 0), 19: (2, 0, 0), 20: (2, 0, 0), 21: (2, 0, 0), 22: (2, 0, 0), 23: (2, 0, 0), 24: (2, 0, 0), 25: (2, 0, 0), 26: (2, 0, 0), 27: (2, 0, 0), 28: (2, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2, 3, 4, 5, 6], (1, 0, 1): [7], (1, 1, 0): [8, 9, 10, 11, 12, 13], (2, 0, 0): [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], (1, 0, 0): [30], (0, 0, 0): [31]}
v is:
(2, 0, 0)
truest
[14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]
16
edges_of_v_in_P
[[(2, 0, 0), (2, 0, 1)], [(2, 0, 0), (2, 1, 0)], [(2, 0, 0), (3, 0, 0)]]
p is:
[1, 6, 8]
i is:
0
list of agents on v
[14]
v is
(2, 0, 0)
i is:
1
list of agents on v
[15, 16, 17, 18, 19, 20]
v is
(2, 0, 0)
i is:
2
list of agents on v
[21, 22, 23, 24, 25, 26, 27, 28]
v is
(2, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (0, 1, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 0), 9: (1, 1, 0), 10: (1, 1, 0), 11: (1, 1, 0), 12: (1, 1, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 0), 16: (2, 1, 0), 17: (2, 1, 0), 18: (2, 1, 0), 19: (2, 1, 0), 20: (2, 1, 0), 21: (3, 0, 0), 22: (3, 0, 0), 23: (3, 0, 0), 24: (3, 0, 0), 25: (3, 0, 0), 26: (3, 0, 0), 27: (3, 0, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
3
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (3, 0, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (0, 1, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 0), 9: (1, 1, 0), 10: (1, 1, 0), 11: (1, 1, 0), 12: (1, 1, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 0), 16: (2, 1, 0), 17: (2, 1, 0), 18: (2, 1, 0), 19: (2, 1, 0), 20: (2, 1, 0), 21: (3, 0, 0), 22: (3, 0, 0), 23: (3, 0, 0), 24: (3, 0, 0), 25: (3, 0, 0), 26: (3, 0, 0), 27: (3, 0, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2, 3, 4, 5, 6], (1, 0, 1): [7], (1, 1, 0): [8, 9, 10, 11, 12, 13], (2, 0, 1): [14], (2, 1, 0): [15, 16, 17, 18, 19, 20], (3, 0, 0): [21, 22, 23, 24, 25, 26, 27, 28], (2, 0, 0): [29], (1, 0, 0): [30], (0, 0, 0): [31]}
v is:
(3, 0, 0)
truest
[21, 22, 23, 24, 25, 26, 27, 28]
8
edges_of_v_in_P
[[(3, 0, 0), (3, 0, 1)], [(3, 0, 0), (3, 1, 0)]]
p is:
[1, 6]
i is:
0
list of agents on v
[21]
v is
(3, 0, 0)
i is:
1
list of agents on v
[22, 23, 24, 25, 26, 27]
v is
(3, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (0, 1, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 0), 9: (1, 1, 0), 10: (1, 1, 0), 11: (1, 1, 0), 12: (1, 1, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 0), 16: (2, 1, 0), 17: (2, 1, 0), 18: (2, 1, 0), 19: (2, 1, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 0), 23: (3, 1, 0), 24: (3, 1, 0), 25: (3, 1, 0), 26: (3, 1, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
4
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (3, 0, 0), (0, 0, 0), (3, 1, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (0, 1, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 0), 9: (1, 1, 0), 10: (1, 1, 0), 11: (1, 1, 0), 12: (1, 1, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 0), 16: (2, 1, 0), 17: (2, 1, 0), 18: (2, 1, 0), 19: (2, 1, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 0), 23: (3, 1, 0), 24: (3, 1, 0), 25: (3, 1, 0), 26: (3, 1, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2, 3, 4, 5, 6], (1, 0, 1): [7], (1, 1, 0): [8, 9, 10, 11, 12, 13], (2, 0, 1): [14], (2, 1, 0): [15, 16, 17, 18, 19, 20], (3, 0, 1): [21], (3, 1, 0): [22, 23, 24, 25, 26, 27], (3, 0, 0): [28], (2, 0, 0): [29], (1, 0, 0): [30], (0, 0, 0): [31]}
v is:
(0, 1, 0)
truest
[1, 2, 3, 4, 5, 6]
6
edges_of_v_in_P
[[(0, 1, 0), (0, 1, 1)], [(0, 1, 0), (0, 2, 0)]]
p is:
[1, 4]
i is:
0
list of agents on v
[1]
v is
(0, 1, 0)
i is:
1
list of agents on v
[2, 3, 4, 5]
v is
(0, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 2, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 0), 9: (1, 1, 0), 10: (1, 1, 0), 11: (1, 1, 0), 12: (1, 1, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 0), 16: (2, 1, 0), 17: (2, 1, 0), 18: (2, 1, 0), 19: (2, 1, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 0), 23: (3, 1, 0), 24: (3, 1, 0), 25: (3, 1, 0), 26: (3, 1, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
5
values
[(0, 0, 1), (0, 1, 1), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 2, 0), (2, 1, 0), (3, 0, 0), (3, 1, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 2, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 0), 9: (1, 1, 0), 10: (1, 1, 0), 11: (1, 1, 0), 12: (1, 1, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 0), 16: (2, 1, 0), 17: (2, 1, 0), 18: (2, 1, 0), 19: (2, 1, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 0), 23: (3, 1, 0), 24: (3, 1, 0), 25: (3, 1, 0), 26: (3, 1, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 0): [2, 3, 4, 5], (0, 1, 0): [6], (1, 0, 1): [7], (1, 1, 0): [8, 9, 10, 11, 12, 13], (2, 0, 1): [14], (2, 1, 0): [15, 16, 17, 18, 19, 20], (3, 0, 1): [21], (3, 1, 0): [22, 23, 24, 25, 26, 27], (3, 0, 0): [28], (2, 0, 0): [29], (1, 0, 0): [30], (0, 0, 0): [31]}
v is:
(1, 1, 0)
truest
[8, 9, 10, 11, 12, 13]
6
edges_of_v_in_P
[[(1, 1, 0), (1, 1, 1)], [(1, 1, 0), (1, 2, 0)]]
p is:
[1, 4]
i is:
0
list of agents on v
[8]
v is
(1, 1, 0)
i is:
1
list of agents on v
[9, 10, 11, 12]
v is
(1, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 2, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 0), 10: (1, 2, 0), 11: (1, 2, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 0), 16: (2, 1, 0), 17: (2, 1, 0), 18: (2, 1, 0), 19: (2, 1, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 0), 23: (3, 1, 0), 24: (3, 1, 0), 25: (3, 1, 0), 26: (3, 1, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
6
values
[(0, 0, 1), (0, 1, 1), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (1, 2, 0), (0, 2, 0), (2, 1, 0), (3, 0, 0), (3, 1, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 2, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 0), 10: (1, 2, 0), 11: (1, 2, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 0), 16: (2, 1, 0), 17: (2, 1, 0), 18: (2, 1, 0), 19: (2, 1, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 0), 23: (3, 1, 0), 24: (3, 1, 0), 25: (3, 1, 0), 26: (3, 1, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 0): [2, 3, 4, 5], (0, 1, 0): [6], (1, 0, 1): [7], (1, 1, 1): [8], (1, 2, 0): [9, 10, 11, 12], (1, 1, 0): [13], (2, 0, 1): [14], (2, 1, 0): [15, 16, 17, 18, 19, 20], (3, 0, 1): [21], (3, 1, 0): [22, 23, 24, 25, 26, 27], (3, 0, 0): [28], (2, 0, 0): [29], (1, 0, 0): [30], (0, 0, 0): [31]}
v is:
(2, 1, 0)
truest
[15, 16, 17, 18, 19, 20]
6
edges_of_v_in_P
[[(2, 1, 0), (2, 1, 1)], [(2, 1, 0), (2, 2, 0)]]
p is:
[1, 4]
i is:
0
list of agents on v
[15]
v is
(2, 1, 0)
i is:
1
list of agents on v
[16, 17, 18, 19]
v is
(2, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 2, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 0), 10: (1, 2, 0), 11: (1, 2, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 0), 17: (2, 2, 0), 18: (2, 2, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 0), 23: (3, 1, 0), 24: (3, 1, 0), 25: (3, 1, 0), 26: (3, 1, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
7
values
[(0, 0, 1), (0, 1, 1), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(2, 1, 1), (1, 0, 1), (2, 2, 0), (1, 1, 0), (0, 1, 0), (1, 2, 0), (0, 2, 0), (2, 1, 0), (3, 0, 0), (3, 1, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 2, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 0), 10: (1, 2, 0), 11: (1, 2, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 0), 17: (2, 2, 0), 18: (2, 2, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 0), 23: (3, 1, 0), 24: (3, 1, 0), 25: (3, 1, 0), 26: (3, 1, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 0): [2, 3, 4, 5], (0, 1, 0): [6], (1, 0, 1): [7], (1, 1, 1): [8], (1, 2, 0): [9, 10, 11, 12], (1, 1, 0): [13], (2, 0, 1): [14], (2, 1, 1): [15], (2, 2, 0): [16, 17, 18, 19], (2, 1, 0): [20], (3, 0, 1): [21], (3, 1, 0): [22, 23, 24, 25, 26, 27], (3, 0, 0): [28], (2, 0, 0): [29], (1, 0, 0): [30], (0, 0, 0): [31]}
v is:
(3, 1, 0)
truest
[22, 23, 24, 25, 26, 27]
6
edges_of_v_in_P
[[(3, 1, 0), (3, 1, 1)], [(3, 1, 0), (3, 2, 0)]]
p is:
[1, 4]
i is:
0
list of agents on v
[22]
v is
(3, 1, 0)
i is:
1
list of agents on v
[23, 24, 25, 26]
v is
(3, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 2, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 0), 10: (1, 2, 0), 11: (1, 2, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 0), 17: (2, 2, 0), 18: (2, 2, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 0), 24: (3, 2, 0), 25: (3, 2, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
8
values
[(0, 0, 1), (0, 1, 1), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 1, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (0, 0, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (2, 0, 1), (3, 1, 1), (3, 2, 0), (0, 2, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (1, 2, 0), (3, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 2, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 0), 10: (1, 2, 0), 11: (1, 2, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 0), 17: (2, 2, 0), 18: (2, 2, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 0), 24: (3, 2, 0), 25: (3, 2, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 0): [2, 3, 4, 5], (0, 1, 0): [6], (1, 0, 1): [7], (1, 1, 1): [8], (1, 2, 0): [9, 10, 11, 12], (1, 1, 0): [13], (2, 0, 1): [14], (2, 1, 1): [15], (2, 2, 0): [16, 17, 18, 19], (2, 1, 0): [20], (3, 0, 1): [21], (3, 1, 1): [22], (3, 2, 0): [23, 24, 25, 26], (3, 1, 0): [27], (3, 0, 0): [28], (2, 0, 0): [29], (1, 0, 0): [30], (0, 0, 0): [31]}
v is:
(0, 2, 0)
truest
[2, 3, 4, 5]
4
edges_of_v_in_P
[[(0, 2, 0), (0, 2, 1)], [(0, 2, 0), (0, 3, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[2]
v is
(0, 2, 0)
i is:
1
list of agents on v
[3, 4]
v is
(0, 2, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 0), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 0), 10: (1, 2, 0), 11: (1, 2, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 0), 17: (2, 2, 0), 18: (2, 2, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 0), 24: (3, 2, 0), 25: (3, 2, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
9
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 1, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (0, 3, 0), (0, 0, 1), (0, 2, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (2, 0, 1), (3, 1, 1), (3, 2, 0), (0, 2, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (1, 2, 0), (3, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 0), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 0), 10: (1, 2, 0), 11: (1, 2, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 0), 17: (2, 2, 0), 18: (2, 2, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 0), 24: (3, 2, 0), 25: (3, 2, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 0): [3, 4], (0, 2, 0): [5], (0, 1, 0): [6], (1, 0, 1): [7], (1, 1, 1): [8], (1, 2, 0): [9, 10, 11, 12], (1, 1, 0): [13], (2, 0, 1): [14], (2, 1, 1): [15], (2, 2, 0): [16, 17, 18, 19], (2, 1, 0): [20], (3, 0, 1): [21], (3, 1, 1): [22], (3, 2, 0): [23, 24, 25, 26], (3, 1, 0): [27], (3, 0, 0): [28], (2, 0, 0): [29], (1, 0, 0): [30], (0, 0, 0): [31]}
v is:
(1, 2, 0)
truest
[9, 10, 11, 12]
4
edges_of_v_in_P
[[(1, 2, 0), (1, 2, 1)], [(1, 2, 0), (1, 3, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[9]
v is
(1, 2, 0)
i is:
1
list of agents on v
[10, 11]
v is
(1, 2, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 0), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 1), 10: (1, 3, 0), 11: (1, 3, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 0), 17: (2, 2, 0), 18: (2, 2, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 0), 24: (3, 2, 0), 25: (3, 2, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
10
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 0), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 1, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (0, 3, 0), (1, 3, 0), (0, 0, 1), (0, 2, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (2, 0, 1), (3, 1, 1), (3, 2, 0), (1, 2, 1), (0, 2, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (1, 2, 0), (3, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 0), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 1), 10: (1, 3, 0), 11: (1, 3, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 0), 17: (2, 2, 0), 18: (2, 2, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 0), 24: (3, 2, 0), 25: (3, 2, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 0): [3, 4], (0, 2, 0): [5], (0, 1, 0): [6], (1, 0, 1): [7], (1, 1, 1): [8], (1, 2, 1): [9], (1, 3, 0): [10, 11], (1, 2, 0): [12], (1, 1, 0): [13], (2, 0, 1): [14], (2, 1, 1): [15], (2, 2, 0): [16, 17, 18, 19], (2, 1, 0): [20], (3, 0, 1): [21], (3, 1, 1): [22], (3, 2, 0): [23, 24, 25, 26], (3, 1, 0): [27], (3, 0, 0): [28], (2, 0, 0): [29], (1, 0, 0): [30], (0, 0, 0): [31]}
v is:
(2, 2, 0)
truest
[16, 17, 18, 19]
4
edges_of_v_in_P
[[(2, 2, 0), (2, 2, 1)], [(2, 2, 0), (2, 3, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[16]
v is
(2, 2, 0)
i is:
1
list of agents on v
[17, 18]
v is
(2, 2, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 0), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 1), 10: (1, 3, 0), 11: (1, 3, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 1), 17: (2, 3, 0), 18: (2, 3, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 0), 24: (3, 2, 0), 25: (3, 2, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
11
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 0), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 0), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 1, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (0, 3, 0), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (2, 0, 1), (2, 2, 1), (3, 1, 1), (3, 2, 0), (1, 2, 1), (0, 2, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (1, 2, 0), (3, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 0), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 1), 10: (1, 3, 0), 11: (1, 3, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 1), 17: (2, 3, 0), 18: (2, 3, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 0), 24: (3, 2, 0), 25: (3, 2, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 0): [3, 4], (0, 2, 0): [5], (0, 1, 0): [6], (1, 0, 1): [7], (1, 1, 1): [8], (1, 2, 1): [9], (1, 3, 0): [10, 11], (1, 2, 0): [12], (1, 1, 0): [13], (2, 0, 1): [14], (2, 1, 1): [15], (2, 2, 1): [16], (2, 3, 0): [17, 18], (2, 2, 0): [19], (2, 1, 0): [20], (3, 0, 1): [21], (3, 1, 1): [22], (3, 2, 0): [23, 24, 25, 26], (3, 1, 0): [27], (3, 0, 0): [28], (2, 0, 0): [29], (1, 0, 0): [30], (0, 0, 0): [31]}
v is:
(3, 2, 0)
truest
[23, 24, 25, 26]
4
edges_of_v_in_P
[[(3, 2, 0), (3, 2, 1)], [(3, 2, 0), (3, 3, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[23]
v is
(3, 2, 0)
i is:
1
list of agents on v
[24, 25]
v is
(3, 2, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 0), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 1), 10: (1, 3, 0), 11: (1, 3, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 1), 17: (2, 3, 0), 18: (2, 3, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 1), 24: (3, 3, 0), 25: (3, 3, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'black', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'black', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
12
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 0), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 0), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 1), (3, 3, 0), (3, 3, 0), (3, 2, 0), (3, 1, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (0, 3, 0), (3, 2, 1), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (2, 0, 1), (2, 2, 1), (3, 1, 1), (3, 2, 0), (1, 2, 1), (0, 2, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (1, 2, 0), (3, 1, 0), (3, 3, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 0), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 1), 10: (1, 3, 0), 11: (1, 3, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 1), 17: (2, 3, 0), 18: (2, 3, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 1), 24: (3, 3, 0), 25: (3, 3, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 0): [3, 4], (0, 2, 0): [5], (0, 1, 0): [6], (1, 0, 1): [7], (1, 1, 1): [8], (1, 2, 1): [9], (1, 3, 0): [10, 11], (1, 2, 0): [12], (1, 1, 0): [13], (2, 0, 1): [14], (2, 1, 1): [15], (2, 2, 1): [16], (2, 3, 0): [17, 18], (2, 2, 0): [19], (2, 1, 0): [20], (3, 0, 1): [21], (3, 1, 1): [22], (3, 2, 1): [23], (3, 3, 0): [24, 25], (3, 2, 0): [26], (3, 1, 0): [27], (3, 0, 0): [28], (2, 0, 0): [29], (1, 0, 0): [30], (0, 0, 0): [31]}
v is:
(0, 3, 0)
truest
[3, 4]
2
edges_of_v_in_P
[[(0, 3, 0), (0, 3, 1)]]
p is:
[1]
i is:
0
list of agents on v
[3]
v is
(0, 3, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 1), 10: (1, 3, 0), 11: (1, 3, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 1), 17: (2, 3, 0), 18: (2, 3, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 1), 24: (3, 3, 0), 25: (3, 3, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'black', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'black', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'black', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
13
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 1), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 0), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 0), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 1), (3, 3, 0), (3, 3, 0), (3, 2, 0), (3, 1, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (0, 3, 0), (3, 2, 1), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (2, 0, 1), (2, 2, 1), (3, 1, 1), (3, 2, 0), (1, 2, 1), (0, 2, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (0, 3, 1), (1, 2, 0), (3, 1, 0), (3, 3, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 1), 10: (1, 3, 0), 11: (1, 3, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 1), 17: (2, 3, 0), 18: (2, 3, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 1), 24: (3, 3, 0), 25: (3, 3, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 1): [3], (0, 3, 0): [4], (0, 2, 0): [5], (0, 1, 0): [6], (1, 0, 1): [7], (1, 1, 1): [8], (1, 2, 1): [9], (1, 3, 0): [10, 11], (1, 2, 0): [12], (1, 1, 0): [13], (2, 0, 1): [14], (2, 1, 1): [15], (2, 2, 1): [16], (2, 3, 0): [17, 18], (2, 2, 0): [19], (2, 1, 0): [20], (3, 0, 1): [21], (3, 1, 1): [22], (3, 2, 1): [23], (3, 3, 0): [24, 25], (3, 2, 0): [26], (3, 1, 0): [27], (3, 0, 0): [28], (2, 0, 0): [29], (1, 0, 0): [30], (0, 0, 0): [31]}
v is:
(1, 3, 0)
truest
[10, 11]
2
edges_of_v_in_P
[[(1, 3, 0), (1, 3, 1)]]
p is:
[1]
i is:
0
list of agents on v
[10]
v is
(1, 3, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 1), 10: (1, 3, 1), 11: (1, 3, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 1), 17: (2, 3, 0), 18: (2, 3, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 1), 24: (3, 3, 0), 25: (3, 3, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'black', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'black', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'black', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'black', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
14
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 1), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 1), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 0), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 1), (3, 3, 0), (3, 3, 0), (3, 2, 0), (3, 1, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (0, 3, 0), (3, 2, 1), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (2, 0, 1), (2, 2, 1), (3, 1, 1), (3, 2, 0), (1, 2, 1), (0, 2, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (0, 3, 1), (1, 2, 0), (1, 3, 1), (3, 1, 0), (3, 3, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 1), 10: (1, 3, 1), 11: (1, 3, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 1), 17: (2, 3, 0), 18: (2, 3, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 1), 24: (3, 3, 0), 25: (3, 3, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 1): [3], (0, 3, 0): [4], (0, 2, 0): [5], (0, 1, 0): [6], (1, 0, 1): [7], (1, 1, 1): [8], (1, 2, 1): [9], (1, 3, 1): [10], (1, 3, 0): [11], (1, 2, 0): [12], (1, 1, 0): [13], (2, 0, 1): [14], (2, 1, 1): [15], (2, 2, 1): [16], (2, 3, 0): [17, 18], (2, 2, 0): [19], (2, 1, 0): [20], (3, 0, 1): [21], (3, 1, 1): [22], (3, 2, 1): [23], (3, 3, 0): [24, 25], (3, 2, 0): [26], (3, 1, 0): [27], (3, 0, 0): [28], (2, 0, 0): [29], (1, 0, 0): [30], (0, 0, 0): [31]}
v is:
(2, 3, 0)
truest
[17, 18]
2
edges_of_v_in_P
[[(2, 3, 0), (2, 3, 1)]]
p is:
[1]
i is:
0
list of agents on v
[17]
v is
(2, 3, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 1), 10: (1, 3, 1), 11: (1, 3, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 1), 17: (2, 3, 1), 18: (2, 3, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 1), 24: (3, 3, 0), 25: (3, 3, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'black', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'black', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'black', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'black', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'black', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
15
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 1), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 1), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 1), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 1), (3, 3, 0), (3, 3, 0), (3, 2, 0), (3, 1, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (0, 3, 0), (3, 2, 1), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (2, 0, 1), (2, 2, 1), (3, 1, 1), (3, 2, 0), (1, 2, 1), (0, 2, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (0, 3, 1), (1, 2, 0), (1, 3, 1), (3, 1, 0), (3, 3, 0), (2, 3, 1), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 1), 10: (1, 3, 1), 11: (1, 3, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 1), 17: (2, 3, 1), 18: (2, 3, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 1), 24: (3, 3, 0), 25: (3, 3, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 1): [3], (0, 3, 0): [4], (0, 2, 0): [5], (0, 1, 0): [6], (1, 0, 1): [7], (1, 1, 1): [8], (1, 2, 1): [9], (1, 3, 1): [10], (1, 3, 0): [11], (1, 2, 0): [12], (1, 1, 0): [13], (2, 0, 1): [14], (2, 1, 1): [15], (2, 2, 1): [16], (2, 3, 1): [17], (2, 3, 0): [18], (2, 2, 0): [19], (2, 1, 0): [20], (3, 0, 1): [21], (3, 1, 1): [22], (3, 2, 1): [23], (3, 3, 0): [24, 25], (3, 2, 0): [26], (3, 1, 0): [27], (3, 0, 0): [28], (2, 0, 0): [29], (1, 0, 0): [30], (0, 0, 0): [31]}
v is:
(3, 3, 0)
truest
[24, 25]
2
edges_of_v_in_P
[[(3, 3, 0), (3, 3, 1)]]
p is:
[1]
i is:
0
list of agents on v
[24]
v is
(3, 3, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 1), 10: (1, 3, 1), 11: (1, 3, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 1), 17: (2, 3, 1), 18: (2, 3, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 1), 24: (3, 3, 1), 25: (3, 3, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'black', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'black', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'black', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'black', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'black', (3, 3, 1): 'black', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
16
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 1), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 1), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 1), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 1), (3, 3, 1), (3, 3, 0), (3, 2, 0), (3, 1, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (0, 3, 0), (3, 2, 1), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (2, 0, 1), (2, 2, 1), (3, 1, 1), (3, 2, 0), (1, 2, 1), (3, 3, 1), (0, 2, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (0, 3, 1), (1, 2, 0), (1, 3, 1), (3, 1, 0), (3, 3, 0), (2, 3, 1), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 1), 10: (1, 3, 1), 11: (1, 3, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 1), 17: (2, 3, 1), 18: (2, 3, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 1), 24: (3, 3, 1), 25: (3, 3, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
agents at the end of INITIAL SET
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 1), 8: (1, 1, 1), 9: (1, 2, 1), 10: (1, 3, 1), 11: (1, 3, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 1), 15: (2, 1, 1), 16: (2, 2, 1), 17: (2, 3, 1), 18: (2, 3, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 1), 22: (3, 1, 1), 23: (3, 2, 1), 24: (3, 3, 1), 25: (3, 3, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
are we getting at the start of the brick?
did we pass t == b+1?
i in range is
4
moved
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 2, 2), 3: (0, 3, 2), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 2), 8: (1, 1, 2), 9: (1, 2, 2), 10: (1, 3, 2), 11: (1, 3, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 2), 15: (2, 1, 2), 16: (2, 2, 2), 17: (2, 3, 2), 18: (2, 3, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 2), 22: (3, 1, 2), 23: (3, 2, 2), 24: (3, 3, 2), 25: (3, 3, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
moved
{0: (0, 0, 3), 1: (0, 1, 3), 2: (0, 2, 3), 3: (0, 3, 3), 4: (0, 3, 0), 5: (0, 2, 0), 6: (0, 1, 0), 7: (1, 0, 3), 8: (1, 1, 3), 9: (1, 2, 3), 10: (1, 3, 3), 11: (1, 3, 0), 12: (1, 2, 0), 13: (1, 1, 0), 14: (2, 0, 3), 15: (2, 1, 3), 16: (2, 2, 3), 17: (2, 3, 3), 18: (2, 3, 0), 19: (2, 2, 0), 20: (2, 1, 0), 21: (3, 0, 3), 22: (3, 1, 3), 23: (3, 2, 3), 24: (3, 3, 3), 25: (3, 3, 0), 26: (3, 2, 0), 27: (3, 1, 0), 28: (3, 0, 0), 29: (2, 0, 0), 30: (1, 0, 0), 31: (0, 0, 0)}
32
no grey nodes remain
after init is 112
move counted is 144
when writing to csv, i is 5
move_counter at starting position is 0
dimensions are the following: [5, 5, 5]
Graph with 125 nodes and 375 edges
[(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 0, 4), (0, 1, 0), (0, 1, 1), (0, 1, 2), (0, 1, 3), (0, 1, 4), (0, 2, 0), (0, 2, 1), (0, 2, 2), (0, 2, 3), (0, 2, 4), (0, 3, 0), (0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 4, 0), (0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (1, 0, 0), (1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 0, 4), (1, 1, 0), (1, 1, 1), (1, 1, 2), (1, 1, 3), (1, 1, 4), (1, 2, 0), (1, 2, 1), (1, 2, 2), (1, 2, 3), (1, 2, 4), (1, 3, 0), (1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 4, 0), (1, 4, 1), (1, 4, 2), (1, 4, 3), (1, 4, 4), (2, 0, 0), (2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 1, 0), (2, 1, 1), (2, 1, 2), (2, 1, 3), (2, 1, 4), (2, 2, 0), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 3, 0), (2, 3, 1), (2, 3, 2), (2, 3, 3), (2, 3, 4), (2, 4, 0), (2, 4, 1), (2, 4, 2), (2, 4, 3), (2, 4, 4), (3, 0, 0), (3, 0, 1), (3, 0, 2), (3, 0, 3), (3, 0, 4), (3, 1, 0), (3, 1, 1), (3, 1, 2), (3, 1, 3), (3, 1, 4), (3, 2, 0), (3, 2, 1), (3, 2, 2), (3, 2, 3), (3, 2, 4), (3, 3, 0), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 4, 0), (3, 4, 1), (3, 4, 2), (3, 4, 3), (3, 4, 4), (4, 0, 0), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 1, 0), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 2, 0), (4, 2, 1), (4, 2, 2), (4, 2, 3), (4, 2, 4), (4, 3, 0), (4, 3, 1), (4, 3, 2), (4, 3, 3), (4, 3, 4), (4, 4, 0), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4)]
list of C nodes
[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (0, 2, 0), (0, 2, 1), (0, 3, 0), (0, 3, 1), (0, 4, 0), (0, 4, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1), (1, 2, 0), (1, 2, 1), (1, 3, 0), (1, 3, 1), (1, 4, 0), (1, 4, 1), (2, 0, 0), (2, 0, 1), (2, 1, 0), (2, 1, 1), (2, 2, 0), (2, 2, 1), (2, 3, 0), (2, 3, 1), (2, 4, 0), (2, 4, 1), (3, 0, 0), (3, 0, 1), (3, 1, 0), (3, 1, 1), (3, 2, 0), (3, 2, 1), (3, 3, 0), (3, 3, 1), (3, 4, 0), (3, 4, 1), (4, 0, 0), (4, 0, 1), (4, 1, 0), (4, 1, 1), (4, 2, 0), (4, 2, 1), (4, 3, 0), (4, 3, 1), (4, 4, 0), (4, 4, 1)]
{(0, 0, 0): 'grey', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'grey', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'grey', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
(x,y, z) is:
(0, 0, 1)
[(0, 0, 0), (0, 0, 1)]
(x,y, z) is:
(0, 1, 0)
[(0, 0, 0), (0, 1, 0)]
(x,y, z) is:
(0, 1, 1)
[(0, 0, 0), (0, 1, 0), (0, 1, 1)]
(x,y, z) is:
(0, 2, 0)
[(0, 0, 0), (0, 1, 0), (0, 2, 0)]
(x,y, z) is:
(0, 2, 1)
[(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 2, 1)]
(x,y, z) is:
(0, 3, 0)
[(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 3, 0)]
(x,y, z) is:
(0, 3, 1)
[(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 3, 0), (0, 3, 1)]
(x,y, z) is:
(0, 4, 0)
[(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 3, 0), (0, 4, 0)]
(x,y, z) is:
(0, 4, 1)
[(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 3, 0), (0, 4, 0), (0, 4, 1)]
(x,y, z) is:
(1, 0, 0)
[(0, 0, 0), (1, 0, 0)]
(x,y, z) is:
(1, 0, 1)
[(0, 0, 0), (1, 0, 0), (1, 0, 1)]
(x,y, z) is:
(1, 1, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0)]
(x,y, z) is:
(1, 1, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]
(x,y, z) is:
(1, 2, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0)]
(x,y, z) is:
(1, 2, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 2, 1)]
(x,y, z) is:
(1, 3, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 3, 0)]
(x,y, z) is:
(1, 3, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 3, 0), (1, 3, 1)]
(x,y, z) is:
(1, 4, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 3, 0), (1, 4, 0)]
(x,y, z) is:
(1, 4, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 3, 0), (1, 4, 0), (1, 4, 1)]
(x,y, z) is:
(2, 0, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0)]
(x,y, z) is:
(2, 0, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 0, 1)]
(x,y, z) is:
(2, 1, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0)]
(x,y, z) is:
(2, 1, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 1, 1)]
(x,y, z) is:
(2, 2, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0)]
(x,y, z) is:
(2, 2, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 2, 1)]
(x,y, z) is:
(2, 3, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 3, 0)]
(x,y, z) is:
(2, 3, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 3, 0), (2, 3, 1)]
(x,y, z) is:
(2, 4, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 3, 0), (2, 4, 0)]
(x,y, z) is:
(2, 4, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 3, 0), (2, 4, 0), (2, 4, 1)]
(x,y, z) is:
(3, 0, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0)]
(x,y, z) is:
(3, 0, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 0, 1)]
(x,y, z) is:
(3, 1, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0)]
(x,y, z) is:
(3, 1, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 1, 1)]
(x,y, z) is:
(3, 2, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0)]
(x,y, z) is:
(3, 2, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0), (3, 2, 1)]
(x,y, z) is:
(3, 3, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0), (3, 3, 0)]
(x,y, z) is:
(3, 3, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0), (3, 3, 0), (3, 3, 1)]
(x,y, z) is:
(3, 4, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0), (3, 3, 0), (3, 4, 0)]
(x,y, z) is:
(3, 4, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0), (3, 3, 0), (3, 4, 0), (3, 4, 1)]
(x,y, z) is:
(4, 0, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0)]
(x,y, z) is:
(4, 0, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 0, 1)]
(x,y, z) is:
(4, 1, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0)]
(x,y, z) is:
(4, 1, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0), (4, 1, 1)]
(x,y, z) is:
(4, 2, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0), (4, 2, 0)]
(x,y, z) is:
(4, 2, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0), (4, 2, 0), (4, 2, 1)]
(x,y, z) is:
(4, 3, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0), (4, 2, 0), (4, 3, 0)]
(x,y, z) is:
(4, 3, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0), (4, 2, 0), (4, 3, 0), (4, 3, 1)]
(x,y, z) is:
(4, 4, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0), (4, 2, 0), (4, 3, 0), (4, 4, 0)]
(x,y, z) is:
(4, 4, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0), (4, 2, 0), (4, 3, 0), (4, 4, 0), (4, 4, 1)]
P is :
[[(0, 0, 0)], [(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (0, 1, 0), (0, 1, 1)], [(0, 0, 0), (0, 1, 0), (0, 2, 0)], [(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 2, 1)], [(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 3, 0)], [(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 3, 0), (0, 3, 1)], [(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 3, 0), (0, 4, 0)], [(0, 0, 0), (0, 1, 0), (0, 2, 0), (0, 3, 0), (0, 4, 0), (0, 4, 1)], [(0, 0, 0), (1, 0, 0)], [(0, 0, 0), (1, 0, 0), (1, 0, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 2, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 3, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 3, 0), (1, 3, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 3, 0), (1, 4, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 2, 0), (1, 3, 0), (1, 4, 0), (1, 4, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 0, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 1, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 2, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 3, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 3, 0), (2, 3, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 3, 0), (2, 4, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 2, 0), (2, 3, 0), (2, 4, 0), (2, 4, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 0, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 1, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0), (3, 2, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0), (3, 3, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0), (3, 3, 0), (3, 3, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0), (3, 3, 0), (3, 4, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 2, 0), (3, 3, 0), (3, 4, 0), (3, 4, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 0, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0), (4, 1, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0), (4, 2, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0), (4, 2, 0), (4, 2, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0), (4, 2, 0), (4, 3, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0), (4, 2, 0), (4, 3, 0), (4, 3, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0), (4, 2, 0), (4, 3, 0), (4, 4, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0), (4, 2, 0), (4, 3, 0), (4, 4, 0), (4, 4, 1)]]
flipped_agents
{(0, 0, 0): [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]}
v is:
(0, 0, 0)
truest
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]
50
edges_of_v_in_P
[[(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)]]
p is:
[1, 8, 40]
i is:
0
list of agents on v
[0]
v is
(0, 0, 0)
i is:
1
list of agents on v
[1, 2, 3, 4, 5, 6, 7, 8]
v is
(0, 0, 0)
i is:
2
list of agents on v
[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48]
v is
(0, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (0, 1, 0), 6: (0, 1, 0), 7: (0, 1, 0), 8: (0, 1, 0), 9: (1, 0, 0), 10: (1, 0, 0), 11: (1, 0, 0), 12: (1, 0, 0), 13: (1, 0, 0), 14: (1, 0, 0), 15: (1, 0, 0), 16: (1, 0, 0), 17: (1, 0, 0), 18: (1, 0, 0), 19: (1, 0, 0), 20: (1, 0, 0), 21: (1, 0, 0), 22: (1, 0, 0), 23: (1, 0, 0), 24: (1, 0, 0), 25: (1, 0, 0), 26: (1, 0, 0), 27: (1, 0, 0), 28: (1, 0, 0), 29: (1, 0, 0), 30: (1, 0, 0), 31: (1, 0, 0), 32: (1, 0, 0), 33: (1, 0, 0), 34: (1, 0, 0), 35: (1, 0, 0), 36: (1, 0, 0), 37: (1, 0, 0), 38: (1, 0, 0), 39: (1, 0, 0), 40: (1, 0, 0), 41: (1, 0, 0), 42: (1, 0, 0), 43: (1, 0, 0), 44: (1, 0, 0), 45: (1, 0, 0), 46: (1, 0, 0), 47: (1, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
1
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (0, 0, 1), (0, 1, 0)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (0, 1, 0), 6: (0, 1, 0), 7: (0, 1, 0), 8: (0, 1, 0), 9: (1, 0, 0), 10: (1, 0, 0), 11: (1, 0, 0), 12: (1, 0, 0), 13: (1, 0, 0), 14: (1, 0, 0), 15: (1, 0, 0), 16: (1, 0, 0), 17: (1, 0, 0), 18: (1, 0, 0), 19: (1, 0, 0), 20: (1, 0, 0), 21: (1, 0, 0), 22: (1, 0, 0), 23: (1, 0, 0), 24: (1, 0, 0), 25: (1, 0, 0), 26: (1, 0, 0), 27: (1, 0, 0), 28: (1, 0, 0), 29: (1, 0, 0), 30: (1, 0, 0), 31: (1, 0, 0), 32: (1, 0, 0), 33: (1, 0, 0), 34: (1, 0, 0), 35: (1, 0, 0), 36: (1, 0, 0), 37: (1, 0, 0), 38: (1, 0, 0), 39: (1, 0, 0), 40: (1, 0, 0), 41: (1, 0, 0), 42: (1, 0, 0), 43: (1, 0, 0), 44: (1, 0, 0), 45: (1, 0, 0), 46: (1, 0, 0), 47: (1, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2, 3, 4, 5, 6, 7, 8], (1, 0, 0): [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], (0, 0, 0): [49]}
v is:
(1, 0, 0)
truest
[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48]
40
edges_of_v_in_P
[[(1, 0, 0), (1, 0, 1)], [(1, 0, 0), (1, 1, 0)], [(1, 0, 0), (2, 0, 0)]]
p is:
[1, 8, 30]
i is:
0
list of agents on v
[9]
v is
(1, 0, 0)
i is:
1
list of agents on v
[10, 11, 12, 13, 14, 15, 16, 17]
v is
(1, 0, 0)
i is:
2
list of agents on v
[18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]
v is
(1, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (0, 1, 0), 6: (0, 1, 0), 7: (0, 1, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 0), 11: (1, 1, 0), 12: (1, 1, 0), 13: (1, 1, 0), 14: (1, 1, 0), 15: (1, 1, 0), 16: (1, 1, 0), 17: (1, 1, 0), 18: (2, 0, 0), 19: (2, 0, 0), 20: (2, 0, 0), 21: (2, 0, 0), 22: (2, 0, 0), 23: (2, 0, 0), 24: (2, 0, 0), 25: (2, 0, 0), 26: (2, 0, 0), 27: (2, 0, 0), 28: (2, 0, 0), 29: (2, 0, 0), 30: (2, 0, 0), 31: (2, 0, 0), 32: (2, 0, 0), 33: (2, 0, 0), 34: (2, 0, 0), 35: (2, 0, 0), 36: (2, 0, 0), 37: (2, 0, 0), 38: (2, 0, 0), 39: (2, 0, 0), 40: (2, 0, 0), 41: (2, 0, 0), 42: (2, 0, 0), 43: (2, 0, 0), 44: (2, 0, 0), 45: (2, 0, 0), 46: (2, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
2
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (0, 1, 0), 6: (0, 1, 0), 7: (0, 1, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 0), 11: (1, 1, 0), 12: (1, 1, 0), 13: (1, 1, 0), 14: (1, 1, 0), 15: (1, 1, 0), 16: (1, 1, 0), 17: (1, 1, 0), 18: (2, 0, 0), 19: (2, 0, 0), 20: (2, 0, 0), 21: (2, 0, 0), 22: (2, 0, 0), 23: (2, 0, 0), 24: (2, 0, 0), 25: (2, 0, 0), 26: (2, 0, 0), 27: (2, 0, 0), 28: (2, 0, 0), 29: (2, 0, 0), 30: (2, 0, 0), 31: (2, 0, 0), 32: (2, 0, 0), 33: (2, 0, 0), 34: (2, 0, 0), 35: (2, 0, 0), 36: (2, 0, 0), 37: (2, 0, 0), 38: (2, 0, 0), 39: (2, 0, 0), 40: (2, 0, 0), 41: (2, 0, 0), 42: (2, 0, 0), 43: (2, 0, 0), 44: (2, 0, 0), 45: (2, 0, 0), 46: (2, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2, 3, 4, 5, 6, 7, 8], (1, 0, 1): [9], (1, 1, 0): [10, 11, 12, 13, 14, 15, 16, 17], (2, 0, 0): [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(2, 0, 0)
truest
[18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]
30
edges_of_v_in_P
[[(2, 0, 0), (2, 0, 1)], [(2, 0, 0), (2, 1, 0)], [(2, 0, 0), (3, 0, 0)]]
p is:
[1, 8, 20]
i is:
0
list of agents on v
[18]
v is
(2, 0, 0)
i is:
1
list of agents on v
[19, 20, 21, 22, 23, 24, 25, 26]
v is
(2, 0, 0)
i is:
2
list of agents on v
[27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46]
v is
(2, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (0, 1, 0), 6: (0, 1, 0), 7: (0, 1, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 0), 11: (1, 1, 0), 12: (1, 1, 0), 13: (1, 1, 0), 14: (1, 1, 0), 15: (1, 1, 0), 16: (1, 1, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 0), 20: (2, 1, 0), 21: (2, 1, 0), 22: (2, 1, 0), 23: (2, 1, 0), 24: (2, 1, 0), 25: (2, 1, 0), 26: (2, 1, 0), 27: (3, 0, 0), 28: (3, 0, 0), 29: (3, 0, 0), 30: (3, 0, 0), 31: (3, 0, 0), 32: (3, 0, 0), 33: (3, 0, 0), 34: (3, 0, 0), 35: (3, 0, 0), 36: (3, 0, 0), 37: (3, 0, 0), 38: (3, 0, 0), 39: (3, 0, 0), 40: (3, 0, 0), 41: (3, 0, 0), 42: (3, 0, 0), 43: (3, 0, 0), 44: (3, 0, 0), 45: (3, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
3
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (3, 0, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (0, 1, 0), 6: (0, 1, 0), 7: (0, 1, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 0), 11: (1, 1, 0), 12: (1, 1, 0), 13: (1, 1, 0), 14: (1, 1, 0), 15: (1, 1, 0), 16: (1, 1, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 0), 20: (2, 1, 0), 21: (2, 1, 0), 22: (2, 1, 0), 23: (2, 1, 0), 24: (2, 1, 0), 25: (2, 1, 0), 26: (2, 1, 0), 27: (3, 0, 0), 28: (3, 0, 0), 29: (3, 0, 0), 30: (3, 0, 0), 31: (3, 0, 0), 32: (3, 0, 0), 33: (3, 0, 0), 34: (3, 0, 0), 35: (3, 0, 0), 36: (3, 0, 0), 37: (3, 0, 0), 38: (3, 0, 0), 39: (3, 0, 0), 40: (3, 0, 0), 41: (3, 0, 0), 42: (3, 0, 0), 43: (3, 0, 0), 44: (3, 0, 0), 45: (3, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2, 3, 4, 5, 6, 7, 8], (1, 0, 1): [9], (1, 1, 0): [10, 11, 12, 13, 14, 15, 16, 17], (2, 0, 1): [18], (2, 1, 0): [19, 20, 21, 22, 23, 24, 25, 26], (3, 0, 0): [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(3, 0, 0)
truest
[27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46]
20
edges_of_v_in_P
[[(3, 0, 0), (3, 0, 1)], [(3, 0, 0), (3, 1, 0)], [(3, 0, 0), (4, 0, 0)]]
p is:
[1, 8, 10]
i is:
0
list of agents on v
[27]
v is
(3, 0, 0)
i is:
1
list of agents on v
[28, 29, 30, 31, 32, 33, 34, 35]
v is
(3, 0, 0)
i is:
2
list of agents on v
[36, 37, 38, 39, 40, 41, 42, 43, 44, 45]
v is
(3, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (0, 1, 0), 6: (0, 1, 0), 7: (0, 1, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 0), 11: (1, 1, 0), 12: (1, 1, 0), 13: (1, 1, 0), 14: (1, 1, 0), 15: (1, 1, 0), 16: (1, 1, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 0), 20: (2, 1, 0), 21: (2, 1, 0), 22: (2, 1, 0), 23: (2, 1, 0), 24: (2, 1, 0), 25: (2, 1, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 0), 29: (3, 1, 0), 30: (3, 1, 0), 31: (3, 1, 0), 32: (3, 1, 0), 33: (3, 1, 0), 34: (3, 1, 0), 35: (3, 1, 0), 36: (4, 0, 0), 37: (4, 0, 0), 38: (4, 0, 0), 39: (4, 0, 0), 40: (4, 0, 0), 41: (4, 0, 0), 42: (4, 0, 0), 43: (4, 0, 0), 44: (4, 0, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
4
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (4, 0, 0), (4, 0, 0), (4, 0, 0), (4, 0, 0), (4, 0, 0), (4, 0, 0), (4, 0, 0), (4, 0, 0), (4, 0, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (3, 0, 0), (0, 0, 0), (3, 1, 0), (4, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (0, 1, 0), 6: (0, 1, 0), 7: (0, 1, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 0), 11: (1, 1, 0), 12: (1, 1, 0), 13: (1, 1, 0), 14: (1, 1, 0), 15: (1, 1, 0), 16: (1, 1, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 0), 20: (2, 1, 0), 21: (2, 1, 0), 22: (2, 1, 0), 23: (2, 1, 0), 24: (2, 1, 0), 25: (2, 1, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 0), 29: (3, 1, 0), 30: (3, 1, 0), 31: (3, 1, 0), 32: (3, 1, 0), 33: (3, 1, 0), 34: (3, 1, 0), 35: (3, 1, 0), 36: (4, 0, 0), 37: (4, 0, 0), 38: (4, 0, 0), 39: (4, 0, 0), 40: (4, 0, 0), 41: (4, 0, 0), 42: (4, 0, 0), 43: (4, 0, 0), 44: (4, 0, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2, 3, 4, 5, 6, 7, 8], (1, 0, 1): [9], (1, 1, 0): [10, 11, 12, 13, 14, 15, 16, 17], (2, 0, 1): [18], (2, 1, 0): [19, 20, 21, 22, 23, 24, 25, 26], (3, 0, 1): [27], (3, 1, 0): [28, 29, 30, 31, 32, 33, 34, 35], (4, 0, 0): [36, 37, 38, 39, 40, 41, 42, 43, 44, 45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(4, 0, 0)
truest
[36, 37, 38, 39, 40, 41, 42, 43, 44, 45]
10
edges_of_v_in_P
[[(4, 0, 0), (4, 0, 1)], [(4, 0, 0), (4, 1, 0)]]
p is:
[1, 8]
i is:
0
list of agents on v
[36]
v is
(4, 0, 0)
i is:
1
list of agents on v
[37, 38, 39, 40, 41, 42, 43, 44]
v is
(4, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (0, 1, 0), 6: (0, 1, 0), 7: (0, 1, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 0), 11: (1, 1, 0), 12: (1, 1, 0), 13: (1, 1, 0), 14: (1, 1, 0), 15: (1, 1, 0), 16: (1, 1, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 0), 20: (2, 1, 0), 21: (2, 1, 0), 22: (2, 1, 0), 23: (2, 1, 0), 24: (2, 1, 0), 25: (2, 1, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 0), 29: (3, 1, 0), 30: (3, 1, 0), 31: (3, 1, 0), 32: (3, 1, 0), 33: (3, 1, 0), 34: (3, 1, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 0), 38: (4, 1, 0), 39: (4, 1, 0), 40: (4, 1, 0), 41: (4, 1, 0), 42: (4, 1, 0), 43: (4, 1, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
5
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (4, 0, 1), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (4, 0, 1), (3, 0, 0), (3, 1, 0), (0, 0, 0), (4, 0, 0), (2, 0, 1), (1, 0, 0), (4, 1, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (0, 1, 0), 4: (0, 1, 0), 5: (0, 1, 0), 6: (0, 1, 0), 7: (0, 1, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 0), 11: (1, 1, 0), 12: (1, 1, 0), 13: (1, 1, 0), 14: (1, 1, 0), 15: (1, 1, 0), 16: (1, 1, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 0), 20: (2, 1, 0), 21: (2, 1, 0), 22: (2, 1, 0), 23: (2, 1, 0), 24: (2, 1, 0), 25: (2, 1, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 0), 29: (3, 1, 0), 30: (3, 1, 0), 31: (3, 1, 0), 32: (3, 1, 0), 33: (3, 1, 0), 34: (3, 1, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 0), 38: (4, 1, 0), 39: (4, 1, 0), 40: (4, 1, 0), 41: (4, 1, 0), 42: (4, 1, 0), 43: (4, 1, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2, 3, 4, 5, 6, 7, 8], (1, 0, 1): [9], (1, 1, 0): [10, 11, 12, 13, 14, 15, 16, 17], (2, 0, 1): [18], (2, 1, 0): [19, 20, 21, 22, 23, 24, 25, 26], (3, 0, 1): [27], (3, 1, 0): [28, 29, 30, 31, 32, 33, 34, 35], (4, 0, 1): [36], (4, 1, 0): [37, 38, 39, 40, 41, 42, 43, 44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(0, 1, 0)
truest
[1, 2, 3, 4, 5, 6, 7, 8]
8
edges_of_v_in_P
[[(0, 1, 0), (0, 1, 1)], [(0, 1, 0), (0, 2, 0)]]
p is:
[1, 6]
i is:
0
list of agents on v
[1]
v is
(0, 1, 0)
i is:
1
list of agents on v
[2, 3, 4, 5, 6, 7]
v is
(0, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 2, 0), 5: (0, 2, 0), 6: (0, 2, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 0), 11: (1, 1, 0), 12: (1, 1, 0), 13: (1, 1, 0), 14: (1, 1, 0), 15: (1, 1, 0), 16: (1, 1, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 0), 20: (2, 1, 0), 21: (2, 1, 0), 22: (2, 1, 0), 23: (2, 1, 0), 24: (2, 1, 0), 25: (2, 1, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 0), 29: (3, 1, 0), 30: (3, 1, 0), 31: (3, 1, 0), 32: (3, 1, 0), 33: (3, 1, 0), 34: (3, 1, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 0), 38: (4, 1, 0), 39: (4, 1, 0), 40: (4, 1, 0), 41: (4, 1, 0), 42: (4, 1, 0), 43: (4, 1, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
6
values
[(0, 0, 1), (0, 1, 1), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (4, 0, 1), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 2, 0), (2, 1, 0), (4, 0, 1), (3, 1, 0), (3, 0, 0), (0, 0, 0), (4, 0, 0), (2, 0, 1), (1, 0, 0), (4, 1, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 2, 0), 5: (0, 2, 0), 6: (0, 2, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 0), 11: (1, 1, 0), 12: (1, 1, 0), 13: (1, 1, 0), 14: (1, 1, 0), 15: (1, 1, 0), 16: (1, 1, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 0), 20: (2, 1, 0), 21: (2, 1, 0), 22: (2, 1, 0), 23: (2, 1, 0), 24: (2, 1, 0), 25: (2, 1, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 0), 29: (3, 1, 0), 30: (3, 1, 0), 31: (3, 1, 0), 32: (3, 1, 0), 33: (3, 1, 0), 34: (3, 1, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 0), 38: (4, 1, 0), 39: (4, 1, 0), 40: (4, 1, 0), 41: (4, 1, 0), 42: (4, 1, 0), 43: (4, 1, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 0): [2, 3, 4, 5, 6, 7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 0): [10, 11, 12, 13, 14, 15, 16, 17], (2, 0, 1): [18], (2, 1, 0): [19, 20, 21, 22, 23, 24, 25, 26], (3, 0, 1): [27], (3, 1, 0): [28, 29, 30, 31, 32, 33, 34, 35], (4, 0, 1): [36], (4, 1, 0): [37, 38, 39, 40, 41, 42, 43, 44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(1, 1, 0)
truest
[10, 11, 12, 13, 14, 15, 16, 17]
8
edges_of_v_in_P
[[(1, 1, 0), (1, 1, 1)], [(1, 1, 0), (1, 2, 0)]]
p is:
[1, 6]
i is:
0
list of agents on v
[10]
v is
(1, 1, 0)
i is:
1
list of agents on v
[11, 12, 13, 14, 15, 16]
v is
(1, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 2, 0), 5: (0, 2, 0), 6: (0, 2, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 0), 12: (1, 2, 0), 13: (1, 2, 0), 14: (1, 2, 0), 15: (1, 2, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 0), 20: (2, 1, 0), 21: (2, 1, 0), 22: (2, 1, 0), 23: (2, 1, 0), 24: (2, 1, 0), 25: (2, 1, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 0), 29: (3, 1, 0), 30: (3, 1, 0), 31: (3, 1, 0), 32: (3, 1, 0), 33: (3, 1, 0), 34: (3, 1, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 0), 38: (4, 1, 0), 39: (4, 1, 0), 40: (4, 1, 0), 41: (4, 1, 0), 42: (4, 1, 0), 43: (4, 1, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
7
values
[(0, 0, 1), (0, 1, 1), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (4, 0, 1), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 0, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (0, 2, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (0, 1, 1), (1, 2, 0), (3, 1, 0), (4, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 2, 0), 5: (0, 2, 0), 6: (0, 2, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 0), 12: (1, 2, 0), 13: (1, 2, 0), 14: (1, 2, 0), 15: (1, 2, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 0), 20: (2, 1, 0), 21: (2, 1, 0), 22: (2, 1, 0), 23: (2, 1, 0), 24: (2, 1, 0), 25: (2, 1, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 0), 29: (3, 1, 0), 30: (3, 1, 0), 31: (3, 1, 0), 32: (3, 1, 0), 33: (3, 1, 0), 34: (3, 1, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 0), 38: (4, 1, 0), 39: (4, 1, 0), 40: (4, 1, 0), 41: (4, 1, 0), 42: (4, 1, 0), 43: (4, 1, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 0): [2, 3, 4, 5, 6, 7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 1): [10], (1, 2, 0): [11, 12, 13, 14, 15, 16], (1, 1, 0): [17], (2, 0, 1): [18], (2, 1, 0): [19, 20, 21, 22, 23, 24, 25, 26], (3, 0, 1): [27], (3, 1, 0): [28, 29, 30, 31, 32, 33, 34, 35], (4, 0, 1): [36], (4, 1, 0): [37, 38, 39, 40, 41, 42, 43, 44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(2, 1, 0)
truest
[19, 20, 21, 22, 23, 24, 25, 26]
8
edges_of_v_in_P
[[(2, 1, 0), (2, 1, 1)], [(2, 1, 0), (2, 2, 0)]]
p is:
[1, 6]
i is:
0
list of agents on v
[19]
v is
(2, 1, 0)
i is:
1
list of agents on v
[20, 21, 22, 23, 24, 25]
v is
(2, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 2, 0), 5: (0, 2, 0), 6: (0, 2, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 0), 12: (1, 2, 0), 13: (1, 2, 0), 14: (1, 2, 0), 15: (1, 2, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 0), 21: (2, 2, 0), 22: (2, 2, 0), 23: (2, 2, 0), 24: (2, 2, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 0), 29: (3, 1, 0), 30: (3, 1, 0), 31: (3, 1, 0), 32: (3, 1, 0), 33: (3, 1, 0), 34: (3, 1, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 0), 38: (4, 1, 0), 39: (4, 1, 0), 40: (4, 1, 0), 41: (4, 1, 0), 42: (4, 1, 0), 43: (4, 1, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
8
values
[(0, 0, 1), (0, 1, 1), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (3, 1, 0), (4, 0, 1), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 0, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (0, 2, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (1, 2, 0), (3, 1, 0), (4, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 2, 0), 5: (0, 2, 0), 6: (0, 2, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 0), 12: (1, 2, 0), 13: (1, 2, 0), 14: (1, 2, 0), 15: (1, 2, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 0), 21: (2, 2, 0), 22: (2, 2, 0), 23: (2, 2, 0), 24: (2, 2, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 0), 29: (3, 1, 0), 30: (3, 1, 0), 31: (3, 1, 0), 32: (3, 1, 0), 33: (3, 1, 0), 34: (3, 1, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 0), 38: (4, 1, 0), 39: (4, 1, 0), 40: (4, 1, 0), 41: (4, 1, 0), 42: (4, 1, 0), 43: (4, 1, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 0): [2, 3, 4, 5, 6, 7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 1): [10], (1, 2, 0): [11, 12, 13, 14, 15, 16], (1, 1, 0): [17], (2, 0, 1): [18], (2, 1, 1): [19], (2, 2, 0): [20, 21, 22, 23, 24, 25], (2, 1, 0): [26], (3, 0, 1): [27], (3, 1, 0): [28, 29, 30, 31, 32, 33, 34, 35], (4, 0, 1): [36], (4, 1, 0): [37, 38, 39, 40, 41, 42, 43, 44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(3, 1, 0)
truest
[28, 29, 30, 31, 32, 33, 34, 35]
8
edges_of_v_in_P
[[(3, 1, 0), (3, 1, 1)], [(3, 1, 0), (3, 2, 0)]]
p is:
[1, 6]
i is:
0
list of agents on v
[28]
v is
(3, 1, 0)
i is:
1
list of agents on v
[29, 30, 31, 32, 33, 34]
v is
(3, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 2, 0), 5: (0, 2, 0), 6: (0, 2, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 0), 12: (1, 2, 0), 13: (1, 2, 0), 14: (1, 2, 0), 15: (1, 2, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 0), 21: (2, 2, 0), 22: (2, 2, 0), 23: (2, 2, 0), 24: (2, 2, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 0), 30: (3, 2, 0), 31: (3, 2, 0), 32: (3, 2, 0), 33: (3, 2, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 0), 38: (4, 1, 0), 39: (4, 1, 0), 40: (4, 1, 0), 41: (4, 1, 0), 42: (4, 1, 0), 43: (4, 1, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
9
values
[(0, 0, 1), (0, 1, 1), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 1, 0), (4, 0, 1), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 0, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (3, 1, 1), (3, 2, 0), (0, 2, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (1, 2, 0), (3, 1, 0), (4, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 2, 0), 5: (0, 2, 0), 6: (0, 2, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 0), 12: (1, 2, 0), 13: (1, 2, 0), 14: (1, 2, 0), 15: (1, 2, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 0), 21: (2, 2, 0), 22: (2, 2, 0), 23: (2, 2, 0), 24: (2, 2, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 0), 30: (3, 2, 0), 31: (3, 2, 0), 32: (3, 2, 0), 33: (3, 2, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 0), 38: (4, 1, 0), 39: (4, 1, 0), 40: (4, 1, 0), 41: (4, 1, 0), 42: (4, 1, 0), 43: (4, 1, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 0): [2, 3, 4, 5, 6, 7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 1): [10], (1, 2, 0): [11, 12, 13, 14, 15, 16], (1, 1, 0): [17], (2, 0, 1): [18], (2, 1, 1): [19], (2, 2, 0): [20, 21, 22, 23, 24, 25], (2, 1, 0): [26], (3, 0, 1): [27], (3, 1, 1): [28], (3, 2, 0): [29, 30, 31, 32, 33, 34], (3, 1, 0): [35], (4, 0, 1): [36], (4, 1, 0): [37, 38, 39, 40, 41, 42, 43, 44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(4, 1, 0)
truest
[37, 38, 39, 40, 41, 42, 43, 44]
8
edges_of_v_in_P
[[(4, 1, 0), (4, 1, 1)], [(4, 1, 0), (4, 2, 0)]]
p is:
[1, 6]
i is:
0
list of agents on v
[37]
v is
(4, 1, 0)
i is:
1
list of agents on v
[38, 39, 40, 41, 42, 43]
v is
(4, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 2, 0), 5: (0, 2, 0), 6: (0, 2, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 0), 12: (1, 2, 0), 13: (1, 2, 0), 14: (1, 2, 0), 15: (1, 2, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 0), 21: (2, 2, 0), 22: (2, 2, 0), 23: (2, 2, 0), 24: (2, 2, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 0), 30: (3, 2, 0), 31: (3, 2, 0), 32: (3, 2, 0), 33: (3, 2, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 0), 39: (4, 2, 0), 40: (4, 2, 0), 41: (4, 2, 0), 42: (4, 2, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'black', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
10
values
[(0, 0, 1), (0, 1, 1), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 0, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (4, 2, 0), (3, 1, 1), (3, 2, 0), (0, 2, 0), (0, 0, 0), (4, 1, 1), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (1, 2, 0), (3, 1, 0), (4, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 0), 3: (0, 2, 0), 4: (0, 2, 0), 5: (0, 2, 0), 6: (0, 2, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 0), 12: (1, 2, 0), 13: (1, 2, 0), 14: (1, 2, 0), 15: (1, 2, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 0), 21: (2, 2, 0), 22: (2, 2, 0), 23: (2, 2, 0), 24: (2, 2, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 0), 30: (3, 2, 0), 31: (3, 2, 0), 32: (3, 2, 0), 33: (3, 2, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 0), 39: (4, 2, 0), 40: (4, 2, 0), 41: (4, 2, 0), 42: (4, 2, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 0): [2, 3, 4, 5, 6, 7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 1): [10], (1, 2, 0): [11, 12, 13, 14, 15, 16], (1, 1, 0): [17], (2, 0, 1): [18], (2, 1, 1): [19], (2, 2, 0): [20, 21, 22, 23, 24, 25], (2, 1, 0): [26], (3, 0, 1): [27], (3, 1, 1): [28], (3, 2, 0): [29, 30, 31, 32, 33, 34], (3, 1, 0): [35], (4, 0, 1): [36], (4, 1, 1): [37], (4, 2, 0): [38, 39, 40, 41, 42, 43], (4, 1, 0): [44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(0, 2, 0)
truest
[2, 3, 4, 5, 6, 7]
6
edges_of_v_in_P
[[(0, 2, 0), (0, 2, 1)], [(0, 2, 0), (0, 3, 0)]]
p is:
[1, 4]
i is:
0
list of agents on v
[2]
v is
(0, 2, 0)
i is:
1
list of agents on v
[3, 4, 5, 6]
v is
(0, 2, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 0), 4: (0, 3, 0), 5: (0, 3, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 0), 12: (1, 2, 0), 13: (1, 2, 0), 14: (1, 2, 0), 15: (1, 2, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 0), 21: (2, 2, 0), 22: (2, 2, 0), 23: (2, 2, 0), 24: (2, 2, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 0), 30: (3, 2, 0), 31: (3, 2, 0), 32: (3, 2, 0), 33: (3, 2, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 0), 39: (4, 2, 0), 40: (4, 2, 0), 41: (4, 2, 0), 42: (4, 2, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'black', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
11
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 0), (0, 3, 0), (0, 3, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 3, 0), (0, 0, 1), (0, 2, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (4, 2, 0), (3, 1, 1), (3, 2, 0), (0, 2, 0), (0, 0, 0), (4, 1, 1), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (1, 2, 0), (3, 1, 0), (4, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 0), 4: (0, 3, 0), 5: (0, 3, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 0), 12: (1, 2, 0), 13: (1, 2, 0), 14: (1, 2, 0), 15: (1, 2, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 0), 21: (2, 2, 0), 22: (2, 2, 0), 23: (2, 2, 0), 24: (2, 2, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 0), 30: (3, 2, 0), 31: (3, 2, 0), 32: (3, 2, 0), 33: (3, 2, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 0), 39: (4, 2, 0), 40: (4, 2, 0), 41: (4, 2, 0), 42: (4, 2, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 0): [3, 4, 5, 6], (0, 2, 0): [7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 1): [10], (1, 2, 0): [11, 12, 13, 14, 15, 16], (1, 1, 0): [17], (2, 0, 1): [18], (2, 1, 1): [19], (2, 2, 0): [20, 21, 22, 23, 24, 25], (2, 1, 0): [26], (3, 0, 1): [27], (3, 1, 1): [28], (3, 2, 0): [29, 30, 31, 32, 33, 34], (3, 1, 0): [35], (4, 0, 1): [36], (4, 1, 1): [37], (4, 2, 0): [38, 39, 40, 41, 42, 43], (4, 1, 0): [44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(1, 2, 0)
truest
[11, 12, 13, 14, 15, 16]
6
edges_of_v_in_P
[[(1, 2, 0), (1, 2, 1)], [(1, 2, 0), (1, 3, 0)]]
p is:
[1, 4]
i is:
0
list of agents on v
[11]
v is
(1, 2, 0)
i is:
1
list of agents on v
[12, 13, 14, 15]
v is
(1, 2, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 0), 4: (0, 3, 0), 5: (0, 3, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 0), 13: (1, 3, 0), 14: (1, 3, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 0), 21: (2, 2, 0), 22: (2, 2, 0), 23: (2, 2, 0), 24: (2, 2, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 0), 30: (3, 2, 0), 31: (3, 2, 0), 32: (3, 2, 0), 33: (3, 2, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 0), 39: (4, 2, 0), 40: (4, 2, 0), 41: (4, 2, 0), 42: (4, 2, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'black', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
12
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 0), (0, 3, 0), (0, 3, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 0), (1, 3, 0), (1, 3, 0), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 3, 0), (1, 3, 0), (0, 0, 1), (0, 2, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (4, 2, 0), (3, 1, 1), (3, 2, 0), (1, 2, 1), (0, 2, 0), (0, 0, 0), (4, 1, 1), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (1, 2, 0), (3, 1, 0), (4, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 0), 4: (0, 3, 0), 5: (0, 3, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 0), 13: (1, 3, 0), 14: (1, 3, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 0), 21: (2, 2, 0), 22: (2, 2, 0), 23: (2, 2, 0), 24: (2, 2, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 0), 30: (3, 2, 0), 31: (3, 2, 0), 32: (3, 2, 0), 33: (3, 2, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 0), 39: (4, 2, 0), 40: (4, 2, 0), 41: (4, 2, 0), 42: (4, 2, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 0): [3, 4, 5, 6], (0, 2, 0): [7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 1): [10], (1, 2, 1): [11], (1, 3, 0): [12, 13, 14, 15], (1, 2, 0): [16], (1, 1, 0): [17], (2, 0, 1): [18], (2, 1, 1): [19], (2, 2, 0): [20, 21, 22, 23, 24, 25], (2, 1, 0): [26], (3, 0, 1): [27], (3, 1, 1): [28], (3, 2, 0): [29, 30, 31, 32, 33, 34], (3, 1, 0): [35], (4, 0, 1): [36], (4, 1, 1): [37], (4, 2, 0): [38, 39, 40, 41, 42, 43], (4, 1, 0): [44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(2, 2, 0)
truest
[20, 21, 22, 23, 24, 25]
6
edges_of_v_in_P
[[(2, 2, 0), (2, 2, 1)], [(2, 2, 0), (2, 3, 0)]]
p is:
[1, 4]
i is:
0
list of agents on v
[20]
v is
(2, 2, 0)
i is:
1
list of agents on v
[21, 22, 23, 24]
v is
(2, 2, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 0), 4: (0, 3, 0), 5: (0, 3, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 0), 13: (1, 3, 0), 14: (1, 3, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 0), 22: (2, 3, 0), 23: (2, 3, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 0), 30: (3, 2, 0), 31: (3, 2, 0), 32: (3, 2, 0), 33: (3, 2, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 0), 39: (4, 2, 0), 40: (4, 2, 0), 41: (4, 2, 0), 42: (4, 2, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'black', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
13
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 0), (0, 3, 0), (0, 3, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 0), (1, 3, 0), (1, 3, 0), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 0), (2, 3, 0), (2, 3, 0), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 2, 0), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 3, 0), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (4, 2, 0), (2, 2, 1), (3, 1, 1), (3, 2, 0), (1, 2, 1), (0, 2, 0), (0, 0, 0), (4, 1, 1), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (1, 2, 0), (3, 1, 0), (4, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 0), 4: (0, 3, 0), 5: (0, 3, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 0), 13: (1, 3, 0), 14: (1, 3, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 0), 22: (2, 3, 0), 23: (2, 3, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 0), 30: (3, 2, 0), 31: (3, 2, 0), 32: (3, 2, 0), 33: (3, 2, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 0), 39: (4, 2, 0), 40: (4, 2, 0), 41: (4, 2, 0), 42: (4, 2, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 0): [3, 4, 5, 6], (0, 2, 0): [7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 1): [10], (1, 2, 1): [11], (1, 3, 0): [12, 13, 14, 15], (1, 2, 0): [16], (1, 1, 0): [17], (2, 0, 1): [18], (2, 1, 1): [19], (2, 2, 1): [20], (2, 3, 0): [21, 22, 23, 24], (2, 2, 0): [25], (2, 1, 0): [26], (3, 0, 1): [27], (3, 1, 1): [28], (3, 2, 0): [29, 30, 31, 32, 33, 34], (3, 1, 0): [35], (4, 0, 1): [36], (4, 1, 1): [37], (4, 2, 0): [38, 39, 40, 41, 42, 43], (4, 1, 0): [44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(3, 2, 0)
truest
[29, 30, 31, 32, 33, 34]
6
edges_of_v_in_P
[[(3, 2, 0), (3, 2, 1)], [(3, 2, 0), (3, 3, 0)]]
p is:
[1, 4]
i is:
0
list of agents on v
[29]
v is
(3, 2, 0)
i is:
1
list of agents on v
[30, 31, 32, 33]
v is
(3, 2, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 0), 4: (0, 3, 0), 5: (0, 3, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 0), 13: (1, 3, 0), 14: (1, 3, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 0), 22: (2, 3, 0), 23: (2, 3, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 0), 31: (3, 3, 0), 32: (3, 3, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 0), 39: (4, 2, 0), 40: (4, 2, 0), 41: (4, 2, 0), 42: (4, 2, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'black', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'black', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'black', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
14
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 0), (0, 3, 0), (0, 3, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 0), (1, 3, 0), (1, 3, 0), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 0), (2, 3, 0), (2, 3, 0), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 1), (3, 3, 0), (3, 3, 0), (3, 3, 0), (3, 3, 0), (3, 2, 0), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 2, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 3, 0), (3, 2, 1), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (4, 2, 0), (2, 2, 1), (3, 1, 1), (3, 2, 0), (1, 2, 1), (0, 2, 0), (0, 0, 0), (4, 1, 1), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (1, 2, 0), (3, 1, 0), (3, 3, 0), (4, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 0), 4: (0, 3, 0), 5: (0, 3, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 0), 13: (1, 3, 0), 14: (1, 3, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 0), 22: (2, 3, 0), 23: (2, 3, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 0), 31: (3, 3, 0), 32: (3, 3, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 0), 39: (4, 2, 0), 40: (4, 2, 0), 41: (4, 2, 0), 42: (4, 2, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 0): [3, 4, 5, 6], (0, 2, 0): [7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 1): [10], (1, 2, 1): [11], (1, 3, 0): [12, 13, 14, 15], (1, 2, 0): [16], (1, 1, 0): [17], (2, 0, 1): [18], (2, 1, 1): [19], (2, 2, 1): [20], (2, 3, 0): [21, 22, 23, 24], (2, 2, 0): [25], (2, 1, 0): [26], (3, 0, 1): [27], (3, 1, 1): [28], (3, 2, 1): [29], (3, 3, 0): [30, 31, 32, 33], (3, 2, 0): [34], (3, 1, 0): [35], (4, 0, 1): [36], (4, 1, 1): [37], (4, 2, 0): [38, 39, 40, 41, 42, 43], (4, 1, 0): [44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(4, 2, 0)
truest
[38, 39, 40, 41, 42, 43]
6
edges_of_v_in_P
[[(4, 2, 0), (4, 2, 1)], [(4, 2, 0), (4, 3, 0)]]
p is:
[1, 4]
i is:
0
list of agents on v
[38]
v is
(4, 2, 0)
i is:
1
list of agents on v
[39, 40, 41, 42]
v is
(4, 2, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 0), 4: (0, 3, 0), 5: (0, 3, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 0), 13: (1, 3, 0), 14: (1, 3, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 0), 22: (2, 3, 0), 23: (2, 3, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 0), 31: (3, 3, 0), 32: (3, 3, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 0), 40: (4, 3, 0), 41: (4, 3, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'black', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'black', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'black', (4, 2, 1): 'black', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'black', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
15
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 0), (0, 3, 0), (0, 3, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 0), (1, 3, 0), (1, 3, 0), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 0), (2, 3, 0), (2, 3, 0), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 1), (3, 3, 0), (3, 3, 0), (3, 3, 0), (3, 3, 0), (3, 2, 0), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 2, 1), (4, 3, 0), (4, 3, 0), (4, 3, 0), (4, 3, 0), (4, 2, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 3, 0), (4, 2, 1), (3, 2, 1), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (4, 2, 0), (2, 2, 1), (3, 1, 1), (3, 2, 0), (1, 2, 1), (0, 2, 0), (0, 0, 0), (4, 1, 1), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (1, 2, 0), (3, 1, 0), (3, 3, 0), (4, 1, 0), (4, 3, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 0), 4: (0, 3, 0), 5: (0, 3, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 0), 13: (1, 3, 0), 14: (1, 3, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 0), 22: (2, 3, 0), 23: (2, 3, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 0), 31: (3, 3, 0), 32: (3, 3, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 0), 40: (4, 3, 0), 41: (4, 3, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 0): [3, 4, 5, 6], (0, 2, 0): [7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 1): [10], (1, 2, 1): [11], (1, 3, 0): [12, 13, 14, 15], (1, 2, 0): [16], (1, 1, 0): [17], (2, 0, 1): [18], (2, 1, 1): [19], (2, 2, 1): [20], (2, 3, 0): [21, 22, 23, 24], (2, 2, 0): [25], (2, 1, 0): [26], (3, 0, 1): [27], (3, 1, 1): [28], (3, 2, 1): [29], (3, 3, 0): [30, 31, 32, 33], (3, 2, 0): [34], (3, 1, 0): [35], (4, 0, 1): [36], (4, 1, 1): [37], (4, 2, 1): [38], (4, 3, 0): [39, 40, 41, 42], (4, 2, 0): [43], (4, 1, 0): [44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(0, 3, 0)
truest
[3, 4, 5, 6]
4
edges_of_v_in_P
[[(0, 3, 0), (0, 3, 1)], [(0, 3, 0), (0, 4, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[3]
v is
(0, 3, 0)
i is:
1
list of agents on v
[4, 5]
v is
(0, 3, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 0), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 0), 13: (1, 3, 0), 14: (1, 3, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 0), 22: (2, 3, 0), 23: (2, 3, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 0), 31: (3, 3, 0), 32: (3, 3, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 0), 40: (4, 3, 0), 41: (4, 3, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'black', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'black', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'black', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'black', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'black', (4, 2, 1): 'black', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'black', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
16
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 1), (0, 4, 0), (0, 4, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 0), (1, 3, 0), (1, 3, 0), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 0), (2, 3, 0), (2, 3, 0), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 1), (3, 3, 0), (3, 3, 0), (3, 3, 0), (3, 3, 0), (3, 2, 0), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 2, 1), (4, 3, 0), (4, 3, 0), (4, 3, 0), (4, 3, 0), (4, 2, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 3, 0), (4, 2, 1), (3, 2, 1), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (4, 2, 0), (2, 2, 1), (3, 1, 1), (3, 2, 0), (1, 2, 1), (0, 2, 0), (0, 0, 0), (4, 1, 1), (0, 4, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (0, 3, 1), (1, 2, 0), (3, 1, 0), (3, 3, 0), (4, 1, 0), (4, 3, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 0), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 0), 13: (1, 3, 0), 14: (1, 3, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 0), 22: (2, 3, 0), 23: (2, 3, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 0), 31: (3, 3, 0), 32: (3, 3, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 0), 40: (4, 3, 0), 41: (4, 3, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 1): [3], (0, 4, 0): [4, 5], (0, 3, 0): [6], (0, 2, 0): [7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 1): [10], (1, 2, 1): [11], (1, 3, 0): [12, 13, 14, 15], (1, 2, 0): [16], (1, 1, 0): [17], (2, 0, 1): [18], (2, 1, 1): [19], (2, 2, 1): [20], (2, 3, 0): [21, 22, 23, 24], (2, 2, 0): [25], (2, 1, 0): [26], (3, 0, 1): [27], (3, 1, 1): [28], (3, 2, 1): [29], (3, 3, 0): [30, 31, 32, 33], (3, 2, 0): [34], (3, 1, 0): [35], (4, 0, 1): [36], (4, 1, 1): [37], (4, 2, 1): [38], (4, 3, 0): [39, 40, 41, 42], (4, 2, 0): [43], (4, 1, 0): [44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(1, 3, 0)
truest
[12, 13, 14, 15]
4
edges_of_v_in_P
[[(1, 3, 0), (1, 3, 1)], [(1, 3, 0), (1, 4, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[12]
v is
(1, 3, 0)
i is:
1
list of agents on v
[13, 14]
v is
(1, 3, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 0), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 0), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 0), 22: (2, 3, 0), 23: (2, 3, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 0), 31: (3, 3, 0), 32: (3, 3, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 0), 40: (4, 3, 0), 41: (4, 3, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'black', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'black', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'black', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'black', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'black', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'black', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'black', (4, 2, 1): 'black', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'black', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
17
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 1), (0, 4, 0), (0, 4, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 1), (1, 4, 0), (1, 4, 0), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 0), (2, 3, 0), (2, 3, 0), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 1), (3, 3, 0), (3, 3, 0), (3, 3, 0), (3, 3, 0), (3, 2, 0), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 2, 1), (4, 3, 0), (4, 3, 0), (4, 3, 0), (4, 3, 0), (4, 2, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 3, 0), (4, 2, 1), (3, 2, 1), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (4, 2, 0), (2, 2, 1), (3, 1, 1), (3, 2, 0), (1, 2, 1), (0, 2, 0), (0, 0, 0), (4, 1, 1), (0, 4, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (0, 3, 1), (1, 2, 0), (1, 3, 1), (3, 1, 0), (1, 4, 0), (3, 3, 0), (4, 1, 0), (4, 3, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 0), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 0), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 0), 22: (2, 3, 0), 23: (2, 3, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 0), 31: (3, 3, 0), 32: (3, 3, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 0), 40: (4, 3, 0), 41: (4, 3, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 1): [3], (0, 4, 0): [4, 5], (0, 3, 0): [6], (0, 2, 0): [7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 1): [10], (1, 2, 1): [11], (1, 3, 1): [12], (1, 4, 0): [13, 14], (1, 3, 0): [15], (1, 2, 0): [16], (1, 1, 0): [17], (2, 0, 1): [18], (2, 1, 1): [19], (2, 2, 1): [20], (2, 3, 0): [21, 22, 23, 24], (2, 2, 0): [25], (2, 1, 0): [26], (3, 0, 1): [27], (3, 1, 1): [28], (3, 2, 1): [29], (3, 3, 0): [30, 31, 32, 33], (3, 2, 0): [34], (3, 1, 0): [35], (4, 0, 1): [36], (4, 1, 1): [37], (4, 2, 1): [38], (4, 3, 0): [39, 40, 41, 42], (4, 2, 0): [43], (4, 1, 0): [44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(2, 3, 0)
truest
[21, 22, 23, 24]
4
edges_of_v_in_P
[[(2, 3, 0), (2, 3, 1)], [(2, 3, 0), (2, 4, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[21]
v is
(2, 3, 0)
i is:
1
list of agents on v
[22, 23]
v is
(2, 3, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 0), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 0), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 1), 22: (2, 4, 0), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 0), 31: (3, 3, 0), 32: (3, 3, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 0), 40: (4, 3, 0), 41: (4, 3, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'black', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'black', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'black', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'black', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'black', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'black', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'black', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'black', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'black', (4, 2, 1): 'black', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'black', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
18
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 1), (0, 4, 0), (0, 4, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 1), (1, 4, 0), (1, 4, 0), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 1), (2, 4, 0), (2, 4, 0), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 1), (3, 3, 0), (3, 3, 0), (3, 3, 0), (3, 3, 0), (3, 2, 0), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 2, 1), (4, 3, 0), (4, 3, 0), (4, 3, 0), (4, 3, 0), (4, 2, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 3, 0), (4, 2, 1), (3, 2, 1), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (4, 2, 0), (2, 2, 1), (3, 1, 1), (3, 2, 0), (1, 2, 1), (0, 2, 0), (0, 0, 0), (4, 1, 1), (0, 4, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (0, 3, 1), (1, 2, 0), (1, 3, 1), (3, 1, 0), (1, 4, 0), (3, 3, 0), (4, 1, 0), (2, 4, 0), (4, 3, 0), (2, 3, 1), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 0), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 0), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 1), 22: (2, 4, 0), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 0), 31: (3, 3, 0), 32: (3, 3, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 0), 40: (4, 3, 0), 41: (4, 3, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 1): [3], (0, 4, 0): [4, 5], (0, 3, 0): [6], (0, 2, 0): [7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 1): [10], (1, 2, 1): [11], (1, 3, 1): [12], (1, 4, 0): [13, 14], (1, 3, 0): [15], (1, 2, 0): [16], (1, 1, 0): [17], (2, 0, 1): [18], (2, 1, 1): [19], (2, 2, 1): [20], (2, 3, 1): [21], (2, 4, 0): [22, 23], (2, 3, 0): [24], (2, 2, 0): [25], (2, 1, 0): [26], (3, 0, 1): [27], (3, 1, 1): [28], (3, 2, 1): [29], (3, 3, 0): [30, 31, 32, 33], (3, 2, 0): [34], (3, 1, 0): [35], (4, 0, 1): [36], (4, 1, 1): [37], (4, 2, 1): [38], (4, 3, 0): [39, 40, 41, 42], (4, 2, 0): [43], (4, 1, 0): [44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(3, 3, 0)
truest
[30, 31, 32, 33]
4
edges_of_v_in_P
[[(3, 3, 0), (3, 3, 1)], [(3, 3, 0), (3, 4, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[30]
v is
(3, 3, 0)
i is:
1
list of agents on v
[31, 32]
v is
(3, 3, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 0), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 0), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 1), 22: (2, 4, 0), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 1), 31: (3, 4, 0), 32: (3, 4, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 0), 40: (4, 3, 0), 41: (4, 3, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'black', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'black', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'black', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'black', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'black', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'black', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'black', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'black', (3, 3, 1): 'black', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'black', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'black', (4, 2, 1): 'black', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'black', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
19
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 1), (0, 4, 0), (0, 4, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 1), (1, 4, 0), (1, 4, 0), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 1), (2, 4, 0), (2, 4, 0), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 1), (3, 3, 1), (3, 4, 0), (3, 4, 0), (3, 3, 0), (3, 2, 0), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 2, 1), (4, 3, 0), (4, 3, 0), (4, 3, 0), (4, 3, 0), (4, 2, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 3, 0), (4, 2, 1), (3, 2, 1), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (4, 2, 0), (2, 2, 1), (3, 1, 1), (3, 2, 0), (1, 2, 1), (3, 3, 1), (3, 4, 0), (0, 2, 0), (0, 0, 0), (4, 1, 1), (0, 4, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (0, 3, 1), (1, 2, 0), (1, 3, 1), (3, 1, 0), (1, 4, 0), (3, 3, 0), (4, 1, 0), (2, 4, 0), (4, 3, 0), (2, 3, 1), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 0), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 0), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 1), 22: (2, 4, 0), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 1), 31: (3, 4, 0), 32: (3, 4, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 0), 40: (4, 3, 0), 41: (4, 3, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 1): [3], (0, 4, 0): [4, 5], (0, 3, 0): [6], (0, 2, 0): [7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 1): [10], (1, 2, 1): [11], (1, 3, 1): [12], (1, 4, 0): [13, 14], (1, 3, 0): [15], (1, 2, 0): [16], (1, 1, 0): [17], (2, 0, 1): [18], (2, 1, 1): [19], (2, 2, 1): [20], (2, 3, 1): [21], (2, 4, 0): [22, 23], (2, 3, 0): [24], (2, 2, 0): [25], (2, 1, 0): [26], (3, 0, 1): [27], (3, 1, 1): [28], (3, 2, 1): [29], (3, 3, 1): [30], (3, 4, 0): [31, 32], (3, 3, 0): [33], (3, 2, 0): [34], (3, 1, 0): [35], (4, 0, 1): [36], (4, 1, 1): [37], (4, 2, 1): [38], (4, 3, 0): [39, 40, 41, 42], (4, 2, 0): [43], (4, 1, 0): [44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(4, 3, 0)
truest
[39, 40, 41, 42]
4
edges_of_v_in_P
[[(4, 3, 0), (4, 3, 1)], [(4, 3, 0), (4, 4, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[39]
v is
(4, 3, 0)
i is:
1
list of agents on v
[40, 41]
v is
(4, 3, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 0), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 0), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 1), 22: (2, 4, 0), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 1), 31: (3, 4, 0), 32: (3, 4, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 1), 40: (4, 4, 0), 41: (4, 4, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'black', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'black', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'black', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'black', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'black', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'black', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'black', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'black', (3, 3, 1): 'black', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'black', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'black', (4, 2, 1): 'black', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'black', (4, 3, 1): 'black', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'black', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
20
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 1), (0, 4, 0), (0, 4, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 1), (1, 4, 0), (1, 4, 0), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 1), (2, 4, 0), (2, 4, 0), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 1), (3, 3, 1), (3, 4, 0), (3, 4, 0), (3, 3, 0), (3, 2, 0), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 2, 1), (4, 3, 1), (4, 4, 0), (4, 4, 0), (4, 3, 0), (4, 2, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 3, 0), (4, 2, 1), (3, 2, 1), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (4, 2, 0), (2, 2, 1), (4, 4, 0), (3, 1, 1), (3, 2, 0), (1, 2, 1), (3, 3, 1), (3, 4, 0), (0, 2, 0), (4, 3, 1), (0, 0, 0), (4, 1, 1), (0, 4, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (0, 3, 1), (1, 2, 0), (1, 3, 1), (3, 1, 0), (1, 4, 0), (3, 3, 0), (4, 1, 0), (2, 4, 0), (4, 3, 0), (2, 3, 1), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 0), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 0), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 1), 22: (2, 4, 0), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 1), 31: (3, 4, 0), 32: (3, 4, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 1), 40: (4, 4, 0), 41: (4, 4, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 1): [3], (0, 4, 0): [4, 5], (0, 3, 0): [6], (0, 2, 0): [7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 1): [10], (1, 2, 1): [11], (1, 3, 1): [12], (1, 4, 0): [13, 14], (1, 3, 0): [15], (1, 2, 0): [16], (1, 1, 0): [17], (2, 0, 1): [18], (2, 1, 1): [19], (2, 2, 1): [20], (2, 3, 1): [21], (2, 4, 0): [22, 23], (2, 3, 0): [24], (2, 2, 0): [25], (2, 1, 0): [26], (3, 0, 1): [27], (3, 1, 1): [28], (3, 2, 1): [29], (3, 3, 1): [30], (3, 4, 0): [31, 32], (3, 3, 0): [33], (3, 2, 0): [34], (3, 1, 0): [35], (4, 0, 1): [36], (4, 1, 1): [37], (4, 2, 1): [38], (4, 3, 1): [39], (4, 4, 0): [40, 41], (4, 3, 0): [42], (4, 2, 0): [43], (4, 1, 0): [44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(0, 4, 0)
truest
[4, 5]
2
edges_of_v_in_P
[[(0, 4, 0), (0, 4, 1)]]
p is:
[1]
i is:
0
list of agents on v
[4]
v is
(0, 4, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 1), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 0), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 1), 22: (2, 4, 0), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 1), 31: (3, 4, 0), 32: (3, 4, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 1), 40: (4, 4, 0), 41: (4, 4, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'black', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'black', (0, 4, 1): 'black', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'black', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'black', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'black', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'black', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'black', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'black', (3, 3, 1): 'black', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'black', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'black', (4, 2, 1): 'black', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'black', (4, 3, 1): 'black', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'black', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
21
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 1), (0, 4, 1), (0, 4, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 1), (1, 4, 0), (1, 4, 0), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 1), (2, 4, 0), (2, 4, 0), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 1), (3, 3, 1), (3, 4, 0), (3, 4, 0), (3, 3, 0), (3, 2, 0), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 2, 1), (4, 3, 1), (4, 4, 0), (4, 4, 0), (4, 3, 0), (4, 2, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 3, 0), (4, 2, 1), (3, 2, 1), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (0, 4, 1), (3, 0, 0), (4, 0, 0), (2, 0, 1), (4, 2, 0), (2, 2, 1), (4, 4, 0), (3, 1, 1), (3, 2, 0), (1, 2, 1), (3, 3, 1), (3, 4, 0), (0, 2, 0), (4, 3, 1), (0, 0, 0), (4, 1, 1), (0, 4, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (0, 3, 1), (1, 2, 0), (1, 3, 1), (3, 1, 0), (1, 4, 0), (3, 3, 0), (4, 1, 0), (2, 4, 0), (4, 3, 0), (2, 3, 1), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 1), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 0), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 1), 22: (2, 4, 0), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 1), 31: (3, 4, 0), 32: (3, 4, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 1), 40: (4, 4, 0), 41: (4, 4, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 1): [3], (0, 4, 1): [4], (0, 4, 0): [5], (0, 3, 0): [6], (0, 2, 0): [7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 1): [10], (1, 2, 1): [11], (1, 3, 1): [12], (1, 4, 0): [13, 14], (1, 3, 0): [15], (1, 2, 0): [16], (1, 1, 0): [17], (2, 0, 1): [18], (2, 1, 1): [19], (2, 2, 1): [20], (2, 3, 1): [21], (2, 4, 0): [22, 23], (2, 3, 0): [24], (2, 2, 0): [25], (2, 1, 0): [26], (3, 0, 1): [27], (3, 1, 1): [28], (3, 2, 1): [29], (3, 3, 1): [30], (3, 4, 0): [31, 32], (3, 3, 0): [33], (3, 2, 0): [34], (3, 1, 0): [35], (4, 0, 1): [36], (4, 1, 1): [37], (4, 2, 1): [38], (4, 3, 1): [39], (4, 4, 0): [40, 41], (4, 3, 0): [42], (4, 2, 0): [43], (4, 1, 0): [44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(1, 4, 0)
truest
[13, 14]
2
edges_of_v_in_P
[[(1, 4, 0), (1, 4, 1)]]
p is:
[1]
i is:
0
list of agents on v
[13]
v is
(1, 4, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 1), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 1), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 1), 22: (2, 4, 0), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 1), 31: (3, 4, 0), 32: (3, 4, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 1), 40: (4, 4, 0), 41: (4, 4, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'black', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'black', (0, 4, 1): 'black', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'black', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'black', (1, 4, 1): 'black', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'black', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'black', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'black', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'black', (3, 3, 1): 'black', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'black', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'black', (4, 2, 1): 'black', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'black', (4, 3, 1): 'black', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'black', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
22
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 1), (0, 4, 1), (0, 4, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 1), (1, 4, 1), (1, 4, 0), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 1), (2, 4, 0), (2, 4, 0), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 1), (3, 3, 1), (3, 4, 0), (3, 4, 0), (3, 3, 0), (3, 2, 0), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 2, 1), (4, 3, 1), (4, 4, 0), (4, 4, 0), (4, 3, 0), (4, 2, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 3, 0), (4, 2, 1), (3, 2, 1), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (0, 4, 1), (3, 0, 0), (4, 0, 0), (2, 0, 1), (4, 2, 0), (2, 2, 1), (4, 4, 0), (3, 1, 1), (1, 4, 1), (3, 2, 0), (1, 2, 1), (3, 3, 1), (3, 4, 0), (0, 2, 0), (4, 3, 1), (0, 0, 0), (4, 1, 1), (0, 4, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (0, 3, 1), (1, 2, 0), (1, 3, 1), (3, 1, 0), (1, 4, 0), (3, 3, 0), (4, 1, 0), (2, 4, 0), (4, 3, 0), (2, 3, 1), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 1), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 1), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 1), 22: (2, 4, 0), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 1), 31: (3, 4, 0), 32: (3, 4, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 1), 40: (4, 4, 0), 41: (4, 4, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 1): [3], (0, 4, 1): [4], (0, 4, 0): [5], (0, 3, 0): [6], (0, 2, 0): [7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 1): [10], (1, 2, 1): [11], (1, 3, 1): [12], (1, 4, 1): [13], (1, 4, 0): [14], (1, 3, 0): [15], (1, 2, 0): [16], (1, 1, 0): [17], (2, 0, 1): [18], (2, 1, 1): [19], (2, 2, 1): [20], (2, 3, 1): [21], (2, 4, 0): [22, 23], (2, 3, 0): [24], (2, 2, 0): [25], (2, 1, 0): [26], (3, 0, 1): [27], (3, 1, 1): [28], (3, 2, 1): [29], (3, 3, 1): [30], (3, 4, 0): [31, 32], (3, 3, 0): [33], (3, 2, 0): [34], (3, 1, 0): [35], (4, 0, 1): [36], (4, 1, 1): [37], (4, 2, 1): [38], (4, 3, 1): [39], (4, 4, 0): [40, 41], (4, 3, 0): [42], (4, 2, 0): [43], (4, 1, 0): [44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(2, 4, 0)
truest
[22, 23]
2
edges_of_v_in_P
[[(2, 4, 0), (2, 4, 1)]]
p is:
[1]
i is:
0
list of agents on v
[22]
v is
(2, 4, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 1), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 1), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 1), 22: (2, 4, 1), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 1), 31: (3, 4, 0), 32: (3, 4, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 1), 40: (4, 4, 0), 41: (4, 4, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'black', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'black', (0, 4, 1): 'black', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'black', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'black', (1, 4, 1): 'black', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'black', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'black', (2, 4, 1): 'black', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'black', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'black', (3, 3, 1): 'black', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'black', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'black', (4, 2, 1): 'black', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'black', (4, 3, 1): 'black', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'black', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
23
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 1), (0, 4, 1), (0, 4, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 1), (1, 4, 1), (1, 4, 0), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 1), (2, 4, 1), (2, 4, 0), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 1), (3, 3, 1), (3, 4, 0), (3, 4, 0), (3, 3, 0), (3, 2, 0), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 2, 1), (4, 3, 1), (4, 4, 0), (4, 4, 0), (4, 3, 0), (4, 2, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 3, 0), (4, 2, 1), (3, 2, 1), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (0, 4, 1), (3, 0, 0), (4, 0, 0), (2, 0, 1), (4, 2, 0), (2, 2, 1), (4, 4, 0), (3, 1, 1), (1, 4, 1), (3, 2, 0), (1, 2, 1), (3, 3, 1), (3, 4, 0), (0, 2, 0), (4, 3, 1), (0, 0, 0), (4, 1, 1), (2, 4, 1), (0, 4, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (0, 3, 1), (1, 2, 0), (1, 3, 1), (3, 1, 0), (1, 4, 0), (3, 3, 0), (4, 1, 0), (2, 4, 0), (4, 3, 0), (2, 3, 1), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 1), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 1), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 1), 22: (2, 4, 1), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 1), 31: (3, 4, 0), 32: (3, 4, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 1), 40: (4, 4, 0), 41: (4, 4, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 1): [3], (0, 4, 1): [4], (0, 4, 0): [5], (0, 3, 0): [6], (0, 2, 0): [7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 1): [10], (1, 2, 1): [11], (1, 3, 1): [12], (1, 4, 1): [13], (1, 4, 0): [14], (1, 3, 0): [15], (1, 2, 0): [16], (1, 1, 0): [17], (2, 0, 1): [18], (2, 1, 1): [19], (2, 2, 1): [20], (2, 3, 1): [21], (2, 4, 1): [22], (2, 4, 0): [23], (2, 3, 0): [24], (2, 2, 0): [25], (2, 1, 0): [26], (3, 0, 1): [27], (3, 1, 1): [28], (3, 2, 1): [29], (3, 3, 1): [30], (3, 4, 0): [31, 32], (3, 3, 0): [33], (3, 2, 0): [34], (3, 1, 0): [35], (4, 0, 1): [36], (4, 1, 1): [37], (4, 2, 1): [38], (4, 3, 1): [39], (4, 4, 0): [40, 41], (4, 3, 0): [42], (4, 2, 0): [43], (4, 1, 0): [44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(3, 4, 0)
truest
[31, 32]
2
edges_of_v_in_P
[[(3, 4, 0), (3, 4, 1)]]
p is:
[1]
i is:
0
list of agents on v
[31]
v is
(3, 4, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 1), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 1), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 1), 22: (2, 4, 1), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 1), 31: (3, 4, 1), 32: (3, 4, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 1), 40: (4, 4, 0), 41: (4, 4, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'black', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'black', (0, 4, 1): 'black', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'black', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'black', (1, 4, 1): 'black', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'black', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'black', (2, 4, 1): 'black', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'black', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'black', (3, 3, 1): 'black', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'black', (3, 4, 1): 'black', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'black', (4, 2, 1): 'black', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'black', (4, 3, 1): 'black', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'black', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
24
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 1), (0, 4, 1), (0, 4, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 1), (1, 4, 1), (1, 4, 0), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 1), (2, 4, 1), (2, 4, 0), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 1), (3, 3, 1), (3, 4, 1), (3, 4, 0), (3, 3, 0), (3, 2, 0), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 2, 1), (4, 3, 1), (4, 4, 0), (4, 4, 0), (4, 3, 0), (4, 2, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 3, 0), (4, 2, 1), (3, 2, 1), (3, 4, 1), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (0, 4, 1), (3, 0, 0), (4, 0, 0), (2, 0, 1), (4, 2, 0), (2, 2, 1), (4, 4, 0), (3, 1, 1), (1, 4, 1), (3, 2, 0), (1, 2, 1), (3, 3, 1), (3, 4, 0), (0, 2, 0), (4, 3, 1), (0, 0, 0), (4, 1, 1), (2, 4, 1), (0, 4, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (0, 3, 1), (1, 2, 0), (1, 3, 1), (3, 1, 0), (1, 4, 0), (3, 3, 0), (4, 1, 0), (2, 4, 0), (4, 3, 0), (2, 3, 1), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 1), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 1), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 1), 22: (2, 4, 1), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 1), 31: (3, 4, 1), 32: (3, 4, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 1), 40: (4, 4, 0), 41: (4, 4, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 2, 1): [2], (0, 3, 1): [3], (0, 4, 1): [4], (0, 4, 0): [5], (0, 3, 0): [6], (0, 2, 0): [7], (0, 1, 0): [8], (1, 0, 1): [9], (1, 1, 1): [10], (1, 2, 1): [11], (1, 3, 1): [12], (1, 4, 1): [13], (1, 4, 0): [14], (1, 3, 0): [15], (1, 2, 0): [16], (1, 1, 0): [17], (2, 0, 1): [18], (2, 1, 1): [19], (2, 2, 1): [20], (2, 3, 1): [21], (2, 4, 1): [22], (2, 4, 0): [23], (2, 3, 0): [24], (2, 2, 0): [25], (2, 1, 0): [26], (3, 0, 1): [27], (3, 1, 1): [28], (3, 2, 1): [29], (3, 3, 1): [30], (3, 4, 1): [31], (3, 4, 0): [32], (3, 3, 0): [33], (3, 2, 0): [34], (3, 1, 0): [35], (4, 0, 1): [36], (4, 1, 1): [37], (4, 2, 1): [38], (4, 3, 1): [39], (4, 4, 0): [40, 41], (4, 3, 0): [42], (4, 2, 0): [43], (4, 1, 0): [44], (4, 0, 0): [45], (3, 0, 0): [46], (2, 0, 0): [47], (1, 0, 0): [48], (0, 0, 0): [49]}
v is:
(4, 4, 0)
truest
[40, 41]
2
edges_of_v_in_P
[[(4, 4, 0), (4, 4, 1)]]
p is:
[1]
i is:
0
list of agents on v
[40]
v is
(4, 4, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 1), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 1), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 1), 22: (2, 4, 1), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 1), 31: (3, 4, 1), 32: (3, 4, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 1), 40: (4, 4, 1), 41: (4, 4, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'black', (0, 2, 1): 'black', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'black', (0, 3, 1): 'black', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'black', (0, 4, 1): 'black', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'black', (1, 2, 1): 'black', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'black', (1, 3, 1): 'black', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'black', (1, 4, 1): 'black', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'black', (2, 2, 1): 'black', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'black', (2, 3, 1): 'black', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'black', (2, 4, 1): 'black', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'black', (3, 2, 1): 'black', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'black', (3, 3, 1): 'black', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'black', (3, 4, 1): 'black', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'black', (4, 2, 1): 'black', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'black', (4, 3, 1): 'black', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'black', (4, 4, 1): 'black', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
25
values
[(0, 0, 1), (0, 1, 1), (0, 2, 1), (0, 3, 1), (0, 4, 1), (0, 4, 0), (0, 3, 0), (0, 2, 0), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 2, 1), (1, 3, 1), (1, 4, 1), (1, 4, 0), (1, 3, 0), (1, 2, 0), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 2, 1), (2, 3, 1), (2, 4, 1), (2, 4, 0), (2, 3, 0), (2, 2, 0), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 2, 1), (3, 3, 1), (3, 4, 1), (3, 4, 0), (3, 3, 0), (3, 2, 0), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 2, 1), (4, 3, 1), (4, 4, 1), (4, 4, 0), (4, 3, 0), (4, 2, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 3, 0), (4, 4, 1), (4, 2, 1), (3, 2, 1), (3, 4, 1), (1, 3, 0), (0, 0, 1), (2, 3, 0), (0, 2, 1), (1, 0, 1), (1, 1, 0), (0, 4, 1), (3, 0, 0), (4, 0, 0), (2, 0, 1), (4, 2, 0), (2, 2, 1), (4, 4, 0), (3, 1, 1), (1, 4, 1), (3, 2, 0), (1, 2, 1), (3, 3, 1), (3, 4, 0), (0, 2, 0), (4, 3, 1), (0, 0, 0), (4, 1, 1), (2, 4, 1), (0, 4, 0), (1, 0, 0), (2, 0, 0), (2, 2, 0), (0, 1, 1), (2, 1, 1), (0, 3, 1), (1, 2, 0), (1, 3, 1), (3, 1, 0), (1, 4, 0), (3, 3, 0), (4, 1, 0), (2, 4, 0), (4, 3, 0), (2, 3, 1), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 1), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 1), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 1), 22: (2, 4, 1), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 1), 31: (3, 4, 1), 32: (3, 4, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 1), 40: (4, 4, 1), 41: (4, 4, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
agents at the end of INITIAL SET
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 2, 1), 3: (0, 3, 1), 4: (0, 4, 1), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 1), 10: (1, 1, 1), 11: (1, 2, 1), 12: (1, 3, 1), 13: (1, 4, 1), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 1), 19: (2, 1, 1), 20: (2, 2, 1), 21: (2, 3, 1), 22: (2, 4, 1), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 1), 28: (3, 1, 1), 29: (3, 2, 1), 30: (3, 3, 1), 31: (3, 4, 1), 32: (3, 4, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 1), 37: (4, 1, 1), 38: (4, 2, 1), 39: (4, 3, 1), 40: (4, 4, 1), 41: (4, 4, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
are we getting at the start of the brick?
did we pass t == b+1?
i in range is
5
moved
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 2, 2), 3: (0, 3, 2), 4: (0, 4, 2), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 2), 10: (1, 1, 2), 11: (1, 2, 2), 12: (1, 3, 2), 13: (1, 4, 2), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 2), 19: (2, 1, 2), 20: (2, 2, 2), 21: (2, 3, 2), 22: (2, 4, 2), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 2), 28: (3, 1, 2), 29: (3, 2, 2), 30: (3, 3, 2), 31: (3, 4, 2), 32: (3, 4, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 2), 37: (4, 1, 2), 38: (4, 2, 2), 39: (4, 3, 2), 40: (4, 4, 2), 41: (4, 4, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
moved
{0: (0, 0, 3), 1: (0, 1, 3), 2: (0, 2, 3), 3: (0, 3, 3), 4: (0, 4, 3), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 3), 10: (1, 1, 3), 11: (1, 2, 3), 12: (1, 3, 3), 13: (1, 4, 3), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 3), 19: (2, 1, 3), 20: (2, 2, 3), 21: (2, 3, 3), 22: (2, 4, 3), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 3), 28: (3, 1, 3), 29: (3, 2, 3), 30: (3, 3, 3), 31: (3, 4, 3), 32: (3, 4, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 3), 37: (4, 1, 3), 38: (4, 2, 3), 39: (4, 3, 3), 40: (4, 4, 3), 41: (4, 4, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
moved
{0: (0, 0, 4), 1: (0, 1, 4), 2: (0, 2, 4), 3: (0, 3, 4), 4: (0, 4, 4), 5: (0, 4, 0), 6: (0, 3, 0), 7: (0, 2, 0), 8: (0, 1, 0), 9: (1, 0, 4), 10: (1, 1, 4), 11: (1, 2, 4), 12: (1, 3, 4), 13: (1, 4, 4), 14: (1, 4, 0), 15: (1, 3, 0), 16: (1, 2, 0), 17: (1, 1, 0), 18: (2, 0, 4), 19: (2, 1, 4), 20: (2, 2, 4), 21: (2, 3, 4), 22: (2, 4, 4), 23: (2, 4, 0), 24: (2, 3, 0), 25: (2, 2, 0), 26: (2, 1, 0), 27: (3, 0, 4), 28: (3, 1, 4), 29: (3, 2, 4), 30: (3, 3, 4), 31: (3, 4, 4), 32: (3, 4, 0), 33: (3, 3, 0), 34: (3, 2, 0), 35: (3, 1, 0), 36: (4, 0, 4), 37: (4, 1, 4), 38: (4, 2, 4), 39: (4, 3, 4), 40: (4, 4, 4), 41: (4, 4, 0), 42: (4, 3, 0), 43: (4, 2, 0), 44: (4, 1, 0), 45: (4, 0, 0), 46: (3, 0, 0), 47: (2, 0, 0), 48: (1, 0, 0), 49: (0, 0, 0)}
50
no grey nodes remain
after init is 225
move counted is 300
when writing to csv, i is 1
move_counter at starting position is 0
dimensions are the following: [1, 1, 1]
Graph with 1 nodes and 1 edges
[(0, 0, 0)]
list of C nodes
[(0, 0, 0)]
{(0, 0, 0): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
P is :
[[(0, 0, 0)]]
agents at the end of INITIAL SET
{0: (0, 0, 0)}
are we getting at the start of the brick?
range of the o is -1
o currently is 0
are we getting at the start of the brick?
did we pass t == b+1?
i in range is
1
this is where the fun begins
funny business over
1
no grey nodes remain
after init is 0
move counted is 1
when writing to csv, i is 2
move_counter at starting position is 0
dimensions are the following: [2, 2, 2]
Graph with 8 nodes and 12 edges
[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1)]
list of C nodes
[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1)]
{(0, 0, 0): 'grey', (0, 0, 1): 'grey', (0, 1, 0): 'grey', (0, 1, 1): 'grey', (1, 0, 0): 'grey', (1, 0, 1): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
(x,y, z) is:
(0, 0, 1)
[(0, 0, 0), (0, 0, 1)]
(x,y, z) is:
(0, 1, 0)
[(0, 0, 0), (0, 1, 0)]
(x,y, z) is:
(0, 1, 1)
[(0, 0, 0), (0, 1, 0), (0, 1, 1)]
(x,y, z) is:
(1, 0, 0)
[(0, 0, 0), (1, 0, 0)]
(x,y, z) is:
(1, 0, 1)
[(0, 0, 0), (1, 0, 0), (1, 0, 1)]
(x,y, z) is:
(1, 1, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0)]
(x,y, z) is:
(1, 1, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]
P is :
[[(0, 0, 0)], [(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (0, 1, 0), (0, 1, 1)], [(0, 0, 0), (1, 0, 0)], [(0, 0, 0), (1, 0, 0), (1, 0, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]]
flipped_agents
{(0, 0, 0): [0, 1, 2, 3, 4, 5, 6, 7]}
v is:
(0, 0, 0)
truest
[0, 1, 2, 3, 4, 5, 6, 7]
8
edges_of_v_in_P
[[(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)]]
p is:
[1, 2, 4]
i is:
0
list of agents on v
[0]
v is
(0, 0, 0)
i is:
1
list of agents on v
[1, 2]
v is
(0, 0, 0)
i is:
2
list of agents on v
[3, 4, 5, 6]
v is
(0, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 1, 0): 'black', (0, 1, 1): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey'}
iteration is over
nr of iterations so far
1
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (0, 0, 1), (0, 1, 0)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 0): [3, 4, 5, 6], (0, 0, 0): [7]}
v is:
(1, 0, 0)
truest
[3, 4, 5, 6]
4
edges_of_v_in_P
[[(1, 0, 0), (1, 0, 1)], [(1, 0, 0), (1, 1, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[3]
v is
(1, 0, 0)
i is:
1
list of agents on v
[4, 5]
v is
(1, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 1, 0): 'black', (0, 1, 1): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 1, 0): 'black', (1, 1, 1): 'grey'}
iteration is over
nr of iterations so far
2
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (1, 0, 0): [6], (0, 0, 0): [7]}
v is:
(0, 1, 0)
truest
[1, 2]
2
edges_of_v_in_P
[[(0, 1, 0), (0, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[1]
v is
(0, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 1, 0): 'black', (0, 1, 1): 'black', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 1, 0): 'black', (1, 1, 1): 'grey'}
iteration is over
nr of iterations so far
3
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (1, 0, 0): [6], (0, 0, 0): [7]}
v is:
(1, 1, 0)
truest
[4, 5]
2
edges_of_v_in_P
[[(1, 1, 0), (1, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[4]
v is
(1, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 1, 0): 'black', (0, 1, 1): 'black', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 1, 0): 'black', (1, 1, 1): 'black'}
iteration is over
nr of iterations so far
4
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
agents at the end of INITIAL SET
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
are we getting at the start of the brick?
range of the o is 0
o currently is 0
are we getting at the start of the brick?
did we pass t == b+1?
i in range is
2
this is where the fun begins
funny business over
4
no grey nodes remain
after init is 12
move counted is 16
when writing to csv, i is 3
move_counter at starting position is 0
dimensions are the following: [3, 3, 3]
Graph with 27 nodes and 81 edges
[(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 1, 0), (0, 1, 1), (0, 1, 2), (0, 2, 0), (0, 2, 1), (0, 2, 2), (1, 0, 0), (1, 0, 1), (1, 0, 2), (1, 1, 0), (1, 1, 1), (1, 1, 2), (1, 2, 0), (1, 2, 1), (1, 2, 2), (2, 0, 0), (2, 0, 1), (2, 0, 2), (2, 1, 0), (2, 1, 1), (2, 1, 2), (2, 2, 0), (2, 2, 1), (2, 2, 2)]
list of C nodes
[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1), (2, 0, 0), (2, 0, 1), (2, 1, 0), (2, 1, 1)]
{(0, 0, 0): 'grey', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 1, 0): 'grey', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'grey', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
(x,y, z) is:
(0, 0, 1)
[(0, 0, 0), (0, 0, 1)]
(x,y, z) is:
(0, 1, 0)
[(0, 0, 0), (0, 1, 0)]
(x,y, z) is:
(0, 1, 1)
[(0, 0, 0), (0, 1, 0), (0, 1, 1)]
(x,y, z) is:
(1, 0, 0)
[(0, 0, 0), (1, 0, 0)]
(x,y, z) is:
(1, 0, 1)
[(0, 0, 0), (1, 0, 0), (1, 0, 1)]
(x,y, z) is:
(1, 1, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0)]
(x,y, z) is:
(1, 1, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]
(x,y, z) is:
(2, 0, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0)]
(x,y, z) is:
(2, 0, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 0, 1)]
(x,y, z) is:
(2, 1, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0)]
(x,y, z) is:
(2, 1, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 1, 1)]
P is :
[[(0, 0, 0)], [(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (0, 1, 0), (0, 1, 1)], [(0, 0, 0), (1, 0, 0)], [(0, 0, 0), (1, 0, 0), (1, 0, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 0, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 1, 1)]]
flipped_agents
{(0, 0, 0): [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]}
v is:
(0, 0, 0)
truest
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
12
edges_of_v_in_P
[[(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)]]
p is:
[1, 2, 8]
i is:
0
list of agents on v
[0]
v is
(0, 0, 0)
i is:
1
list of agents on v
[1, 2]
v is
(0, 0, 0)
i is:
2
list of agents on v
[3, 4, 5, 6, 7, 8, 9, 10]
v is
(0, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (1, 0, 0), 8: (1, 0, 0), 9: (1, 0, 0), 10: (1, 0, 0), 11: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
1
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (0, 0, 1), (0, 1, 0)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (1, 0, 0), 8: (1, 0, 0), 9: (1, 0, 0), 10: (1, 0, 0), 11: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 0): [3, 4, 5, 6, 7, 8, 9, 10], (0, 0, 0): [11]}
v is:
(1, 0, 0)
truest
[3, 4, 5, 6, 7, 8, 9, 10]
8
edges_of_v_in_P
[[(1, 0, 0), (1, 0, 1)], [(1, 0, 0), (1, 1, 0)], [(1, 0, 0), (2, 0, 0)]]
p is:
[1, 2, 4]
i is:
0
list of agents on v
[3]
v is
(1, 0, 0)
i is:
1
list of agents on v
[4, 5]
v is
(1, 0, 0)
i is:
2
list of agents on v
[6, 7, 8, 9]
v is
(1, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 0), 7: (2, 0, 0), 8: (2, 0, 0), 9: (2, 0, 0), 10: (1, 0, 0), 11: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
2
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 0), 7: (2, 0, 0), 8: (2, 0, 0), 9: (2, 0, 0), 10: (1, 0, 0), 11: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (2, 0, 0): [6, 7, 8, 9], (1, 0, 0): [10], (0, 0, 0): [11]}
v is:
(2, 0, 0)
truest
[6, 7, 8, 9]
4
edges_of_v_in_P
[[(2, 0, 0), (2, 0, 1)], [(2, 0, 0), (2, 1, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[6]
v is
(2, 0, 0)
i is:
1
list of agents on v
[7, 8]
v is
(2, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (2, 0, 0), 10: (1, 0, 0), 11: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
3
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (2, 0, 0), 10: (1, 0, 0), 11: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (2, 0, 1): [6], (2, 1, 0): [7, 8], (2, 0, 0): [9], (1, 0, 0): [10], (0, 0, 0): [11]}
v is:
(0, 1, 0)
truest
[1, 2]
2
edges_of_v_in_P
[[(0, 1, 0), (0, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[1]
v is
(0, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (2, 0, 0), 10: (1, 0, 0), 11: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
4
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (0, 0, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (2, 0, 0), 10: (1, 0, 0), 11: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (2, 0, 1): [6], (2, 1, 0): [7, 8], (2, 0, 0): [9], (1, 0, 0): [10], (0, 0, 0): [11]}
v is:
(1, 1, 0)
truest
[4, 5]
2
edges_of_v_in_P
[[(1, 1, 0), (1, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[4]
v is
(1, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (2, 0, 0), 10: (1, 0, 0), 11: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
5
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (2, 0, 0), 10: (1, 0, 0), 11: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 1): [4], (1, 1, 0): [5], (2, 0, 1): [6], (2, 1, 0): [7, 8], (2, 0, 0): [9], (1, 0, 0): [10], (0, 0, 0): [11]}
v is:
(2, 1, 0)
truest
[7, 8]
2
edges_of_v_in_P
[[(2, 1, 0), (2, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[7]
v is
(2, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (2, 0, 0), 10: (1, 0, 0), 11: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
6
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 1, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(2, 1, 1), (1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (2, 0, 0), 10: (1, 0, 0), 11: (0, 0, 0)}
agents at the end of INITIAL SET
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (2, 0, 0), 10: (1, 0, 0), 11: (0, 0, 0)}
are we getting at the start of the brick?
range of the o is 0
o currently is 0
are we getting at the start of the brick?
did we pass t == b+1?
i in range is
3
moved
{0: (0, 0, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (1, 0, 1), 4: (1, 2, 1), 5: (1, 2, 0), 6: (2, 0, 1), 7: (2, 2, 1), 8: (2, 2, 0), 9: (2, 0, 0), 10: (1, 0, 0), 11: (0, 0, 0)}
range of the o is 0
o currently is 1
are we getting at the start of the brick?
did we pass t == b+1?
i in range is
3
moved
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 2), 3: (1, 0, 2), 4: (1, 1, 2), 5: (1, 1, 2), 6: (2, 0, 2), 7: (2, 1, 2), 8: (2, 1, 2), 9: (2, 0, 2), 10: (1, 0, 2), 11: (0, 0, 2)}
this is where the fun begins
funny business over
12
no grey nodes remain
after init is 24
move counted is 54
when writing to csv, i is 4
move_counter at starting position is 0
dimensions are the following: [4, 4, 4]
Graph with 64 nodes and 192 edges
[(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 1, 0), (0, 1, 1), (0, 1, 2), (0, 1, 3), (0, 2, 0), (0, 2, 1), (0, 2, 2), (0, 2, 3), (0, 3, 0), (0, 3, 1), (0, 3, 2), (0, 3, 3), (1, 0, 0), (1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 1, 0), (1, 1, 1), (1, 1, 2), (1, 1, 3), (1, 2, 0), (1, 2, 1), (1, 2, 2), (1, 2, 3), (1, 3, 0), (1, 3, 1), (1, 3, 2), (1, 3, 3), (2, 0, 0), (2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 1, 0), (2, 1, 1), (2, 1, 2), (2, 1, 3), (2, 2, 0), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 3, 0), (2, 3, 1), (2, 3, 2), (2, 3, 3), (3, 0, 0), (3, 0, 1), (3, 0, 2), (3, 0, 3), (3, 1, 0), (3, 1, 1), (3, 1, 2), (3, 1, 3), (3, 2, 0), (3, 2, 1), (3, 2, 2), (3, 2, 3), (3, 3, 0), (3, 3, 1), (3, 3, 2), (3, 3, 3)]
list of C nodes
[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1), (2, 0, 0), (2, 0, 1), (2, 1, 0), (2, 1, 1), (3, 0, 0), (3, 0, 1), (3, 1, 0), (3, 1, 1)]
{(0, 0, 0): 'grey', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'grey', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'grey', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
(x,y, z) is:
(0, 0, 1)
[(0, 0, 0), (0, 0, 1)]
(x,y, z) is:
(0, 1, 0)
[(0, 0, 0), (0, 1, 0)]
(x,y, z) is:
(0, 1, 1)
[(0, 0, 0), (0, 1, 0), (0, 1, 1)]
(x,y, z) is:
(1, 0, 0)
[(0, 0, 0), (1, 0, 0)]
(x,y, z) is:
(1, 0, 1)
[(0, 0, 0), (1, 0, 0), (1, 0, 1)]
(x,y, z) is:
(1, 1, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0)]
(x,y, z) is:
(1, 1, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]
(x,y, z) is:
(2, 0, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0)]
(x,y, z) is:
(2, 0, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 0, 1)]
(x,y, z) is:
(2, 1, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0)]
(x,y, z) is:
(2, 1, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 1, 1)]
(x,y, z) is:
(3, 0, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0)]
(x,y, z) is:
(3, 0, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 0, 1)]
(x,y, z) is:
(3, 1, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0)]
(x,y, z) is:
(3, 1, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 1, 1)]
P is :
[[(0, 0, 0)], [(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (0, 1, 0), (0, 1, 1)], [(0, 0, 0), (1, 0, 0)], [(0, 0, 0), (1, 0, 0), (1, 0, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 0, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 1, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 0, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 1, 1)]]
flipped_agents
{(0, 0, 0): [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]}
v is:
(0, 0, 0)
truest
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
16
edges_of_v_in_P
[[(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)]]
p is:
[1, 2, 12]
i is:
0
list of agents on v
[0]
v is
(0, 0, 0)
i is:
1
list of agents on v
[1, 2]
v is
(0, 0, 0)
i is:
2
list of agents on v
[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
v is
(0, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (1, 0, 0), 8: (1, 0, 0), 9: (1, 0, 0), 10: (1, 0, 0), 11: (1, 0, 0), 12: (1, 0, 0), 13: (1, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
1
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (0, 0, 1), (0, 1, 0)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (1, 0, 0), 8: (1, 0, 0), 9: (1, 0, 0), 10: (1, 0, 0), 11: (1, 0, 0), 12: (1, 0, 0), 13: (1, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 0): [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], (0, 0, 0): [15]}
v is:
(1, 0, 0)
truest
[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
12
edges_of_v_in_P
[[(1, 0, 0), (1, 0, 1)], [(1, 0, 0), (1, 1, 0)], [(1, 0, 0), (2, 0, 0)]]
p is:
[1, 2, 8]
i is:
0
list of agents on v
[3]
v is
(1, 0, 0)
i is:
1
list of agents on v
[4, 5]
v is
(1, 0, 0)
i is:
2
list of agents on v
[6, 7, 8, 9, 10, 11, 12, 13]
v is
(1, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 0), 7: (2, 0, 0), 8: (2, 0, 0), 9: (2, 0, 0), 10: (2, 0, 0), 11: (2, 0, 0), 12: (2, 0, 0), 13: (2, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
2
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 0), 7: (2, 0, 0), 8: (2, 0, 0), 9: (2, 0, 0), 10: (2, 0, 0), 11: (2, 0, 0), 12: (2, 0, 0), 13: (2, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (2, 0, 0): [6, 7, 8, 9, 10, 11, 12, 13], (1, 0, 0): [14], (0, 0, 0): [15]}
v is:
(2, 0, 0)
truest
[6, 7, 8, 9, 10, 11, 12, 13]
8
edges_of_v_in_P
[[(2, 0, 0), (2, 0, 1)], [(2, 0, 0), (2, 1, 0)], [(2, 0, 0), (3, 0, 0)]]
p is:
[1, 2, 4]
i is:
0
list of agents on v
[6]
v is
(2, 0, 0)
i is:
1
list of agents on v
[7, 8]
v is
(2, 0, 0)
i is:
2
list of agents on v
[9, 10, 11, 12]
v is
(2, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 0), 10: (3, 0, 0), 11: (3, 0, 0), 12: (3, 0, 0), 13: (2, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
3
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (3, 0, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 0), 10: (3, 0, 0), 11: (3, 0, 0), 12: (3, 0, 0), 13: (2, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (2, 0, 1): [6], (2, 1, 0): [7, 8], (3, 0, 0): [9, 10, 11, 12], (2, 0, 0): [13], (1, 0, 0): [14], (0, 0, 0): [15]}
v is:
(3, 0, 0)
truest
[9, 10, 11, 12]
4
edges_of_v_in_P
[[(3, 0, 0), (3, 0, 1)], [(3, 0, 0), (3, 1, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[9]
v is
(3, 0, 0)
i is:
1
list of agents on v
[10, 11]
v is
(3, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (3, 0, 0), 13: (2, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
4
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (3, 0, 0), (0, 0, 0), (3, 1, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (3, 0, 0), 13: (2, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (2, 0, 1): [6], (2, 1, 0): [7, 8], (3, 0, 1): [9], (3, 1, 0): [10, 11], (3, 0, 0): [12], (2, 0, 0): [13], (1, 0, 0): [14], (0, 0, 0): [15]}
v is:
(0, 1, 0)
truest
[1, 2]
2
edges_of_v_in_P
[[(0, 1, 0), (0, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[1]
v is
(0, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (3, 0, 0), 13: (2, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
5
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (3, 0, 0), (0, 0, 0), (3, 1, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (3, 0, 0), 13: (2, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (2, 0, 1): [6], (2, 1, 0): [7, 8], (3, 0, 1): [9], (3, 1, 0): [10, 11], (3, 0, 0): [12], (2, 0, 0): [13], (1, 0, 0): [14], (0, 0, 0): [15]}
v is:
(1, 1, 0)
truest
[4, 5]
2
edges_of_v_in_P
[[(1, 1, 0), (1, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[4]
v is
(1, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (3, 0, 0), 13: (2, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
6
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (3, 0, 0), (0, 0, 0), (3, 1, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (3, 0, 0), 13: (2, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 1): [4], (1, 1, 0): [5], (2, 0, 1): [6], (2, 1, 0): [7, 8], (3, 0, 1): [9], (3, 1, 0): [10, 11], (3, 0, 0): [12], (2, 0, 0): [13], (1, 0, 0): [14], (0, 0, 0): [15]}
v is:
(2, 1, 0)
truest
[7, 8]
2
edges_of_v_in_P
[[(2, 1, 0), (2, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[7]
v is
(2, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (3, 0, 0), 13: (2, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
7
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(2, 1, 1), (1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (3, 0, 0), (0, 0, 0), (3, 1, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (3, 0, 0), 13: (2, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 1): [4], (1, 1, 0): [5], (2, 0, 1): [6], (2, 1, 1): [7], (2, 1, 0): [8], (3, 0, 1): [9], (3, 1, 0): [10, 11], (3, 0, 0): [12], (2, 0, 0): [13], (1, 0, 0): [14], (0, 0, 0): [15]}
v is:
(3, 1, 0)
truest
[10, 11]
2
edges_of_v_in_P
[[(3, 1, 0), (3, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[10]
v is
(3, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 1), 11: (3, 1, 0), 12: (3, 0, 0), 13: (2, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
8
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 1, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(2, 1, 1), (1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (3, 0, 0), (0, 0, 0), (3, 1, 1), (3, 1, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 1), 11: (3, 1, 0), 12: (3, 0, 0), 13: (2, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
agents at the end of INITIAL SET
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 1), 11: (3, 1, 0), 12: (3, 0, 0), 13: (2, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
are we getting at the start of the brick?
range of the o is 1
o currently is 0
are we getting at the start of the brick?
did we pass t == b+1?
i in range is
4
moved
{0: (0, 0, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (1, 0, 1), 4: (1, 2, 1), 5: (1, 2, 0), 6: (2, 0, 1), 7: (2, 2, 1), 8: (2, 2, 0), 9: (3, 0, 1), 10: (3, 2, 1), 11: (3, 2, 0), 12: (3, 0, 0), 13: (2, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
moved
{0: (0, 0, 1), 1: (0, 3, 1), 2: (0, 3, 0), 3: (1, 0, 1), 4: (1, 3, 1), 5: (1, 3, 0), 6: (2, 0, 1), 7: (2, 3, 1), 8: (2, 3, 0), 9: (3, 0, 1), 10: (3, 3, 1), 11: (3, 3, 0), 12: (3, 0, 0), 13: (2, 0, 0), 14: (1, 0, 0), 15: (0, 0, 0)}
range of the o is 1
o currently is 1
are we getting at the start of the brick?
did we pass t == b+1?
i in range is
4
moved
{0: (0, 0, 2), 1: (0, 2, 2), 2: (0, 2, 3), 3: (1, 0, 2), 4: (1, 2, 2), 5: (1, 2, 3), 6: (2, 0, 2), 7: (2, 2, 2), 8: (2, 2, 3), 9: (3, 0, 2), 10: (3, 2, 2), 11: (3, 2, 3), 12: (3, 0, 3), 13: (2, 0, 3), 14: (1, 0, 3), 15: (0, 0, 3)}
moved
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 3), 3: (1, 0, 2), 4: (1, 1, 2), 5: (1, 1, 3), 6: (2, 0, 2), 7: (2, 1, 2), 8: (2, 1, 3), 9: (3, 0, 2), 10: (3, 1, 2), 11: (3, 1, 3), 12: (3, 0, 3), 13: (2, 0, 3), 14: (1, 0, 3), 15: (0, 0, 3)}
this is where the fun begins
funny business over
8
no grey nodes remain
after init is 40
move counted is 96
when writing to csv, i is 5
move_counter at starting position is 0
dimensions are the following: [5, 5, 5]
Graph with 125 nodes and 375 edges
[(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 0, 4), (0, 1, 0), (0, 1, 1), (0, 1, 2), (0, 1, 3), (0, 1, 4), (0, 2, 0), (0, 2, 1), (0, 2, 2), (0, 2, 3), (0, 2, 4), (0, 3, 0), (0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 4, 0), (0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (1, 0, 0), (1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 0, 4), (1, 1, 0), (1, 1, 1), (1, 1, 2), (1, 1, 3), (1, 1, 4), (1, 2, 0), (1, 2, 1), (1, 2, 2), (1, 2, 3), (1, 2, 4), (1, 3, 0), (1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 4, 0), (1, 4, 1), (1, 4, 2), (1, 4, 3), (1, 4, 4), (2, 0, 0), (2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 1, 0), (2, 1, 1), (2, 1, 2), (2, 1, 3), (2, 1, 4), (2, 2, 0), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 3, 0), (2, 3, 1), (2, 3, 2), (2, 3, 3), (2, 3, 4), (2, 4, 0), (2, 4, 1), (2, 4, 2), (2, 4, 3), (2, 4, 4), (3, 0, 0), (3, 0, 1), (3, 0, 2), (3, 0, 3), (3, 0, 4), (3, 1, 0), (3, 1, 1), (3, 1, 2), (3, 1, 3), (3, 1, 4), (3, 2, 0), (3, 2, 1), (3, 2, 2), (3, 2, 3), (3, 2, 4), (3, 3, 0), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 4, 0), (3, 4, 1), (3, 4, 2), (3, 4, 3), (3, 4, 4), (4, 0, 0), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 1, 0), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 2, 0), (4, 2, 1), (4, 2, 2), (4, 2, 3), (4, 2, 4), (4, 3, 0), (4, 3, 1), (4, 3, 2), (4, 3, 3), (4, 3, 4), (4, 4, 0), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4)]
list of C nodes
[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1), (2, 0, 0), (2, 0, 1), (2, 1, 0), (2, 1, 1), (3, 0, 0), (3, 0, 1), (3, 1, 0), (3, 1, 1), (4, 0, 0), (4, 0, 1), (4, 1, 0), (4, 1, 1)]
{(0, 0, 0): 'grey', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'grey', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'grey', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
(x,y, z) is:
(0, 0, 1)
[(0, 0, 0), (0, 0, 1)]
(x,y, z) is:
(0, 1, 0)
[(0, 0, 0), (0, 1, 0)]
(x,y, z) is:
(0, 1, 1)
[(0, 0, 0), (0, 1, 0), (0, 1, 1)]
(x,y, z) is:
(1, 0, 0)
[(0, 0, 0), (1, 0, 0)]
(x,y, z) is:
(1, 0, 1)
[(0, 0, 0), (1, 0, 0), (1, 0, 1)]
(x,y, z) is:
(1, 1, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0)]
(x,y, z) is:
(1, 1, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]
(x,y, z) is:
(2, 0, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0)]
(x,y, z) is:
(2, 0, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 0, 1)]
(x,y, z) is:
(2, 1, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0)]
(x,y, z) is:
(2, 1, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 1, 1)]
(x,y, z) is:
(3, 0, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0)]
(x,y, z) is:
(3, 0, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 0, 1)]
(x,y, z) is:
(3, 1, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0)]
(x,y, z) is:
(3, 1, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 1, 1)]
(x,y, z) is:
(4, 0, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0)]
(x,y, z) is:
(4, 0, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 0, 1)]
(x,y, z) is:
(4, 1, 0)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0)]
(x,y, z) is:
(4, 1, 1)
[(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0), (4, 1, 1)]
P is :
[[(0, 0, 0)], [(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (0, 1, 0), (0, 1, 1)], [(0, 0, 0), (1, 0, 0)], [(0, 0, 0), (1, 0, 0), (1, 0, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 0, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (2, 1, 0), (2, 1, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 0, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (3, 1, 0), (3, 1, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 0, 1)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0)], [(0, 0, 0), (1, 0, 0), (2, 0, 0), (3, 0, 0), (4, 0, 0), (4, 1, 0), (4, 1, 1)]]
flipped_agents
{(0, 0, 0): [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]}
v is:
(0, 0, 0)
truest
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
20
edges_of_v_in_P
[[(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)]]
p is:
[1, 2, 16]
i is:
0
list of agents on v
[0]
v is
(0, 0, 0)
i is:
1
list of agents on v
[1, 2]
v is
(0, 0, 0)
i is:
2
list of agents on v
[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
v is
(0, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (1, 0, 0), 8: (1, 0, 0), 9: (1, 0, 0), 10: (1, 0, 0), 11: (1, 0, 0), 12: (1, 0, 0), 13: (1, 0, 0), 14: (1, 0, 0), 15: (1, 0, 0), 16: (1, 0, 0), 17: (1, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
1
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (0, 0, 1), (0, 1, 0)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (1, 0, 0), 8: (1, 0, 0), 9: (1, 0, 0), 10: (1, 0, 0), 11: (1, 0, 0), 12: (1, 0, 0), 13: (1, 0, 0), 14: (1, 0, 0), 15: (1, 0, 0), 16: (1, 0, 0), 17: (1, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 0): [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], (0, 0, 0): [19]}
v is:
(1, 0, 0)
truest
[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
16
edges_of_v_in_P
[[(1, 0, 0), (1, 0, 1)], [(1, 0, 0), (1, 1, 0)], [(1, 0, 0), (2, 0, 0)]]
p is:
[1, 2, 12]
i is:
0
list of agents on v
[3]
v is
(1, 0, 0)
i is:
1
list of agents on v
[4, 5]
v is
(1, 0, 0)
i is:
2
list of agents on v
[6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
v is
(1, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 0), 7: (2, 0, 0), 8: (2, 0, 0), 9: (2, 0, 0), 10: (2, 0, 0), 11: (2, 0, 0), 12: (2, 0, 0), 13: (2, 0, 0), 14: (2, 0, 0), 15: (2, 0, 0), 16: (2, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
2
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (2, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 0), 7: (2, 0, 0), 8: (2, 0, 0), 9: (2, 0, 0), 10: (2, 0, 0), 11: (2, 0, 0), 12: (2, 0, 0), 13: (2, 0, 0), 14: (2, 0, 0), 15: (2, 0, 0), 16: (2, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (2, 0, 0): [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], (1, 0, 0): [18], (0, 0, 0): [19]}
v is:
(2, 0, 0)
truest
[6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
12
edges_of_v_in_P
[[(2, 0, 0), (2, 0, 1)], [(2, 0, 0), (2, 1, 0)], [(2, 0, 0), (3, 0, 0)]]
p is:
[1, 2, 8]
i is:
0
list of agents on v
[6]
v is
(2, 0, 0)
i is:
1
list of agents on v
[7, 8]
v is
(2, 0, 0)
i is:
2
list of agents on v
[9, 10, 11, 12, 13, 14, 15, 16]
v is
(2, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 0), 10: (3, 0, 0), 11: (3, 0, 0), 12: (3, 0, 0), 13: (3, 0, 0), 14: (3, 0, 0), 15: (3, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
3
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (3, 0, 0), (0, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 0), 10: (3, 0, 0), 11: (3, 0, 0), 12: (3, 0, 0), 13: (3, 0, 0), 14: (3, 0, 0), 15: (3, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (2, 0, 1): [6], (2, 1, 0): [7, 8], (3, 0, 0): [9, 10, 11, 12, 13, 14, 15, 16], (2, 0, 0): [17], (1, 0, 0): [18], (0, 0, 0): [19]}
v is:
(3, 0, 0)
truest
[9, 10, 11, 12, 13, 14, 15, 16]
8
edges_of_v_in_P
[[(3, 0, 0), (3, 0, 1)], [(3, 0, 0), (3, 1, 0)], [(3, 0, 0), (4, 0, 0)]]
p is:
[1, 2, 4]
i is:
0
list of agents on v
[9]
v is
(3, 0, 0)
i is:
1
list of agents on v
[10, 11]
v is
(3, 0, 0)
i is:
2
list of agents on v
[12, 13, 14, 15]
v is
(3, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 0), 13: (4, 0, 0), 14: (4, 0, 0), 15: (4, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
4
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (4, 0, 0), (4, 0, 0), (4, 0, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (3, 0, 0), (0, 0, 0), (3, 1, 0), (4, 0, 0), (2, 0, 1), (1, 0, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 0), 13: (4, 0, 0), 14: (4, 0, 0), 15: (4, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (2, 0, 1): [6], (2, 1, 0): [7, 8], (3, 0, 1): [9], (3, 1, 0): [10, 11], (4, 0, 0): [12, 13, 14, 15], (3, 0, 0): [16], (2, 0, 0): [17], (1, 0, 0): [18], (0, 0, 0): [19]}
v is:
(4, 0, 0)
truest
[12, 13, 14, 15]
4
edges_of_v_in_P
[[(4, 0, 0), (4, 0, 1)], [(4, 0, 0), (4, 1, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[12]
v is
(4, 0, 0)
i is:
1
list of agents on v
[13, 14]
v is
(4, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (4, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
5
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (4, 0, 1), (4, 1, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (4, 0, 1), (3, 0, 0), (3, 1, 0), (0, 0, 0), (4, 0, 0), (2, 0, 1), (1, 0, 0), (4, 1, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (4, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (2, 0, 1): [6], (2, 1, 0): [7, 8], (3, 0, 1): [9], (3, 1, 0): [10, 11], (4, 0, 1): [12], (4, 1, 0): [13, 14], (4, 0, 0): [15], (3, 0, 0): [16], (2, 0, 0): [17], (1, 0, 0): [18], (0, 0, 0): [19]}
v is:
(0, 1, 0)
truest
[1, 2]
2
edges_of_v_in_P
[[(0, 1, 0), (0, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[1]
v is
(0, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (4, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
6
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (4, 0, 1), (4, 1, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (4, 0, 1), (3, 0, 0), (3, 1, 0), (0, 0, 0), (4, 0, 0), (2, 0, 1), (1, 0, 0), (4, 1, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (4, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (2, 0, 1): [6], (2, 1, 0): [7, 8], (3, 0, 1): [9], (3, 1, 0): [10, 11], (4, 0, 1): [12], (4, 1, 0): [13, 14], (4, 0, 0): [15], (3, 0, 0): [16], (2, 0, 0): [17], (1, 0, 0): [18], (0, 0, 0): [19]}
v is:
(1, 1, 0)
truest
[4, 5]
2
edges_of_v_in_P
[[(1, 1, 0), (1, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[4]
v is
(1, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (4, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
7
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (2, 0, 1), (2, 1, 0), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (4, 0, 1), (4, 1, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (4, 0, 1), (3, 0, 0), (3, 1, 0), (0, 0, 0), (4, 0, 0), (2, 0, 1), (1, 0, 0), (4, 1, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 0), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (4, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 1): [4], (1, 1, 0): [5], (2, 0, 1): [6], (2, 1, 0): [7, 8], (3, 0, 1): [9], (3, 1, 0): [10, 11], (4, 0, 1): [12], (4, 1, 0): [13, 14], (4, 0, 0): [15], (3, 0, 0): [16], (2, 0, 0): [17], (1, 0, 0): [18], (0, 0, 0): [19]}
v is:
(2, 1, 0)
truest
[7, 8]
2
edges_of_v_in_P
[[(2, 1, 0), (2, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[7]
v is
(2, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (4, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
8
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 1, 0), (3, 0, 1), (3, 1, 0), (3, 1, 0), (4, 0, 1), (4, 1, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(2, 1, 1), (1, 0, 1), (1, 1, 0), (0, 1, 0), (2, 1, 0), (4, 0, 1), (3, 0, 0), (3, 1, 0), (0, 0, 0), (4, 0, 0), (2, 0, 1), (1, 0, 0), (4, 1, 0), (2, 0, 0), (3, 0, 1), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 0), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (4, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 1): [4], (1, 1, 0): [5], (2, 0, 1): [6], (2, 1, 1): [7], (2, 1, 0): [8], (3, 0, 1): [9], (3, 1, 0): [10, 11], (4, 0, 1): [12], (4, 1, 0): [13, 14], (4, 0, 0): [15], (3, 0, 0): [16], (2, 0, 0): [17], (1, 0, 0): [18], (0, 0, 0): [19]}
v is:
(3, 1, 0)
truest
[10, 11]
2
edges_of_v_in_P
[[(3, 1, 0), (3, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[10]
v is
(3, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 1), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (4, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
9
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 1, 0), (4, 0, 1), (4, 1, 0), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 0, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (3, 1, 1), (0, 0, 0), (1, 0, 0), (2, 0, 0), (0, 1, 1), (2, 1, 1), (3, 1, 0), (4, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 1), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 0), 14: (4, 1, 0), 15: (4, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 1): [4], (1, 1, 0): [5], (2, 0, 1): [6], (2, 1, 1): [7], (2, 1, 0): [8], (3, 0, 1): [9], (3, 1, 1): [10], (3, 1, 0): [11], (4, 0, 1): [12], (4, 1, 0): [13, 14], (4, 0, 0): [15], (3, 0, 0): [16], (2, 0, 0): [17], (1, 0, 0): [18], (0, 0, 0): [19]}
v is:
(4, 1, 0)
truest
[13, 14]
2
edges_of_v_in_P
[[(4, 1, 0), (4, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[13]
v is
(4, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 1), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 1), 14: (4, 1, 0), 15: (4, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'black', (2, 0, 1): 'black', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'black', (2, 1, 1): 'black', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'black', (3, 0, 1): 'black', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'black', (3, 1, 1): 'black', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'black', (4, 0, 1): 'black', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'black', (4, 1, 1): 'black', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
10
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (2, 0, 1), (2, 1, 1), (2, 1, 0), (3, 0, 1), (3, 1, 1), (3, 1, 0), (4, 0, 1), (4, 1, 1), (4, 1, 0), (4, 0, 0), (3, 0, 0), (2, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(0, 1, 0), (2, 1, 0), (4, 0, 1), (0, 0, 1), (1, 0, 1), (1, 1, 0), (3, 0, 0), (4, 0, 0), (2, 0, 1), (3, 1, 1), (0, 0, 0), (4, 1, 1), (1, 0, 0), (2, 0, 0), (0, 1, 1), (2, 1, 1), (3, 1, 0), (4, 1, 0), (3, 0, 1), (1, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 1), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 1), 14: (4, 1, 0), 15: (4, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
agents at the end of INITIAL SET
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (2, 0, 1), 7: (2, 1, 1), 8: (2, 1, 0), 9: (3, 0, 1), 10: (3, 1, 1), 11: (3, 1, 0), 12: (4, 0, 1), 13: (4, 1, 1), 14: (4, 1, 0), 15: (4, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
are we getting at the start of the brick?
range of the o is 1
o currently is 0
are we getting at the start of the brick?
did we pass t == b+1?
i in range is
5
moved
{0: (0, 0, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (1, 0, 1), 4: (1, 2, 1), 5: (1, 2, 0), 6: (2, 0, 1), 7: (2, 2, 1), 8: (2, 2, 0), 9: (3, 0, 1), 10: (3, 2, 1), 11: (3, 2, 0), 12: (4, 0, 1), 13: (4, 2, 1), 14: (4, 2, 0), 15: (4, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
moved
{0: (0, 0, 1), 1: (0, 3, 1), 2: (0, 3, 0), 3: (1, 0, 1), 4: (1, 3, 1), 5: (1, 3, 0), 6: (2, 0, 1), 7: (2, 3, 1), 8: (2, 3, 0), 9: (3, 0, 1), 10: (3, 3, 1), 11: (3, 3, 0), 12: (4, 0, 1), 13: (4, 3, 1), 14: (4, 3, 0), 15: (4, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
moved
{0: (0, 0, 1), 1: (0, 4, 1), 2: (0, 4, 0), 3: (1, 0, 1), 4: (1, 4, 1), 5: (1, 4, 0), 6: (2, 0, 1), 7: (2, 4, 1), 8: (2, 4, 0), 9: (3, 0, 1), 10: (3, 4, 1), 11: (3, 4, 0), 12: (4, 0, 1), 13: (4, 4, 1), 14: (4, 4, 0), 15: (4, 0, 0), 16: (3, 0, 0), 17: (2, 0, 0), 18: (1, 0, 0), 19: (0, 0, 0)}
range of the o is 1
o currently is 1
are we getting at the start of the brick?
did we pass t == b+1?
i in range is
5
moved
{0: (0, 0, 2), 1: (0, 3, 2), 2: (0, 3, 4), 3: (1, 0, 2), 4: (1, 3, 2), 5: (1, 3, 4), 6: (2, 0, 2), 7: (2, 3, 2), 8: (2, 3, 4), 9: (3, 0, 2), 10: (3, 3, 2), 11: (3, 3, 4), 12: (4, 0, 2), 13: (4, 3, 2), 14: (4, 3, 4), 15: (4, 0, 4), 16: (3, 0, 4), 17: (2, 0, 4), 18: (1, 0, 4), 19: (0, 0, 4)}
moved
{0: (0, 0, 2), 1: (0, 2, 2), 2: (0, 2, 4), 3: (1, 0, 2), 4: (1, 2, 2), 5: (1, 2, 4), 6: (2, 0, 2), 7: (2, 2, 2), 8: (2, 2, 4), 9: (3, 0, 2), 10: (3, 2, 2), 11: (3, 2, 4), 12: (4, 0, 2), 13: (4, 2, 2), 14: (4, 2, 4), 15: (4, 0, 4), 16: (3, 0, 4), 17: (2, 0, 4), 18: (1, 0, 4), 19: (0, 0, 4)}
moved
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 4), 3: (1, 0, 2), 4: (1, 1, 2), 5: (1, 1, 4), 6: (2, 0, 2), 7: (2, 1, 2), 8: (2, 1, 4), 9: (3, 0, 2), 10: (3, 1, 2), 11: (3, 1, 4), 12: (4, 0, 2), 13: (4, 1, 2), 14: (4, 1, 4), 15: (4, 0, 4), 16: (3, 0, 4), 17: (2, 0, 4), 18: (1, 0, 4), 19: (0, 0, 4)}
range of the o is 1
o currently is 2
are we getting at the start of the brick?
did we pass t == b+1?
i in range is
5
moved
{0: (0, 0, 3), 1: (0, 2, 3), 2: (0, 2, 3), 3: (1, 0, 3), 4: (1, 2, 3), 5: (1, 2, 3), 6: (2, 0, 3), 7: (2, 2, 3), 8: (2, 2, 3), 9: (3, 0, 3), 10: (3, 2, 3), 11: (3, 2, 3), 12: (4, 0, 3), 13: (4, 2, 3), 14: (4, 2, 3), 15: (4, 0, 3), 16: (3, 0, 3), 17: (2, 0, 3), 18: (1, 0, 3), 19: (0, 0, 3)}
moved
{0: (0, 0, 3), 1: (0, 3, 3), 2: (0, 3, 3), 3: (1, 0, 3), 4: (1, 3, 3), 5: (1, 3, 3), 6: (2, 0, 3), 7: (2, 3, 3), 8: (2, 3, 3), 9: (3, 0, 3), 10: (3, 3, 3), 11: (3, 3, 3), 12: (4, 0, 3), 13: (4, 3, 3), 14: (4, 3, 3), 15: (4, 0, 3), 16: (3, 0, 3), 17: (2, 0, 3), 18: (1, 0, 3), 19: (0, 0, 3)}
moved
{0: (0, 0, 3), 1: (0, 4, 3), 2: (0, 4, 3), 3: (1, 0, 3), 4: (1, 4, 3), 5: (1, 4, 3), 6: (2, 0, 3), 7: (2, 4, 3), 8: (2, 4, 3), 9: (3, 0, 3), 10: (3, 4, 3), 11: (3, 4, 3), 12: (4, 0, 3), 13: (4, 4, 3), 14: (4, 4, 3), 15: (4, 0, 3), 16: (3, 0, 3), 17: (2, 0, 3), 18: (1, 0, 3), 19: (0, 0, 3)}
this is where the fun begins
funny business over
20
no grey nodes remain
after init is 60
move counted is 200
when writing to csv, i is 1
move_counter at starting position is 0
dimensions are the following: [1, 1, 1]
Graph with 1 nodes and 1 edges
[(0, 0, 0)]
list of C nodes
[(0, 0, 0)]
{(0, 0, 0): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
P is :
[[(0, 0, 0)]]
agents at the end of INITIAL SET
{0: (0, 0, 0)}
ITERCUBE s == 6-m commencing
calling CUBE recursively for t-1
cube is starting
1
no grey nodes remain
after init is 0
move counted is 0
when writing to csv, i is 2
move_counter at starting position is 0
dimensions are the following: [2, 2, 2]
Graph with 8 nodes and 12 edges
[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1)]
list of C nodes
[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1)]
{(0, 0, 0): 'grey', (0, 0, 1): 'grey', (0, 1, 0): 'grey', (0, 1, 1): 'grey', (1, 0, 0): 'grey', (1, 0, 1): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
(x,y, z) is:
(0, 0, 1)
[(0, 0, 0), (0, 0, 1)]
(x,y, z) is:
(0, 1, 0)
[(0, 0, 0), (0, 1, 0)]
(x,y, z) is:
(0, 1, 1)
[(0, 0, 0), (0, 1, 0), (0, 1, 1)]
(x,y, z) is:
(1, 0, 0)
[(0, 0, 0), (1, 0, 0)]
(x,y, z) is:
(1, 0, 1)
[(0, 0, 0), (1, 0, 0), (1, 0, 1)]
(x,y, z) is:
(1, 1, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0)]
(x,y, z) is:
(1, 1, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]
P is :
[[(0, 0, 0)], [(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (0, 1, 0), (0, 1, 1)], [(0, 0, 0), (1, 0, 0)], [(0, 0, 0), (1, 0, 0), (1, 0, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]]
flipped_agents
{(0, 0, 0): [0, 1, 2, 3, 4, 5, 6, 7]}
v is:
(0, 0, 0)
truest
[0, 1, 2, 3, 4, 5, 6, 7]
8
edges_of_v_in_P
[[(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)]]
p is:
[1, 2, 4]
i is:
0
list of agents on v
[0]
v is
(0, 0, 0)
i is:
1
list of agents on v
[1, 2]
v is
(0, 0, 0)
i is:
2
list of agents on v
[3, 4, 5, 6]
v is
(0, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 1, 0): 'black', (0, 1, 1): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey'}
iteration is over
nr of iterations so far
1
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (0, 0, 1), (0, 1, 0)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 0): [3, 4, 5, 6], (0, 0, 0): [7]}
v is:
(1, 0, 0)
truest
[3, 4, 5, 6]
4
edges_of_v_in_P
[[(1, 0, 0), (1, 0, 1)], [(1, 0, 0), (1, 1, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[3]
v is
(1, 0, 0)
i is:
1
list of agents on v
[4, 5]
v is
(1, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 1, 0): 'black', (0, 1, 1): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 1, 0): 'black', (1, 1, 1): 'grey'}
iteration is over
nr of iterations so far
2
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (1, 0, 0): [6], (0, 0, 0): [7]}
v is:
(0, 1, 0)
truest
[1, 2]
2
edges_of_v_in_P
[[(0, 1, 0), (0, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[1]
v is
(0, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 1, 0): 'black', (0, 1, 1): 'black', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 1, 0): 'black', (1, 1, 1): 'grey'}
iteration is over
nr of iterations so far
3
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (1, 0, 0): [6], (0, 0, 0): [7]}
v is:
(1, 1, 0)
truest
[4, 5]
2
edges_of_v_in_P
[[(1, 1, 0), (1, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[4]
v is
(1, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 1, 0): 'black', (0, 1, 1): 'black', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 1, 0): 'black', (1, 1, 1): 'black'}
iteration is over
nr of iterations so far
4
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
agents at the end of INITIAL SET
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
ITERCUBE s == 6-m commencing
calling CUBE recursively for t-1
cube is starting
value of y is -1
we finshed
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 1), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 1), 6: (1, 0, 1), 7: (0, 0, 1)}
{0: (0, 0, 0), 1: (0, 1, 0), 2: (0, 1, 1), 3: (1, 0, 0), 4: (1, 1, 0), 5: (1, 1, 1), 6: (1, 0, 1), 7: (0, 0, 1)}
calling CUBE recursively for t-1
cube is starting
value of y is 1
we finshed
8
no grey nodes remain
after init is 12
move counted is 20
when writing to csv, i is 3
move_counter at starting position is 0
dimensions are the following: [3, 3, 3]
Graph with 27 nodes and 81 edges
[(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 1, 0), (0, 1, 1), (0, 1, 2), (0, 2, 0), (0, 2, 1), (0, 2, 2), (1, 0, 0), (1, 0, 1), (1, 0, 2), (1, 1, 0), (1, 1, 1), (1, 1, 2), (1, 2, 0), (1, 2, 1), (1, 2, 2), (2, 0, 0), (2, 0, 1), (2, 0, 2), (2, 1, 0), (2, 1, 1), (2, 1, 2), (2, 2, 0), (2, 2, 1), (2, 2, 2)]
list of C nodes
[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1)]
{(0, 0, 0): 'grey', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 1, 0): 'grey', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'grey', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
(x,y, z) is:
(0, 0, 1)
[(0, 0, 0), (0, 0, 1)]
(x,y, z) is:
(0, 1, 0)
[(0, 0, 0), (0, 1, 0)]
(x,y, z) is:
(0, 1, 1)
[(0, 0, 0), (0, 1, 0), (0, 1, 1)]
(x,y, z) is:
(1, 0, 0)
[(0, 0, 0), (1, 0, 0)]
(x,y, z) is:
(1, 0, 1)
[(0, 0, 0), (1, 0, 0), (1, 0, 1)]
(x,y, z) is:
(1, 1, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0)]
(x,y, z) is:
(1, 1, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]
P is :
[[(0, 0, 0)], [(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (0, 1, 0), (0, 1, 1)], [(0, 0, 0), (1, 0, 0)], [(0, 0, 0), (1, 0, 0), (1, 0, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]]
flipped_agents
{(0, 0, 0): [0, 1, 2, 3, 4, 5, 6, 7]}
v is:
(0, 0, 0)
truest
[0, 1, 2, 3, 4, 5, 6, 7]
8
edges_of_v_in_P
[[(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)]]
p is:
[1, 2, 4]
i is:
0
list of agents on v
[0]
v is
(0, 0, 0)
i is:
1
list of agents on v
[1, 2]
v is
(0, 0, 0)
i is:
2
list of agents on v
[3, 4, 5, 6]
v is
(0, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
1
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (0, 0, 1), (0, 1, 0)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 0): [3, 4, 5, 6], (0, 0, 0): [7]}
v is:
(1, 0, 0)
truest
[3, 4, 5, 6]
4
edges_of_v_in_P
[[(1, 0, 0), (1, 0, 1)], [(1, 0, 0), (1, 1, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[3]
v is
(1, 0, 0)
i is:
1
list of agents on v
[4, 5]
v is
(1, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
2
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (1, 0, 0): [6], (0, 0, 0): [7]}
v is:
(0, 1, 0)
truest
[1, 2]
2
edges_of_v_in_P
[[(0, 1, 0), (0, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[1]
v is
(0, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
3
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (1, 0, 0): [6], (0, 0, 0): [7]}
v is:
(1, 1, 0)
truest
[4, 5]
2
edges_of_v_in_P
[[(1, 1, 0), (1, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[4]
v is
(1, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
4
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
agents at the end of INITIAL SET
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
ITERCUBE s == 6-m commencing
calling CUBE recursively for t-1
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (2, 0, 1), 4: (2, 1, 1), 5: (2, 1, 0), 6: (2, 0, 0), 7: (0, 0, 0)}
value of y is -1
this is where the fun begins
agents are {0: (0, 2, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (2, 2, 1), 4: (2, 1, 1), 5: (2, 1, 0), 6: (2, 2, 0), 7: (0, 2, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 2, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 2, 0), 7: (0, 2, 0)}
we finished with the odd stuff
we finshed
{0: (0, 2, 1), 1: (0, 1, 1), 2: (0, 1, 2), 3: (1, 2, 1), 4: (1, 1, 1), 5: (1, 1, 2), 6: (1, 2, 2), 7: (0, 2, 2)}
{0: (0, 2, 2), 1: (0, 1, 2), 2: (0, 1, 2), 3: (1, 2, 2), 4: (1, 1, 2), 5: (1, 1, 2), 6: (1, 2, 2), 7: (0, 2, 2)}
calling CUBE recursively for t-1
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 2, 2), 1: (0, 1, 2), 2: (0, 1, 2), 3: (2, 2, 2), 4: (2, 1, 2), 5: (2, 1, 2), 6: (2, 2, 2), 7: (0, 2, 2)}
value of y is -1
this is where the fun begins
agents are {0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 2), 3: (2, 0, 2), 4: (2, 1, 2), 5: (2, 1, 2), 6: (2, 0, 2), 7: (0, 0, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 2), 3: (1, 0, 2), 4: (1, 1, 2), 5: (1, 1, 2), 6: (1, 0, 2), 7: (0, 0, 2)}
we finished with the odd stuff
we finshed
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 1), 3: (1, 0, 2), 4: (1, 1, 2), 5: (1, 1, 1), 6: (1, 0, 1), 7: (0, 0, 1)}
{0: (0, 0, 0), 1: (0, 1, 0), 2: (0, 1, 1), 3: (1, 0, 0), 4: (1, 1, 0), 5: (1, 1, 1), 6: (1, 0, 1), 7: (0, 0, 1)}
calling CUBE recursively for t-1
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 0), 1: (0, 1, 0), 2: (0, 1, 1), 3: (2, 0, 0), 4: (2, 1, 0), 5: (2, 1, 1), 6: (2, 0, 1), 7: (0, 0, 1)}
value of y is -1
this is where the fun begins
agents are {0: (0, 2, 0), 1: (0, 1, 0), 2: (0, 1, 1), 3: (2, 2, 0), 4: (2, 1, 0), 5: (2, 1, 1), 6: (2, 2, 1), 7: (0, 2, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 0), 1: (0, 1, 0), 2: (0, 1, 1), 3: (1, 2, 0), 4: (1, 1, 0), 5: (1, 1, 1), 6: (1, 2, 1), 7: (0, 2, 1)}
we finished with the odd stuff
we finshed
8
no grey nodes remain
after init is 12
move counted is 64
when writing to csv, i is 4
move_counter at starting position is 0
dimensions are the following: [4, 4, 4]
Graph with 64 nodes and 192 edges
[(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 1, 0), (0, 1, 1), (0, 1, 2), (0, 1, 3), (0, 2, 0), (0, 2, 1), (0, 2, 2), (0, 2, 3), (0, 3, 0), (0, 3, 1), (0, 3, 2), (0, 3, 3), (1, 0, 0), (1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 1, 0), (1, 1, 1), (1, 1, 2), (1, 1, 3), (1, 2, 0), (1, 2, 1), (1, 2, 2), (1, 2, 3), (1, 3, 0), (1, 3, 1), (1, 3, 2), (1, 3, 3), (2, 0, 0), (2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 1, 0), (2, 1, 1), (2, 1, 2), (2, 1, 3), (2, 2, 0), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 3, 0), (2, 3, 1), (2, 3, 2), (2, 3, 3), (3, 0, 0), (3, 0, 1), (3, 0, 2), (3, 0, 3), (3, 1, 0), (3, 1, 1), (3, 1, 2), (3, 1, 3), (3, 2, 0), (3, 2, 1), (3, 2, 2), (3, 2, 3), (3, 3, 0), (3, 3, 1), (3, 3, 2), (3, 3, 3)]
list of C nodes
[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1)]
{(0, 0, 0): 'grey', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'grey', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'grey', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
(x,y, z) is:
(0, 0, 1)
[(0, 0, 0), (0, 0, 1)]
(x,y, z) is:
(0, 1, 0)
[(0, 0, 0), (0, 1, 0)]
(x,y, z) is:
(0, 1, 1)
[(0, 0, 0), (0, 1, 0), (0, 1, 1)]
(x,y, z) is:
(1, 0, 0)
[(0, 0, 0), (1, 0, 0)]
(x,y, z) is:
(1, 0, 1)
[(0, 0, 0), (1, 0, 0), (1, 0, 1)]
(x,y, z) is:
(1, 1, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0)]
(x,y, z) is:
(1, 1, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]
P is :
[[(0, 0, 0)], [(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (0, 1, 0), (0, 1, 1)], [(0, 0, 0), (1, 0, 0)], [(0, 0, 0), (1, 0, 0), (1, 0, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]]
flipped_agents
{(0, 0, 0): [0, 1, 2, 3, 4, 5, 6, 7]}
v is:
(0, 0, 0)
truest
[0, 1, 2, 3, 4, 5, 6, 7]
8
edges_of_v_in_P
[[(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)]]
p is:
[1, 2, 4]
i is:
0
list of agents on v
[0]
v is
(0, 0, 0)
i is:
1
list of agents on v
[1, 2]
v is
(0, 0, 0)
i is:
2
list of agents on v
[3, 4, 5, 6]
v is
(0, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
1
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (0, 0, 1), (0, 1, 0)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 0): [3, 4, 5, 6], (0, 0, 0): [7]}
v is:
(1, 0, 0)
truest
[3, 4, 5, 6]
4
edges_of_v_in_P
[[(1, 0, 0), (1, 0, 1)], [(1, 0, 0), (1, 1, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[3]
v is
(1, 0, 0)
i is:
1
list of agents on v
[4, 5]
v is
(1, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
2
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (1, 0, 0): [6], (0, 0, 0): [7]}
v is:
(0, 1, 0)
truest
[1, 2]
2
edges_of_v_in_P
[[(0, 1, 0), (0, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[1]
v is
(0, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
3
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (1, 0, 0): [6], (0, 0, 0): [7]}
v is:
(1, 1, 0)
truest
[4, 5]
2
edges_of_v_in_P
[[(1, 1, 0), (1, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[4]
v is
(1, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
4
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
agents at the end of INITIAL SET
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
ITERCUBE s == 6-m commencing
calling CUBE recursively for t-1
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (2, 0, 1), 4: (2, 1, 1), 5: (2, 1, 0), 6: (2, 0, 0), 7: (0, 0, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (3, 0, 1), 4: (3, 1, 1), 5: (3, 1, 0), 6: (3, 0, 0), 7: (0, 0, 0)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 3, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (3, 3, 1), 4: (3, 2, 1), 5: (3, 2, 0), 6: (3, 3, 0), 7: (0, 3, 0)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 3, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (2, 3, 1), 4: (2, 2, 1), 5: (2, 2, 0), 6: (2, 3, 0), 7: (0, 3, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 3, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (1, 3, 1), 4: (1, 2, 1), 5: (1, 2, 0), 6: (1, 3, 0), 7: (0, 3, 0)}
value of y is 1
we finshed
{0: (0, 3, 1), 1: (0, 2, 1), 2: (0, 2, 3), 3: (1, 3, 1), 4: (1, 2, 1), 5: (1, 2, 3), 6: (1, 3, 3), 7: (0, 3, 3)}
{0: (0, 3, 2), 1: (0, 2, 2), 2: (0, 2, 3), 3: (1, 3, 2), 4: (1, 2, 2), 5: (1, 2, 3), 6: (1, 3, 3), 7: (0, 3, 3)}
calling CUBE recursively for t-1
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 3, 2), 1: (0, 2, 2), 2: (0, 2, 3), 3: (2, 3, 2), 4: (2, 2, 2), 5: (2, 2, 3), 6: (2, 3, 3), 7: (0, 3, 3)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 3, 2), 1: (0, 2, 2), 2: (0, 2, 3), 3: (3, 3, 2), 4: (3, 2, 2), 5: (3, 2, 3), 6: (3, 3, 3), 7: (0, 3, 3)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 3), 3: (3, 0, 2), 4: (3, 1, 2), 5: (3, 1, 3), 6: (3, 0, 3), 7: (0, 0, 3)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 3), 3: (2, 0, 2), 4: (2, 1, 2), 5: (2, 1, 3), 6: (2, 0, 3), 7: (0, 0, 3)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 3), 3: (1, 0, 2), 4: (1, 1, 2), 5: (1, 1, 3), 6: (1, 0, 3), 7: (0, 0, 3)}
value of y is 1
we finshed
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 2), 3: (1, 0, 2), 4: (1, 1, 2), 5: (1, 1, 2), 6: (1, 0, 2), 7: (0, 0, 2)}
{0: (0, 0, 3), 1: (0, 1, 3), 2: (0, 1, 2), 3: (1, 0, 3), 4: (1, 1, 3), 5: (1, 1, 2), 6: (1, 0, 2), 7: (0, 0, 2)}
calling CUBE recursively for t-1
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 3), 1: (0, 1, 3), 2: (0, 1, 2), 3: (2, 0, 3), 4: (2, 1, 3), 5: (2, 1, 2), 6: (2, 0, 2), 7: (0, 0, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 3), 1: (0, 1, 3), 2: (0, 1, 2), 3: (3, 0, 3), 4: (3, 1, 3), 5: (3, 1, 2), 6: (3, 0, 2), 7: (0, 0, 2)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 3, 3), 1: (0, 2, 3), 2: (0, 2, 2), 3: (3, 3, 3), 4: (3, 2, 3), 5: (3, 2, 2), 6: (3, 3, 2), 7: (0, 3, 2)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 3, 3), 1: (0, 2, 3), 2: (0, 2, 2), 3: (2, 3, 3), 4: (2, 2, 3), 5: (2, 2, 2), 6: (2, 3, 2), 7: (0, 3, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 3, 3), 1: (0, 2, 3), 2: (0, 2, 2), 3: (1, 3, 3), 4: (1, 2, 3), 5: (1, 2, 2), 6: (1, 3, 2), 7: (0, 3, 2)}
value of y is 1
we finshed
{0: (0, 3, 3), 1: (0, 2, 3), 2: (0, 2, 1), 3: (1, 3, 3), 4: (1, 2, 3), 5: (1, 2, 1), 6: (1, 3, 1), 7: (0, 3, 1)}
{0: (0, 3, 0), 1: (0, 2, 0), 2: (0, 2, 1), 3: (1, 3, 0), 4: (1, 2, 0), 5: (1, 2, 1), 6: (1, 3, 1), 7: (0, 3, 1)}
calling CUBE recursively for t-1
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 3, 0), 1: (0, 2, 0), 2: (0, 2, 1), 3: (2, 3, 0), 4: (2, 2, 0), 5: (2, 2, 1), 6: (2, 3, 1), 7: (0, 3, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 3, 0), 1: (0, 2, 0), 2: (0, 2, 1), 3: (3, 3, 0), 4: (3, 2, 0), 5: (3, 2, 1), 6: (3, 3, 1), 7: (0, 3, 1)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 0, 0), 1: (0, 1, 0), 2: (0, 1, 1), 3: (3, 0, 0), 4: (3, 1, 0), 5: (3, 1, 1), 6: (3, 0, 1), 7: (0, 0, 1)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 0), 1: (0, 1, 0), 2: (0, 1, 1), 3: (2, 0, 0), 4: (2, 1, 0), 5: (2, 1, 1), 6: (2, 0, 1), 7: (0, 0, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 0), 1: (0, 1, 0), 2: (0, 1, 1), 3: (1, 0, 0), 4: (1, 1, 0), 5: (1, 1, 1), 6: (1, 0, 1), 7: (0, 0, 1)}
value of y is 1
we finshed
8
no grey nodes remain
after init is 12
move counted is 132
when writing to csv, i is 5
move_counter at starting position is 0
dimensions are the following: [5, 5, 5]
Graph with 125 nodes and 375 edges
[(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 0, 4), (0, 1, 0), (0, 1, 1), (0, 1, 2), (0, 1, 3), (0, 1, 4), (0, 2, 0), (0, 2, 1), (0, 2, 2), (0, 2, 3), (0, 2, 4), (0, 3, 0), (0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 4, 0), (0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (1, 0, 0), (1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 0, 4), (1, 1, 0), (1, 1, 1), (1, 1, 2), (1, 1, 3), (1, 1, 4), (1, 2, 0), (1, 2, 1), (1, 2, 2), (1, 2, 3), (1, 2, 4), (1, 3, 0), (1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 4, 0), (1, 4, 1), (1, 4, 2), (1, 4, 3), (1, 4, 4), (2, 0, 0), (2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 1, 0), (2, 1, 1), (2, 1, 2), (2, 1, 3), (2, 1, 4), (2, 2, 0), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 3, 0), (2, 3, 1), (2, 3, 2), (2, 3, 3), (2, 3, 4), (2, 4, 0), (2, 4, 1), (2, 4, 2), (2, 4, 3), (2, 4, 4), (3, 0, 0), (3, 0, 1), (3, 0, 2), (3, 0, 3), (3, 0, 4), (3, 1, 0), (3, 1, 1), (3, 1, 2), (3, 1, 3), (3, 1, 4), (3, 2, 0), (3, 2, 1), (3, 2, 2), (3, 2, 3), (3, 2, 4), (3, 3, 0), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 4, 0), (3, 4, 1), (3, 4, 2), (3, 4, 3), (3, 4, 4), (4, 0, 0), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 1, 0), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 2, 0), (4, 2, 1), (4, 2, 2), (4, 2, 3), (4, 2, 4), (4, 3, 0), (4, 3, 1), (4, 3, 2), (4, 3, 3), (4, 3, 4), (4, 4, 0), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4)]
list of C nodes
[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1)]
{(0, 0, 0): 'grey', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'grey', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'grey', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
(x,y, z) is:
(0, 0, 1)
[(0, 0, 0), (0, 0, 1)]
(x,y, z) is:
(0, 1, 0)
[(0, 0, 0), (0, 1, 0)]
(x,y, z) is:
(0, 1, 1)
[(0, 0, 0), (0, 1, 0), (0, 1, 1)]
(x,y, z) is:
(1, 0, 0)
[(0, 0, 0), (1, 0, 0)]
(x,y, z) is:
(1, 0, 1)
[(0, 0, 0), (1, 0, 0), (1, 0, 1)]
(x,y, z) is:
(1, 1, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0)]
(x,y, z) is:
(1, 1, 1)
[(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]
P is :
[[(0, 0, 0)], [(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (0, 1, 0), (0, 1, 1)], [(0, 0, 0), (1, 0, 0)], [(0, 0, 0), (1, 0, 0), (1, 0, 1)], [(0, 0, 0), (1, 0, 0), (1, 1, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0), (1, 1, 1)]]
flipped_agents
{(0, 0, 0): [0, 1, 2, 3, 4, 5, 6, 7]}
v is:
(0, 0, 0)
truest
[0, 1, 2, 3, 4, 5, 6, 7]
8
edges_of_v_in_P
[[(0, 0, 0), (0, 0, 1)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)]]
p is:
[1, 2, 4]
i is:
0
list of agents on v
[0]
v is
(0, 0, 0)
i is:
1
list of agents on v
[1, 2]
v is
(0, 0, 0)
i is:
2
list of agents on v
[3, 4, 5, 6]
v is
(0, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
1
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (0, 0, 1), (0, 1, 0)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 0), 4: (1, 0, 0), 5: (1, 0, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 0): [3, 4, 5, 6], (0, 0, 0): [7]}
v is:
(1, 0, 0)
truest
[3, 4, 5, 6]
4
edges_of_v_in_P
[[(1, 0, 0), (1, 0, 1)], [(1, 0, 0), (1, 1, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[3]
v is
(1, 0, 0)
i is:
1
list of agents on v
[4, 5]
v is
(1, 0, 0)
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
2
values
[(0, 0, 1), (0, 1, 0), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1)}
{0: (0, 0, 1), 1: (0, 1, 0), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 0): [1, 2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (1, 0, 0): [6], (0, 0, 0): [7]}
v is:
(0, 1, 0)
truest
[1, 2]
2
edges_of_v_in_P
[[(0, 1, 0), (0, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[1]
v is
(0, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
3
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 0), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 0), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
flipped_agents
{(0, 0, 1): [0], (0, 1, 1): [1], (0, 1, 0): [2], (1, 0, 1): [3], (1, 1, 0): [4, 5], (1, 0, 0): [6], (0, 0, 0): [7]}
v is:
(1, 1, 0)
truest
[4, 5]
2
edges_of_v_in_P
[[(1, 1, 0), (1, 1, 1)]]
p is:
[1]
i is:
0
list of agents on v
[4]
v is
(1, 1, 0)
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'black', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'black', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'black', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'black', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
4
values
[(0, 0, 1), (0, 1, 1), (0, 1, 0), (1, 0, 1), (1, 1, 1), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 1), (1, 1, 0), (0, 1, 0), (0, 0, 0), (1, 0, 0), (0, 0, 1), (1, 1, 1), (0, 1, 1)}
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
agents at the end of INITIAL SET
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (1, 0, 1), 4: (1, 1, 1), 5: (1, 1, 0), 6: (1, 0, 0), 7: (0, 0, 0)}
ITERCUBE s == 6-m commencing
calling CUBE recursively for t-1
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (2, 0, 1), 4: (2, 1, 1), 5: (2, 1, 0), 6: (2, 0, 0), 7: (0, 0, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (3, 0, 1), 4: (3, 1, 1), 5: (3, 1, 0), 6: (3, 0, 0), 7: (0, 0, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 1), 1: (0, 1, 1), 2: (0, 1, 0), 3: (4, 0, 1), 4: (4, 1, 1), 5: (4, 1, 0), 6: (4, 0, 0), 7: (0, 0, 0)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 4, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (4, 4, 1), 4: (4, 2, 1), 5: (4, 2, 0), 6: (4, 4, 0), 7: (0, 4, 0)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 4, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (3, 4, 1), 4: (3, 2, 1), 5: (3, 2, 0), 6: (3, 4, 0), 7: (0, 4, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 4, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (2, 4, 1), 4: (2, 2, 1), 5: (2, 2, 0), 6: (2, 4, 0), 7: (0, 4, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 4, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (1, 4, 1), 4: (1, 2, 1), 5: (1, 2, 0), 6: (1, 4, 0), 7: (0, 4, 0)}
value of y is 1
this is where the fun begins
agents are {0: (0, 3, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (1, 3, 1), 4: (1, 2, 1), 5: (1, 2, 0), 6: (1, 3, 0), 7: (0, 3, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 3, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (2, 3, 1), 4: (2, 2, 1), 5: (2, 2, 0), 6: (2, 3, 0), 7: (0, 3, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 3, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (3, 3, 1), 4: (3, 2, 1), 5: (3, 2, 0), 6: (3, 3, 0), 7: (0, 3, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 3, 1), 1: (0, 2, 1), 2: (0, 2, 0), 3: (4, 3, 1), 4: (4, 2, 1), 5: (4, 2, 0), 6: (4, 3, 0), 7: (0, 3, 0)}
we finished with the odd stuff
we finshed
{0: (0, 3, 1), 1: (0, 2, 1), 2: (0, 2, 4), 3: (4, 3, 1), 4: (4, 2, 1), 5: (4, 2, 4), 6: (4, 3, 4), 7: (0, 3, 4)}
{0: (0, 3, 2), 1: (0, 2, 2), 2: (0, 2, 4), 3: (4, 3, 2), 4: (4, 2, 2), 5: (4, 2, 4), 6: (4, 3, 4), 7: (0, 3, 4)}
calling CUBE recursively for t-1
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 3, 2), 1: (0, 2, 2), 2: (0, 2, 4), 3: (3, 3, 2), 4: (3, 2, 2), 5: (3, 2, 4), 6: (3, 3, 4), 7: (0, 3, 4)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 3, 2), 1: (0, 2, 2), 2: (0, 2, 4), 3: (2, 3, 2), 4: (2, 2, 2), 5: (2, 2, 4), 6: (2, 3, 4), 7: (0, 3, 4)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 3, 2), 1: (0, 2, 2), 2: (0, 2, 4), 3: (1, 3, 2), 4: (1, 2, 2), 5: (1, 2, 4), 6: (1, 3, 4), 7: (0, 3, 4)}
value of y is 1
if happened (moving along second dimension)
{0: (0, 4, 2), 1: (0, 1, 2), 2: (0, 1, 4), 3: (1, 4, 2), 4: (1, 1, 2), 5: (1, 1, 4), 6: (1, 4, 4), 7: (0, 4, 4)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 4, 2), 1: (0, 1, 2), 2: (0, 1, 4), 3: (2, 4, 2), 4: (2, 1, 2), 5: (2, 1, 4), 6: (2, 4, 4), 7: (0, 4, 4)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 4, 2), 1: (0, 1, 2), 2: (0, 1, 4), 3: (3, 4, 2), 4: (3, 1, 2), 5: (3, 1, 4), 6: (3, 4, 4), 7: (0, 4, 4)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 4, 2), 1: (0, 1, 2), 2: (0, 1, 4), 3: (4, 4, 2), 4: (4, 1, 2), 5: (4, 1, 4), 6: (4, 4, 4), 7: (0, 4, 4)}
value of y is -1
this is where the fun begins
agents are {0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 4), 3: (4, 0, 2), 4: (4, 1, 2), 5: (4, 1, 4), 6: (4, 0, 4), 7: (0, 0, 4)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 4), 3: (3, 0, 2), 4: (3, 1, 2), 5: (3, 1, 4), 6: (3, 0, 4), 7: (0, 0, 4)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 4), 3: (2, 0, 2), 4: (2, 1, 2), 5: (2, 1, 4), 6: (2, 0, 4), 7: (0, 0, 4)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 4), 3: (1, 0, 2), 4: (1, 1, 2), 5: (1, 1, 4), 6: (1, 0, 4), 7: (0, 0, 4)}
we finished with the odd stuff
we finshed
{0: (0, 0, 2), 1: (0, 1, 2), 2: (0, 1, 3), 3: (1, 0, 2), 4: (1, 1, 2), 5: (1, 1, 3), 6: (1, 0, 3), 7: (0, 0, 3)}
{0: (0, 0, 3), 1: (0, 1, 3), 2: (0, 1, 3), 3: (1, 0, 3), 4: (1, 1, 3), 5: (1, 1, 3), 6: (1, 0, 3), 7: (0, 0, 3)}
calling CUBE recursively for t-1
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 3), 1: (0, 1, 3), 2: (0, 1, 3), 3: (2, 0, 3), 4: (2, 1, 3), 5: (2, 1, 3), 6: (2, 0, 3), 7: (0, 0, 3)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 3), 1: (0, 1, 3), 2: (0, 1, 3), 3: (3, 0, 3), 4: (3, 1, 3), 5: (3, 1, 3), 6: (3, 0, 3), 7: (0, 0, 3)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 3), 1: (0, 1, 3), 2: (0, 1, 3), 3: (4, 0, 3), 4: (4, 1, 3), 5: (4, 1, 3), 6: (4, 0, 3), 7: (0, 0, 3)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 4, 3), 1: (0, 2, 3), 2: (0, 2, 3), 3: (4, 4, 3), 4: (4, 2, 3), 5: (4, 2, 3), 6: (4, 4, 3), 7: (0, 4, 3)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 4, 3), 1: (0, 2, 3), 2: (0, 2, 3), 3: (3, 4, 3), 4: (3, 2, 3), 5: (3, 2, 3), 6: (3, 4, 3), 7: (0, 4, 3)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 4, 3), 1: (0, 2, 3), 2: (0, 2, 3), 3: (2, 4, 3), 4: (2, 2, 3), 5: (2, 2, 3), 6: (2, 4, 3), 7: (0, 4, 3)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 4, 3), 1: (0, 2, 3), 2: (0, 2, 3), 3: (1, 4, 3), 4: (1, 2, 3), 5: (1, 2, 3), 6: (1, 4, 3), 7: (0, 4, 3)}
value of y is 1
this is where the fun begins
agents are {0: (0, 3, 3), 1: (0, 2, 3), 2: (0, 2, 3), 3: (1, 3, 3), 4: (1, 2, 3), 5: (1, 2, 3), 6: (1, 3, 3), 7: (0, 3, 3)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 3, 3), 1: (0, 2, 3), 2: (0, 2, 3), 3: (2, 3, 3), 4: (2, 2, 3), 5: (2, 2, 3), 6: (2, 3, 3), 7: (0, 3, 3)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 3, 3), 1: (0, 2, 3), 2: (0, 2, 3), 3: (3, 3, 3), 4: (3, 2, 3), 5: (3, 2, 3), 6: (3, 3, 3), 7: (0, 3, 3)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 3, 3), 1: (0, 2, 3), 2: (0, 2, 3), 3: (4, 3, 3), 4: (4, 2, 3), 5: (4, 2, 3), 6: (4, 3, 3), 7: (0, 3, 3)}
we finished with the odd stuff
we finshed
{0: (0, 3, 3), 1: (0, 2, 3), 2: (0, 2, 2), 3: (4, 3, 3), 4: (4, 2, 3), 5: (4, 2, 2), 6: (4, 3, 2), 7: (0, 3, 2)}
{0: (0, 3, 4), 1: (0, 2, 4), 2: (0, 2, 2), 3: (4, 3, 4), 4: (4, 2, 4), 5: (4, 2, 2), 6: (4, 3, 2), 7: (0, 3, 2)}
calling CUBE recursively for t-1
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 3, 4), 1: (0, 2, 4), 2: (0, 2, 2), 3: (3, 3, 4), 4: (3, 2, 4), 5: (3, 2, 2), 6: (3, 3, 2), 7: (0, 3, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 3, 4), 1: (0, 2, 4), 2: (0, 2, 2), 3: (2, 3, 4), 4: (2, 2, 4), 5: (2, 2, 2), 6: (2, 3, 2), 7: (0, 3, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 3, 4), 1: (0, 2, 4), 2: (0, 2, 2), 3: (1, 3, 4), 4: (1, 2, 4), 5: (1, 2, 2), 6: (1, 3, 2), 7: (0, 3, 2)}
value of y is 1
if happened (moving along second dimension)
{0: (0, 4, 4), 1: (0, 1, 4), 2: (0, 1, 2), 3: (1, 4, 4), 4: (1, 1, 4), 5: (1, 1, 2), 6: (1, 4, 2), 7: (0, 4, 2)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 4, 4), 1: (0, 1, 4), 2: (0, 1, 2), 3: (2, 4, 4), 4: (2, 1, 4), 5: (2, 1, 2), 6: (2, 4, 2), 7: (0, 4, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 4, 4), 1: (0, 1, 4), 2: (0, 1, 2), 3: (3, 4, 4), 4: (3, 1, 4), 5: (3, 1, 2), 6: (3, 4, 2), 7: (0, 4, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 4, 4), 1: (0, 1, 4), 2: (0, 1, 2), 3: (4, 4, 4), 4: (4, 1, 4), 5: (4, 1, 2), 6: (4, 4, 2), 7: (0, 4, 2)}
value of y is -1
this is where the fun begins
agents are {0: (0, 0, 4), 1: (0, 1, 4), 2: (0, 1, 2), 3: (4, 0, 4), 4: (4, 1, 4), 5: (4, 1, 2), 6: (4, 0, 2), 7: (0, 0, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 4), 1: (0, 1, 4), 2: (0, 1, 2), 3: (3, 0, 4), 4: (3, 1, 4), 5: (3, 1, 2), 6: (3, 0, 2), 7: (0, 0, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 4), 1: (0, 1, 4), 2: (0, 1, 2), 3: (2, 0, 4), 4: (2, 1, 4), 5: (2, 1, 2), 6: (2, 0, 2), 7: (0, 0, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 0, 4), 1: (0, 1, 4), 2: (0, 1, 2), 3: (1, 0, 4), 4: (1, 1, 4), 5: (1, 1, 2), 6: (1, 0, 2), 7: (0, 0, 2)}
we finished with the odd stuff
we finshed
{0: (0, 0, 4), 1: (0, 1, 4), 2: (0, 1, 1), 3: (1, 0, 4), 4: (1, 1, 4), 5: (1, 1, 1), 6: (1, 0, 1), 7: (0, 0, 1)}
{0: (0, 0, 0), 1: (0, 1, 0), 2: (0, 1, 1), 3: (1, 0, 0), 4: (1, 1, 0), 5: (1, 1, 1), 6: (1, 0, 1), 7: (0, 0, 1)}
calling CUBE recursively for t-1
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 0), 1: (0, 1, 0), 2: (0, 1, 1), 3: (2, 0, 0), 4: (2, 1, 0), 5: (2, 1, 1), 6: (2, 0, 1), 7: (0, 0, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 0), 1: (0, 1, 0), 2: (0, 1, 1), 3: (3, 0, 0), 4: (3, 1, 0), 5: (3, 1, 1), 6: (3, 0, 1), 7: (0, 0, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 0, 0), 1: (0, 1, 0), 2: (0, 1, 1), 3: (4, 0, 0), 4: (4, 1, 0), 5: (4, 1, 1), 6: (4, 0, 1), 7: (0, 0, 1)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 4, 0), 1: (0, 2, 0), 2: (0, 2, 1), 3: (4, 4, 0), 4: (4, 2, 0), 5: (4, 2, 1), 6: (4, 4, 1), 7: (0, 4, 1)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 4, 0), 1: (0, 2, 0), 2: (0, 2, 1), 3: (3, 4, 0), 4: (3, 2, 0), 5: (3, 2, 1), 6: (3, 4, 1), 7: (0, 4, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 4, 0), 1: (0, 2, 0), 2: (0, 2, 1), 3: (2, 4, 0), 4: (2, 2, 0), 5: (2, 2, 1), 6: (2, 4, 1), 7: (0, 4, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 4, 0), 1: (0, 2, 0), 2: (0, 2, 1), 3: (1, 4, 0), 4: (1, 2, 0), 5: (1, 2, 1), 6: (1, 4, 1), 7: (0, 4, 1)}
value of y is 1
this is where the fun begins
agents are {0: (0, 3, 0), 1: (0, 2, 0), 2: (0, 2, 1), 3: (1, 3, 0), 4: (1, 2, 0), 5: (1, 2, 1), 6: (1, 3, 1), 7: (0, 3, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 3, 0), 1: (0, 2, 0), 2: (0, 2, 1), 3: (2, 3, 0), 4: (2, 2, 0), 5: (2, 2, 1), 6: (2, 3, 1), 7: (0, 3, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 3, 0), 1: (0, 2, 0), 2: (0, 2, 1), 3: (3, 3, 0), 4: (3, 2, 0), 5: (3, 2, 1), 6: (3, 3, 1), 7: (0, 3, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 3, 0), 1: (0, 2, 0), 2: (0, 2, 1), 3: (4, 3, 0), 4: (4, 2, 0), 5: (4, 2, 1), 6: (4, 3, 1), 7: (0, 3, 1)}
we finished with the odd stuff
we finshed
8
no grey nodes remain
after init is 12
move counted is 284
when writing to csv, i is 1
move_counter at starting position is 0
dimensions are the following: [1, 1, 1]
Graph with 1 nodes and 1 edges
[(0, 0, 0)]
list of C nodes
[(0, 0, 0)]
{(0, 0, 0): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
P is :
[[(0, 0, 0)]]
agents at the end of INITIAL SET
{0: (0, 0, 0)}
ITERCUBE else is commencing
ITERCUBE s == 6-m commencing
cube is starting
moving 1 in the 3th dimension
{0: (0, 0, 0)}
1
no grey nodes remain
after init is 0
move counted is 1
when writing to csv, i is 2
move_counter at starting position is 0
dimensions are the following: [2, 2, 2]
Graph with 8 nodes and 12 edges
[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1)]
list of C nodes
[(0, 0, 0), (0, 1, 0), (1, 0, 0), (1, 1, 0)]
{(0, 0, 0): 'grey', (0, 0, 1): 'grey', (0, 1, 0): 'grey', (0, 1, 1): 'grey', (1, 0, 0): 'grey', (1, 0, 1): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
(x,y, z) is:
(0, 1, 0)
[(0, 0, 0), (0, 1, 0)]
(x,y, z) is:
(1, 0, 0)
[(0, 0, 0), (1, 0, 0)]
(x,y, z) is:
(1, 1, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0)]
P is :
[[(0, 0, 0)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0)]]
flipped_agents
{(0, 0, 0): [0, 1, 2, 3]}
v is:
(0, 0, 0)
truest
[0, 1, 2, 3]
4
edges_of_v_in_P
[[(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[0]
v is
(0, 0, 0)
i is:
1
list of agents on v
[1, 2]
v is
(0, 0, 0)
{0: (0, 1, 0), 1: (1, 0, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey'}
iteration is over
nr of iterations so far
1
values
[(0, 1, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (0, 1, 0)}
{0: (0, 1, 0), 1: (1, 0, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
flipped_agents
{(0, 1, 0): [0], (1, 0, 0): [1, 2], (0, 0, 0): [3]}
v is:
(1, 0, 0)
truest
[1, 2]
2
edges_of_v_in_P
[[(1, 0, 0), (1, 1, 0)]]
p is:
[1]
i is:
0
list of agents on v
[1]
v is
(1, 0, 0)
{0: (0, 1, 0), 1: (1, 1, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey'}
iteration is over
nr of iterations so far
2
values
[(0, 1, 0), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (1, 1, 0), (0, 1, 0)}
{0: (0, 1, 0), 1: (1, 1, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
agents at the end of INITIAL SET
{0: (0, 1, 0), 1: (1, 1, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
ITERCUBE else is commencing
ITERCUBE s == 6-m commencing
cube is starting
value of y is -1
we finshed
moving 1 in the 3th dimension
{0: (0, 1, 1), 1: (1, 1, 1), 2: (1, 0, 1), 3: (0, 0, 1)}
ITERCUBE s == 6-m commencing
cube is starting
value of y is 1
we finshed
moving 1 in the 3th dimension
{0: (0, 1, 0), 1: (1, 1, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
4
no grey nodes remain
after init is 4
move counted is 12
when writing to csv, i is 3
move_counter at starting position is 0
dimensions are the following: [3, 3, 3]
Graph with 27 nodes and 81 edges
[(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 1, 0), (0, 1, 1), (0, 1, 2), (0, 2, 0), (0, 2, 1), (0, 2, 2), (1, 0, 0), (1, 0, 1), (1, 0, 2), (1, 1, 0), (1, 1, 1), (1, 1, 2), (1, 2, 0), (1, 2, 1), (1, 2, 2), (2, 0, 0), (2, 0, 1), (2, 0, 2), (2, 1, 0), (2, 1, 1), (2, 1, 2), (2, 2, 0), (2, 2, 1), (2, 2, 2)]
list of C nodes
[(0, 0, 0), (0, 1, 0), (1, 0, 0), (1, 1, 0)]
{(0, 0, 0): 'grey', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 1, 0): 'grey', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'grey', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
(x,y, z) is:
(0, 1, 0)
[(0, 0, 0), (0, 1, 0)]
(x,y, z) is:
(1, 0, 0)
[(0, 0, 0), (1, 0, 0)]
(x,y, z) is:
(1, 1, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0)]
P is :
[[(0, 0, 0)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0)]]
flipped_agents
{(0, 0, 0): [0, 1, 2, 3]}
v is:
(0, 0, 0)
truest
[0, 1, 2, 3]
4
edges_of_v_in_P
[[(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[0]
v is
(0, 0, 0)
i is:
1
list of agents on v
[1, 2]
v is
(0, 0, 0)
{0: (0, 1, 0), 1: (1, 0, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
1
values
[(0, 1, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (0, 1, 0)}
{0: (0, 1, 0), 1: (1, 0, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
flipped_agents
{(0, 1, 0): [0], (1, 0, 0): [1, 2], (0, 0, 0): [3]}
v is:
(1, 0, 0)
truest
[1, 2]
2
edges_of_v_in_P
[[(1, 0, 0), (1, 1, 0)]]
p is:
[1]
i is:
0
list of agents on v
[1]
v is
(1, 0, 0)
{0: (0, 1, 0), 1: (1, 1, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey'}
iteration is over
nr of iterations so far
2
values
[(0, 1, 0), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (1, 1, 0), (0, 1, 0)}
{0: (0, 1, 0), 1: (1, 1, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
agents at the end of INITIAL SET
{0: (0, 1, 0), 1: (1, 1, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
ITERCUBE else is commencing
ITERCUBE s == 6-m commencing
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 0), 1: (2, 1, 0), 2: (2, 0, 0), 3: (0, 0, 0)}
value of y is -1
this is where the fun begins
agents are {0: (0, 1, 0), 1: (2, 1, 0), 2: (2, 2, 0), 3: (0, 2, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 1, 0), 1: (1, 1, 0), 2: (1, 2, 0), 3: (0, 2, 0)}
we finished with the odd stuff
we finshed
moving 1 in the 3th dimension
{0: (0, 1, 1), 1: (1, 1, 1), 2: (1, 2, 1), 3: (0, 2, 1)}
ITERCUBE s == 6-m commencing
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 1), 1: (2, 1, 1), 2: (2, 2, 1), 3: (0, 2, 1)}
value of y is -1
this is where the fun begins
agents are {0: (0, 1, 1), 1: (2, 1, 1), 2: (2, 0, 1), 3: (0, 0, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 1, 1), 1: (1, 1, 1), 2: (1, 0, 1), 3: (0, 0, 1)}
we finished with the odd stuff
we finshed
moving 1 in the 3th dimension
{0: (0, 1, 2), 1: (1, 1, 2), 2: (1, 0, 2), 3: (0, 0, 2)}
ITERCUBE s == 6-m commencing
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 2), 1: (2, 1, 2), 2: (2, 0, 2), 3: (0, 0, 2)}
value of y is -1
this is where the fun begins
agents are {0: (0, 1, 2), 1: (2, 1, 2), 2: (2, 2, 2), 3: (0, 2, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 1, 2), 1: (1, 1, 2), 2: (1, 2, 2), 3: (0, 2, 2)}
we finished with the odd stuff
we finshed
moving 1 in the 3th dimension
{0: (0, 1, 0), 1: (1, 1, 0), 2: (1, 2, 0), 3: (0, 2, 0)}
8
no grey nodes remain
after init is 4
move counted is 34
when writing to csv, i is 4
move_counter at starting position is 0
dimensions are the following: [4, 4, 4]
Graph with 64 nodes and 192 edges
[(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 1, 0), (0, 1, 1), (0, 1, 2), (0, 1, 3), (0, 2, 0), (0, 2, 1), (0, 2, 2), (0, 2, 3), (0, 3, 0), (0, 3, 1), (0, 3, 2), (0, 3, 3), (1, 0, 0), (1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 1, 0), (1, 1, 1), (1, 1, 2), (1, 1, 3), (1, 2, 0), (1, 2, 1), (1, 2, 2), (1, 2, 3), (1, 3, 0), (1, 3, 1), (1, 3, 2), (1, 3, 3), (2, 0, 0), (2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 1, 0), (2, 1, 1), (2, 1, 2), (2, 1, 3), (2, 2, 0), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 3, 0), (2, 3, 1), (2, 3, 2), (2, 3, 3), (3, 0, 0), (3, 0, 1), (3, 0, 2), (3, 0, 3), (3, 1, 0), (3, 1, 1), (3, 1, 2), (3, 1, 3), (3, 2, 0), (3, 2, 1), (3, 2, 2), (3, 2, 3), (3, 3, 0), (3, 3, 1), (3, 3, 2), (3, 3, 3)]
list of C nodes
[(0, 0, 0), (0, 1, 0), (1, 0, 0), (1, 1, 0)]
{(0, 0, 0): 'grey', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'grey', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'grey', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
(x,y, z) is:
(0, 1, 0)
[(0, 0, 0), (0, 1, 0)]
(x,y, z) is:
(1, 0, 0)
[(0, 0, 0), (1, 0, 0)]
(x,y, z) is:
(1, 1, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0)]
P is :
[[(0, 0, 0)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0)]]
flipped_agents
{(0, 0, 0): [0, 1, 2, 3]}
v is:
(0, 0, 0)
truest
[0, 1, 2, 3]
4
edges_of_v_in_P
[[(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[0]
v is
(0, 0, 0)
i is:
1
list of agents on v
[1, 2]
v is
(0, 0, 0)
{0: (0, 1, 0), 1: (1, 0, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
1
values
[(0, 1, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (0, 1, 0)}
{0: (0, 1, 0), 1: (1, 0, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
flipped_agents
{(0, 1, 0): [0], (1, 0, 0): [1, 2], (0, 0, 0): [3]}
v is:
(1, 0, 0)
truest
[1, 2]
2
edges_of_v_in_P
[[(1, 0, 0), (1, 1, 0)]]
p is:
[1]
i is:
0
list of agents on v
[1]
v is
(1, 0, 0)
{0: (0, 1, 0), 1: (1, 1, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey'}
iteration is over
nr of iterations so far
2
values
[(0, 1, 0), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (1, 1, 0), (0, 1, 0)}
{0: (0, 1, 0), 1: (1, 1, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
agents at the end of INITIAL SET
{0: (0, 1, 0), 1: (1, 1, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
ITERCUBE else is commencing
ITERCUBE s == 6-m commencing
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 0), 1: (2, 1, 0), 2: (2, 0, 0), 3: (0, 0, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 0), 1: (3, 1, 0), 2: (3, 0, 0), 3: (0, 0, 0)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 2, 0), 1: (3, 2, 0), 2: (3, 3, 0), 3: (0, 3, 0)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 0), 1: (2, 2, 0), 2: (2, 3, 0), 3: (0, 3, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 0), 1: (1, 2, 0), 2: (1, 3, 0), 3: (0, 3, 0)}
value of y is 1
we finshed
moving 1 in the 3th dimension
{0: (0, 2, 1), 1: (1, 2, 1), 2: (1, 3, 1), 3: (0, 3, 1)}
ITERCUBE s == 6-m commencing
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 2, 1), 1: (2, 2, 1), 2: (2, 3, 1), 3: (0, 3, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 2, 1), 1: (3, 2, 1), 2: (3, 3, 1), 3: (0, 3, 1)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 1, 1), 1: (3, 1, 1), 2: (3, 0, 1), 3: (0, 0, 1)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 1, 1), 1: (2, 1, 1), 2: (2, 0, 1), 3: (0, 0, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 1, 1), 1: (1, 1, 1), 2: (1, 0, 1), 3: (0, 0, 1)}
value of y is 1
we finshed
moving 1 in the 3th dimension
{0: (0, 1, 2), 1: (1, 1, 2), 2: (1, 0, 2), 3: (0, 0, 2)}
ITERCUBE s == 6-m commencing
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 2), 1: (2, 1, 2), 2: (2, 0, 2), 3: (0, 0, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 2), 1: (3, 1, 2), 2: (3, 0, 2), 3: (0, 0, 2)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 2, 2), 1: (3, 2, 2), 2: (3, 3, 2), 3: (0, 3, 2)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 2), 1: (2, 2, 2), 2: (2, 3, 2), 3: (0, 3, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 2), 1: (1, 2, 2), 2: (1, 3, 2), 3: (0, 3, 2)}
value of y is 1
we finshed
moving 1 in the 3th dimension
{0: (0, 2, 3), 1: (1, 2, 3), 2: (1, 3, 3), 3: (0, 3, 3)}
ITERCUBE s == 6-m commencing
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 2, 3), 1: (2, 2, 3), 2: (2, 3, 3), 3: (0, 3, 3)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 2, 3), 1: (3, 2, 3), 2: (3, 3, 3), 3: (0, 3, 3)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 1, 3), 1: (3, 1, 3), 2: (3, 0, 3), 3: (0, 0, 3)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 1, 3), 1: (2, 1, 3), 2: (2, 0, 3), 3: (0, 0, 3)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 1, 3), 1: (1, 1, 3), 2: (1, 0, 3), 3: (0, 0, 3)}
value of y is 1
we finshed
moving 1 in the 3th dimension
{0: (0, 1, 0), 1: (1, 1, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
20
no grey nodes remain
after init is 4
move counted is 68
when writing to csv, i is 5
move_counter at starting position is 0
dimensions are the following: [5, 5, 5]
Graph with 125 nodes and 375 edges
[(0, 0, 0), (0, 0, 1), (0, 0, 2), (0, 0, 3), (0, 0, 4), (0, 1, 0), (0, 1, 1), (0, 1, 2), (0, 1, 3), (0, 1, 4), (0, 2, 0), (0, 2, 1), (0, 2, 2), (0, 2, 3), (0, 2, 4), (0, 3, 0), (0, 3, 1), (0, 3, 2), (0, 3, 3), (0, 3, 4), (0, 4, 0), (0, 4, 1), (0, 4, 2), (0, 4, 3), (0, 4, 4), (1, 0, 0), (1, 0, 1), (1, 0, 2), (1, 0, 3), (1, 0, 4), (1, 1, 0), (1, 1, 1), (1, 1, 2), (1, 1, 3), (1, 1, 4), (1, 2, 0), (1, 2, 1), (1, 2, 2), (1, 2, 3), (1, 2, 4), (1, 3, 0), (1, 3, 1), (1, 3, 2), (1, 3, 3), (1, 3, 4), (1, 4, 0), (1, 4, 1), (1, 4, 2), (1, 4, 3), (1, 4, 4), (2, 0, 0), (2, 0, 1), (2, 0, 2), (2, 0, 3), (2, 0, 4), (2, 1, 0), (2, 1, 1), (2, 1, 2), (2, 1, 3), (2, 1, 4), (2, 2, 0), (2, 2, 1), (2, 2, 2), (2, 2, 3), (2, 2, 4), (2, 3, 0), (2, 3, 1), (2, 3, 2), (2, 3, 3), (2, 3, 4), (2, 4, 0), (2, 4, 1), (2, 4, 2), (2, 4, 3), (2, 4, 4), (3, 0, 0), (3, 0, 1), (3, 0, 2), (3, 0, 3), (3, 0, 4), (3, 1, 0), (3, 1, 1), (3, 1, 2), (3, 1, 3), (3, 1, 4), (3, 2, 0), (3, 2, 1), (3, 2, 2), (3, 2, 3), (3, 2, 4), (3, 3, 0), (3, 3, 1), (3, 3, 2), (3, 3, 3), (3, 3, 4), (3, 4, 0), (3, 4, 1), (3, 4, 2), (3, 4, 3), (3, 4, 4), (4, 0, 0), (4, 0, 1), (4, 0, 2), (4, 0, 3), (4, 0, 4), (4, 1, 0), (4, 1, 1), (4, 1, 2), (4, 1, 3), (4, 1, 4), (4, 2, 0), (4, 2, 1), (4, 2, 2), (4, 2, 3), (4, 2, 4), (4, 3, 0), (4, 3, 1), (4, 3, 2), (4, 3, 3), (4, 3, 4), (4, 4, 0), (4, 4, 1), (4, 4, 2), (4, 4, 3), (4, 4, 4)]
list of C nodes
[(0, 0, 0), (0, 1, 0), (1, 0, 0), (1, 1, 0)]
{(0, 0, 0): 'grey', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'grey', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'grey', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
(x,y, z) is:
(0, 0, 0)
[(0, 0, 0)]
(x,y, z) is:
(0, 1, 0)
[(0, 0, 0), (0, 1, 0)]
(x,y, z) is:
(1, 0, 0)
[(0, 0, 0), (1, 0, 0)]
(x,y, z) is:
(1, 1, 0)
[(0, 0, 0), (1, 0, 0), (1, 1, 0)]
P is :
[[(0, 0, 0)], [(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)], [(0, 0, 0), (1, 0, 0), (1, 1, 0)]]
flipped_agents
{(0, 0, 0): [0, 1, 2, 3]}
v is:
(0, 0, 0)
truest
[0, 1, 2, 3]
4
edges_of_v_in_P
[[(0, 0, 0), (0, 1, 0)], [(0, 0, 0), (1, 0, 0)]]
p is:
[1, 2]
i is:
0
list of agents on v
[0]
v is
(0, 0, 0)
i is:
1
list of agents on v
[1, 2]
v is
(0, 0, 0)
{0: (0, 1, 0), 1: (1, 0, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'grey', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
1
values
[(0, 1, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (0, 1, 0)}
{0: (0, 1, 0), 1: (1, 0, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
flipped_agents
{(0, 1, 0): [0], (1, 0, 0): [1, 2], (0, 0, 0): [3]}
v is:
(1, 0, 0)
truest
[1, 2]
2
edges_of_v_in_P
[[(1, 0, 0), (1, 1, 0)]]
p is:
[1]
i is:
0
list of agents on v
[1]
v is
(1, 0, 0)
{0: (0, 1, 0), 1: (1, 1, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
{(0, 0, 0): 'black', (0, 0, 1): 'grey', (0, 0, 2): 'grey', (0, 0, 3): 'grey', (0, 0, 4): 'grey', (0, 1, 0): 'black', (0, 1, 1): 'grey', (0, 1, 2): 'grey', (0, 1, 3): 'grey', (0, 1, 4): 'grey', (0, 2, 0): 'grey', (0, 2, 1): 'grey', (0, 2, 2): 'grey', (0, 2, 3): 'grey', (0, 2, 4): 'grey', (0, 3, 0): 'grey', (0, 3, 1): 'grey', (0, 3, 2): 'grey', (0, 3, 3): 'grey', (0, 3, 4): 'grey', (0, 4, 0): 'grey', (0, 4, 1): 'grey', (0, 4, 2): 'grey', (0, 4, 3): 'grey', (0, 4, 4): 'grey', (1, 0, 0): 'black', (1, 0, 1): 'grey', (1, 0, 2): 'grey', (1, 0, 3): 'grey', (1, 0, 4): 'grey', (1, 1, 0): 'black', (1, 1, 1): 'grey', (1, 1, 2): 'grey', (1, 1, 3): 'grey', (1, 1, 4): 'grey', (1, 2, 0): 'grey', (1, 2, 1): 'grey', (1, 2, 2): 'grey', (1, 2, 3): 'grey', (1, 2, 4): 'grey', (1, 3, 0): 'grey', (1, 3, 1): 'grey', (1, 3, 2): 'grey', (1, 3, 3): 'grey', (1, 3, 4): 'grey', (1, 4, 0): 'grey', (1, 4, 1): 'grey', (1, 4, 2): 'grey', (1, 4, 3): 'grey', (1, 4, 4): 'grey', (2, 0, 0): 'grey', (2, 0, 1): 'grey', (2, 0, 2): 'grey', (2, 0, 3): 'grey', (2, 0, 4): 'grey', (2, 1, 0): 'grey', (2, 1, 1): 'grey', (2, 1, 2): 'grey', (2, 1, 3): 'grey', (2, 1, 4): 'grey', (2, 2, 0): 'grey', (2, 2, 1): 'grey', (2, 2, 2): 'grey', (2, 2, 3): 'grey', (2, 2, 4): 'grey', (2, 3, 0): 'grey', (2, 3, 1): 'grey', (2, 3, 2): 'grey', (2, 3, 3): 'grey', (2, 3, 4): 'grey', (2, 4, 0): 'grey', (2, 4, 1): 'grey', (2, 4, 2): 'grey', (2, 4, 3): 'grey', (2, 4, 4): 'grey', (3, 0, 0): 'grey', (3, 0, 1): 'grey', (3, 0, 2): 'grey', (3, 0, 3): 'grey', (3, 0, 4): 'grey', (3, 1, 0): 'grey', (3, 1, 1): 'grey', (3, 1, 2): 'grey', (3, 1, 3): 'grey', (3, 1, 4): 'grey', (3, 2, 0): 'grey', (3, 2, 1): 'grey', (3, 2, 2): 'grey', (3, 2, 3): 'grey', (3, 2, 4): 'grey', (3, 3, 0): 'grey', (3, 3, 1): 'grey', (3, 3, 2): 'grey', (3, 3, 3): 'grey', (3, 3, 4): 'grey', (3, 4, 0): 'grey', (3, 4, 1): 'grey', (3, 4, 2): 'grey', (3, 4, 3): 'grey', (3, 4, 4): 'grey', (4, 0, 0): 'grey', (4, 0, 1): 'grey', (4, 0, 2): 'grey', (4, 0, 3): 'grey', (4, 0, 4): 'grey', (4, 1, 0): 'grey', (4, 1, 1): 'grey', (4, 1, 2): 'grey', (4, 1, 3): 'grey', (4, 1, 4): 'grey', (4, 2, 0): 'grey', (4, 2, 1): 'grey', (4, 2, 2): 'grey', (4, 2, 3): 'grey', (4, 2, 4): 'grey', (4, 3, 0): 'grey', (4, 3, 1): 'grey', (4, 3, 2): 'grey', (4, 3, 3): 'grey', (4, 3, 4): 'grey', (4, 4, 0): 'grey', (4, 4, 1): 'grey', (4, 4, 2): 'grey', (4, 4, 3): 'grey', (4, 4, 4): 'grey'}
iteration is over
nr of iterations so far
2
values
[(0, 1, 0), (1, 1, 0), (1, 0, 0), (0, 0, 0)]
set(values)
{(1, 0, 0), (0, 0, 0), (1, 1, 0), (0, 1, 0)}
{0: (0, 1, 0), 1: (1, 1, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
agents at the end of INITIAL SET
{0: (0, 1, 0), 1: (1, 1, 0), 2: (1, 0, 0), 3: (0, 0, 0)}
ITERCUBE else is commencing
ITERCUBE s == 6-m commencing
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 0), 1: (2, 1, 0), 2: (2, 0, 0), 3: (0, 0, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 0), 1: (3, 1, 0), 2: (3, 0, 0), 3: (0, 0, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 0), 1: (4, 1, 0), 2: (4, 0, 0), 3: (0, 0, 0)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 2, 0), 1: (4, 2, 0), 2: (4, 4, 0), 3: (0, 4, 0)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 0), 1: (3, 2, 0), 2: (3, 4, 0), 3: (0, 4, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 0), 1: (2, 2, 0), 2: (2, 4, 0), 3: (0, 4, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 0), 1: (1, 2, 0), 2: (1, 4, 0), 3: (0, 4, 0)}
value of y is 1
this is where the fun begins
agents are {0: (0, 2, 0), 1: (1, 2, 0), 2: (1, 3, 0), 3: (0, 3, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 2, 0), 1: (2, 2, 0), 2: (2, 3, 0), 3: (0, 3, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 2, 0), 1: (3, 2, 0), 2: (3, 3, 0), 3: (0, 3, 0)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 2, 0), 1: (4, 2, 0), 2: (4, 3, 0), 3: (0, 3, 0)}
we finished with the odd stuff
we finshed
moving 1 in the 3th dimension
{0: (0, 2, 1), 1: (4, 2, 1), 2: (4, 3, 1), 3: (0, 3, 1)}
ITERCUBE s == 6-m commencing
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 1), 1: (3, 2, 1), 2: (3, 3, 1), 3: (0, 3, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 1), 1: (2, 2, 1), 2: (2, 3, 1), 3: (0, 3, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 1), 1: (1, 2, 1), 2: (1, 3, 1), 3: (0, 3, 1)}
value of y is 1
if happened (moving along second dimension)
{0: (0, 1, 1), 1: (1, 1, 1), 2: (1, 4, 1), 3: (0, 4, 1)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 1), 1: (2, 1, 1), 2: (2, 4, 1), 3: (0, 4, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 1), 1: (3, 1, 1), 2: (3, 4, 1), 3: (0, 4, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 1), 1: (4, 1, 1), 2: (4, 4, 1), 3: (0, 4, 1)}
value of y is -1
this is where the fun begins
agents are {0: (0, 1, 1), 1: (4, 1, 1), 2: (4, 0, 1), 3: (0, 0, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 1, 1), 1: (3, 1, 1), 2: (3, 0, 1), 3: (0, 0, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 1, 1), 1: (2, 1, 1), 2: (2, 0, 1), 3: (0, 0, 1)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 1, 1), 1: (1, 1, 1), 2: (1, 0, 1), 3: (0, 0, 1)}
we finished with the odd stuff
we finshed
moving 1 in the 3th dimension
{0: (0, 1, 2), 1: (1, 1, 2), 2: (1, 0, 2), 3: (0, 0, 2)}
ITERCUBE s == 6-m commencing
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 2), 1: (2, 1, 2), 2: (2, 0, 2), 3: (0, 0, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 2), 1: (3, 1, 2), 2: (3, 0, 2), 3: (0, 0, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 2), 1: (4, 1, 2), 2: (4, 0, 2), 3: (0, 0, 2)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 2, 2), 1: (4, 2, 2), 2: (4, 4, 2), 3: (0, 4, 2)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 2), 1: (3, 2, 2), 2: (3, 4, 2), 3: (0, 4, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 2), 1: (2, 2, 2), 2: (2, 4, 2), 3: (0, 4, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 2), 1: (1, 2, 2), 2: (1, 4, 2), 3: (0, 4, 2)}
value of y is 1
this is where the fun begins
agents are {0: (0, 2, 2), 1: (1, 2, 2), 2: (1, 3, 2), 3: (0, 3, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 2, 2), 1: (2, 2, 2), 2: (2, 3, 2), 3: (0, 3, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 2, 2), 1: (3, 2, 2), 2: (3, 3, 2), 3: (0, 3, 2)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 2, 2), 1: (4, 2, 2), 2: (4, 3, 2), 3: (0, 3, 2)}
we finished with the odd stuff
we finshed
moving 1 in the 3th dimension
{0: (0, 2, 3), 1: (4, 2, 3), 2: (4, 3, 3), 3: (0, 3, 3)}
ITERCUBE s == 6-m commencing
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 3), 1: (3, 2, 3), 2: (3, 3, 3), 3: (0, 3, 3)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 3), 1: (2, 2, 3), 2: (2, 3, 3), 3: (0, 3, 3)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 3), 1: (1, 2, 3), 2: (1, 3, 3), 3: (0, 3, 3)}
value of y is 1
if happened (moving along second dimension)
{0: (0, 1, 3), 1: (1, 1, 3), 2: (1, 4, 3), 3: (0, 4, 3)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 3), 1: (2, 1, 3), 2: (2, 4, 3), 3: (0, 4, 3)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 3), 1: (3, 1, 3), 2: (3, 4, 3), 3: (0, 4, 3)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 3), 1: (4, 1, 3), 2: (4, 4, 3), 3: (0, 4, 3)}
value of y is -1
this is where the fun begins
agents are {0: (0, 1, 3), 1: (4, 1, 3), 2: (4, 0, 3), 3: (0, 0, 3)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 1, 3), 1: (3, 1, 3), 2: (3, 0, 3), 3: (0, 0, 3)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 1, 3), 1: (2, 1, 3), 2: (2, 0, 3), 3: (0, 0, 3)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 1, 3), 1: (1, 1, 3), 2: (1, 0, 3), 3: (0, 0, 3)}
we finished with the odd stuff
we finshed
moving 1 in the 3th dimension
{0: (0, 1, 4), 1: (1, 1, 4), 2: (1, 0, 4), 3: (0, 0, 4)}
ITERCUBE s == 6-m commencing
cube is starting
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 4), 1: (2, 1, 4), 2: (2, 0, 4), 3: (0, 0, 4)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 4), 1: (3, 1, 4), 2: (3, 0, 4), 3: (0, 0, 4)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 1, 4), 1: (4, 1, 4), 2: (4, 0, 4), 3: (0, 0, 4)}
value of y is -1
if happened (moving along second dimension)
{0: (0, 2, 4), 1: (4, 2, 4), 2: (4, 4, 4), 3: (0, 4, 4)}
we finshed
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 4), 1: (3, 2, 4), 2: (3, 4, 4), 3: (0, 4, 4)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 4), 1: (2, 2, 4), 2: (2, 4, 4), 3: (0, 4, 4)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by -1
{0: (0, 2, 4), 1: (1, 2, 4), 2: (1, 4, 4), 3: (0, 4, 4)}
value of y is 1
this is where the fun begins
agents are {0: (0, 2, 4), 1: (1, 2, 4), 2: (1, 3, 4), 3: (0, 3, 4)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 2, 4), 1: (2, 2, 4), 2: (2, 3, 4), 3: (0, 3, 4)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 2, 4), 1: (3, 2, 4), 2: (3, 3, 4), 3: (0, 3, 4)}
we just moved the agents on the vertices, where 1st coord is 1, its first coord is changed by 1
{0: (0, 2, 4), 1: (4, 2, 4), 2: (4, 3, 4), 3: (0, 3, 4)}
we finished with the odd stuff
we finshed
moving 1 in the 3th dimension
{0: (0, 2, 0), 1: (4, 2, 0), 2: (4, 3, 0), 3: (0, 3, 0)}
20
no grey nodes remain
after init is 4
move counted is 144
1
a is 10
a after f is 10
